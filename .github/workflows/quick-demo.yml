# Generated by Cursor AI Assistant
name: "🎯 Quick Modular Demo"

on:
  workflow_dispatch:
    inputs:
      demo_type:
        description: 'Demo to run'
        required: true
        default: 'dotnet-setup'
        type: choice
        options:
          - 'dotnet-setup'
          - 'single-service-build'
          - 'sonarqube-analysis'
          - 'all-components'

jobs:
  # Demo 1: Basic .NET Setup
  demo-dotnet-setup:
    name: "🔧 Demo: .NET Setup"
    if: ${{ inputs.demo_type == 'dotnet-setup' || inputs.demo_type == 'all-components' }}
    uses: ./.github/workflows/shared-setup-dotnet.yml
    with:
      dotnet-version: '9.0.x'
      working-directory: './Migrated'
      solution-file: 'CreditTransfer.Modern.sln'

  # Demo 2: Build Single Service
  demo-single-service:
    name: "🔨 Demo: Single Service Build"
    runs-on: ubuntu-latest
    if: ${{ inputs.demo_type == 'single-service-build' || inputs.demo_type == 'all-components' }}
    needs: [demo-dotnet-setup]
    
    steps:
    - name: "📥 Checkout Code"
      uses: actions/checkout@v4
    
    - name: "🔨 Build API Service"
      uses: ./.github/actions/matrix-service-build
      with:
        service-name: 'api'
        service-display-name: 'REST API Service'
        dockerfile-path: './Migrated/src/Services/ApiServices/CreditTransferApi/Dockerfile'
        context-path: './Migrated'
        image-name: 'demo-api'
        registry: 'docker.io'
        push-image: false  # Just build, don't push
        version-tag: 'demo-${{ github.run_number }}'
    
    - name: "📊 Demo Results"
      run: |
        echo "## 🎯 Single Service Build Demo" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Successfully demonstrated**:" >> $GITHUB_STEP_SUMMARY
        echo "- Modular service building using composite action" >> $GITHUB_STEP_SUMMARY
        echo "- Docker image creation with standardized tagging" >> $GITHUB_STEP_SUMMARY
        echo "- Build validation and metadata extraction" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🐳 **Image**: demo-api:demo-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

  # Demo 3: SonarQube Analysis
  demo-sonarqube:
    name: "🔍 Demo: SonarQube Analysis"
    if: ${{ inputs.demo_type == 'sonarqube-analysis' || inputs.demo_type == 'all-components' }}
    needs: [demo-dotnet-setup]
    uses: ./.github/workflows/shared-sonarqube-analysis.yml
    with:
      project-key: 'credit-transfer-demo'
      project-name: "Credit Transfer Demo"
      working-directory: './Migrated'
      solution-file: 'CreditTransfer.Modern.sln'
      dotnet-version: '9.0.x'
      skip-build: true  # Solution already built in setup
    secrets:
      sonar-login: admin
      sonar-password: admin123

  # Demo Summary
  demo-summary:
    name: "📊 Demo Summary"
    runs-on: ubuntu-latest
    needs: [demo-dotnet-setup, demo-single-service, demo-sonarqube]
    if: always()
    
    steps:
    - name: "📊 Generate Demo Summary"
      run: |
        echo "# 🎯 Modular Architecture Demo Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📋 Demo Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Demo Type**: ${{ inputs.demo_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered By**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "## 🧩 Component Results" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status | Description |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
        
        # .NET Setup
        if [ "${{ needs.demo-dotnet-setup.result }}" = "success" ]; then
          echo "| 🔧 .NET Setup | ✅ Success | Shared workflow for .NET environment |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.demo-dotnet-setup.result }}" = "skipped" ]; then
          echo "| 🔧 .NET Setup | ⏭️ Skipped | Not included in this demo |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🔧 .NET Setup | ❌ Failed | Check workflow configuration |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Single Service
        if [ "${{ needs.demo-single-service.result }}" = "success" ]; then
          echo "| 🔨 Service Build | ✅ Success | Composite action for Docker builds |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.demo-single-service.result }}" = "skipped" ]; then
          echo "| 🔨 Service Build | ⏭️ Skipped | Not included in this demo |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🔨 Service Build | ❌ Failed | Check Dockerfile and build context |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # SonarQube
        if [ "${{ needs.demo-sonarqube.result }}" = "success" ]; then
          echo "| 🔍 SonarQube | ✅ Success | Shared workflow for code analysis |" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.demo-sonarqube.result }}" = "skipped" ]; then
          echo "| 🔍 SonarQube | ⏭️ Skipped | Not included in this demo |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 🔍 SonarQube | ❌ Failed | Check SonarQube service configuration |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Success message
        TOTAL_JOBS=0
        SUCCESSFUL_JOBS=0
        
        [ "${{ needs.demo-dotnet-setup.result }}" != "skipped" ] && TOTAL_JOBS=$((TOTAL_JOBS + 1))
        [ "${{ needs.demo-single-service.result }}" != "skipped" ] && TOTAL_JOBS=$((TOTAL_JOBS + 1))
        [ "${{ needs.demo-sonarqube.result }}" != "skipped" ] && TOTAL_JOBS=$((TOTAL_JOBS + 1))
        
        [ "${{ needs.demo-dotnet-setup.result }}" = "success" ] && SUCCESSFUL_JOBS=$((SUCCESSFUL_JOBS + 1))
        [ "${{ needs.demo-single-service.result }}" = "success" ] && SUCCESSFUL_JOBS=$((SUCCESSFUL_JOBS + 1))
        [ "${{ needs.demo-sonarqube.result }}" = "success" ] && SUCCESSFUL_JOBS=$((SUCCESSFUL_JOBS + 1))
        
        echo "## 🎉 Demo Results: $SUCCESSFUL_JOBS/$TOTAL_JOBS Components Successful" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ $SUCCESSFUL_JOBS -eq $TOTAL_JOBS ] && [ $TOTAL_JOBS -gt 0 ]; then
          echo "### ✅ All Components Working Perfectly!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Your modular architecture is ready for production use:**" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Shared workflows are functioning correctly" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Composite actions are working as expected" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Service configurations match your project structure" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Docker builds are successfully creating images" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ⚠️ Some Issues Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next steps to fix issues:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Check individual job logs for specific errors" >> $GITHUB_STEP_SUMMARY
          echo "2. Verify Dockerfile paths match your project structure" >> $GITHUB_STEP_SUMMARY
          echo "3. Ensure all required secrets are configured" >> $GITHUB_STEP_SUMMARY
          echo "4. Check service matrix configurations" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Ready to Use in Production!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Apply to your main CI/CD pipeline:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Update \`ci-build-test.yml\` to use modular components" >> $GITHUB_STEP_SUMMARY
        echo "2. Replace duplicate Docker builds with service matrix" >> $GITHUB_STEP_SUMMARY
        echo "3. Use shared .NET setup across all workflows" >> $GITHUB_STEP_SUMMARY
        echo "4. Standardize SonarQube analysis with shared workflow" >> $GITHUB_STEP_SUMMARY