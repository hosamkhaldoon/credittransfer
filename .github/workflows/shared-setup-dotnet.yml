# Generated by Cursor AI Assistant
name: "🔧 Shared: .NET Setup"

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: '.NET version to install'
        required: false
        default: '9.0.x'
        type: string
      working-directory:
        description: 'Working directory for the build'
        required: false
        default: './Migrated'
        type: string
      solution-file:
        description: 'Solution file to build'
        required: false
        default: '*.sln'
        type: string
      configuration:
        description: 'Build configuration'
        required: false
        default: 'Release'
        type: string
    outputs:
      solution-path:
        description: 'Full path to solution file'
        value: ${{ jobs.setup.outputs.solution-path }}
      version:
        description: 'Generated version number'
        value: ${{ jobs.setup.outputs.version }}

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: '1'

jobs:
  setup:
    name: "🔧 Setup .NET Environment"
    runs-on: ubuntu-latest
    outputs:
      solution-path: ${{ steps.paths.outputs.solution-path }}
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - name: "📥 Checkout Code"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: "🔧 Setup .NET ${{ inputs.dotnet-version }}"
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: "📁 Setup Paths"
      id: paths
      run: |
        SOLUTION_PATH="${{ inputs.working-directory }}/${{ inputs.solution-file }}"
        echo "solution-path=$SOLUTION_PATH" >> $GITHUB_OUTPUT
        echo "✅ Solution path: $SOLUTION_PATH"

    - name: "🏷️ Generate Version"
      id: version
      run: |
        VERSION=$(git rev-parse --short HEAD 2>/dev/null || echo "auto-$(date +%Y%m%d-%H%M%S)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "✅ Generated version: $VERSION"

    - name: "📦 Restore Dependencies"
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "📦 Restoring NuGet packages..."
        dotnet restore ${{ inputs.solution-file }} --verbosity minimal

    - name: "🔨 Build Solution"
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "🔨 Building solution in ${{ inputs.configuration }} mode..."
        dotnet build ${{ inputs.solution-file }} \
          --configuration ${{ inputs.configuration }} \
          --no-restore \
          --verbosity minimal