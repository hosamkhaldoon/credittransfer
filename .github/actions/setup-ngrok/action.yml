# Generated by Cursor AI Assistant
name: "🌐 Setup Ngrok Public Access"
description: "Sets up ngrok tunnel for public access to local services"

inputs:
  port:
    description: 'Local port to expose'
    required: true
  auth-token:
    description: 'Ngrok authentication token'
    required: false
  duration-minutes:
    description: 'How long to keep tunnel open (minutes)'
    required: false
    default: '30'
  service-name:
    description: 'Name of the service being exposed'
    required: false
    default: 'Service'
  service-url-path:
    description: 'URL path to add to service links'
    required: false
    default: ''

outputs:
  public-url:
    description: 'Public ngrok URL'
    value: ${{ steps.tunnel.outputs.public-url }}
  tunnel-created:
    description: 'Whether tunnel was successfully created'
    value: ${{ steps.tunnel.outputs.tunnel-created }}

runs:
  using: composite
  steps:
    - name: "🌐 Install ngrok"
      shell: bash
      run: |
        echo "🌐 Installing ngrok..."
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok

    - name: "🚀 Create Public Tunnel"
      id: tunnel
      shell: bash
      run: |
        if [ -n "${{ inputs.auth-token }}" ]; then
          echo "🔑 Using provided ngrok auth token..."
          ngrok config add-authtoken "${{ inputs.auth-token }}"
          
          echo "🚀 Creating authenticated public tunnel..."
          ngrok http ${{ inputs.port }} --log=stdout --request-header-add "ngrok-skip-browser-warning:any" > ngrok.log 2>&1 &
          NGROK_PID=$!
          
          # Wait for ngrok to initialize
          sleep 15
          
          # Get public URL
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*"' | grep https | cut -d'"' -f4)
          
          if [ -n "$NGROK_URL" ]; then
            echo "tunnel-created=true" >> $GITHUB_OUTPUT
            echo "public-url=$NGROK_URL" >> $GITHUB_OUTPUT
            echo "ngrok-pid=$NGROK_PID" >> $GITHUB_OUTPUT
            
            echo "🎉 SUCCESS! ${{ inputs.service-name }} is now publicly accessible!"
            echo ""
            echo "🔗 **Access URL**: $NGROK_URL"
            echo "🔗 **Direct URL (No Warning)**: $NGROK_URL?ngrok-skip-browser-warning=true"
            echo "⏰ **Available for**: ${{ inputs.duration-minutes }} minutes"
            echo ""
            
            # Add to job summary
            echo "## 🎉 ${{ inputs.service-name }} Public Access Ready!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔗 Access Information" >> $GITHUB_STEP_SUMMARY
            echo "- **URL**: [$NGROK_URL]($NGROK_URL)" >> $GITHUB_STEP_SUMMARY
            echo "- **Direct URL (No Warning)**: [$NGROK_URL?ngrok-skip-browser-warning=true]($NGROK_URL?ngrok-skip-browser-warning=true)" >> $GITHUB_STEP_SUMMARY
            if [ -n "${{ inputs.service-url-path }}" ]; then
              SERVICE_LINK="$NGROK_URL${{ inputs.service-url-path }}?ngrok-skip-browser-warning=true"
              echo "- **Service Link**: [$SERVICE_LINK]($SERVICE_LINK)" >> $GITHUB_STEP_SUMMARY
            fi
            echo "- **Available for**: ${{ inputs.duration-minutes }} minutes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⏰ **This access will automatically close in ${{ inputs.duration-minutes }} minutes.**" >> $GITHUB_STEP_SUMMARY
            
          else
            echo "tunnel-created=false" >> $GITHUB_OUTPUT
            echo "❌ Failed to create ngrok tunnel"
            echo "🔍 Checking ngrok logs..."
            cat ngrok.log 2>/dev/null || echo "No ngrok logs available"
          fi
        else
          echo "tunnel-created=false" >> $GITHUB_OUTPUT
          echo "⚠️ No ngrok auth token provided"
          echo "ℹ️ Ngrok requires authentication for all tunnels"
        fi

    - name: "⏰ Keep Tunnel Alive"
      if: steps.tunnel.outputs.tunnel-created == 'true'
      shell: bash
      run: |
        DURATION_SECONDS=$(($((${{ inputs.duration-minutes }})) * 60))
        echo "⏳ Keeping ${{ inputs.service-name }} accessible for ${{ inputs.duration-minutes }} minutes..."
        echo "🌐 Public access at: ${{ steps.tunnel.outputs.public-url }}"
        
        # Show countdown
        for ((i=DURATION_SECONDS; i>0; i--)); do
          if [ $((i % 60)) -eq 0 ]; then
            MINUTES=$((i / 60))
            echo "⏰ $MINUTES minutes remaining..."
          fi
          sleep 1
        done
        
        echo "🛑 Access period expired. Closing tunnel..."
        kill ${{ steps.tunnel.outputs.ngrok-pid }} 2>/dev/null || true

    - name: "📋 Alternative Access Methods"
      if: steps.tunnel.outputs.tunnel-created != 'true'
      shell: bash
      run: |
        echo "## 🔧 ${{ inputs.service-name }} Access Methods" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Since automatic public tunnel creation is not available, here are alternative access methods:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🎯 Method 1: Add Your Ngrok Token (Recommended)" >> $GITHUB_STEP_SUMMARY
        echo "**Get instant public access by adding your ngrok token:**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "1. **Sign up at [ngrok.com](https://ngrok.com)** (free account)" >> $GITHUB_STEP_SUMMARY
        echo "2. **Get your authtoken** from [dashboard](https://dashboard.ngrok.com/get-started/your-authtoken)" >> $GITHUB_STEP_SUMMARY
        echo "3. **Add to repository secrets**:" >> $GITHUB_STEP_SUMMARY
        echo "   - Go to **Repository Settings** → **Secrets and variables** → **Actions**" >> $GITHUB_STEP_SUMMARY
        echo "   - Click **New repository secret**" >> $GITHUB_STEP_SUMMARY
        echo "   - Name: \`NGROK_AUTH_TOKEN\`" >> $GITHUB_STEP_SUMMARY
        echo "   - Value: Your ngrok authtoken" >> $GITHUB_STEP_SUMMARY
        echo "4. **Re-run this workflow** to get instant public access!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🌐 Method 2: GitHub Codespaces" >> $GITHUB_STEP_SUMMARY
        echo "**Access through GitHub Codespaces with automatic port forwarding**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🏠 Method 3: Local Setup" >> $GITHUB_STEP_SUMMARY
        echo "**Run locally on your machine - service available at http://localhost:${{ inputs.port }}**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "💡 **Quick Tip**: Method 1 (ngrok token) provides instant public access - just add your token and re-run!" >> $GITHUB_STEP_SUMMARY