//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Virgin.HTTPService.CreditTransfer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreditTransfer.ICreditTransferService")]
    public interface ICreditTransferService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditTransferService/TransferCredit", ReplyAction="http://tempuri.org/ICreditTransferService/TransferCreditResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="statusCode")]
        int TransferCredit(out string statusMessage, string sourceMsisdn, string destinationMsisdn, int amountRiyal, int amountHalala, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditTransferService/VirginTransferCredit", ReplyAction="http://tempuri.org/ICreditTransferService/VirginTransferCreditResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="statusCode")]
        int VirginTransferCredit(out string statusMessage, string sourceMsisdn, string destinationMsisdn, int amountRiyal, int amountHalala, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditTransferService/GetVirginPendingTransaction", ReplyAction="http://tempuri.org/ICreditTransferService/GetVirginPendingTransactionResponse")]
        void GetVirginPendingTransaction(string destinationMsisdn, string destinationIdNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreditTransferServiceChannel : Virgin.HTTPService.CreditTransfer.ICreditTransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreditTransferServiceClient : System.ServiceModel.ClientBase<Virgin.HTTPService.CreditTransfer.ICreditTransferService>, Virgin.HTTPService.CreditTransfer.ICreditTransferService {
        
        public CreditTransferServiceClient() {
        }
        
        public CreditTransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreditTransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditTransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditTransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int TransferCredit(out string statusMessage, string sourceMsisdn, string destinationMsisdn, int amountRiyal, int amountHalala, string pin) {
            return base.Channel.TransferCredit(out statusMessage, sourceMsisdn, destinationMsisdn, amountRiyal, amountHalala, pin);
        }
        
        public int VirginTransferCredit(out string statusMessage, string sourceMsisdn, string destinationMsisdn, int amountRiyal, int amountHalala, string pin) {
            return base.Channel.VirginTransferCredit(out statusMessage, sourceMsisdn, destinationMsisdn, amountRiyal, amountHalala, pin);
        }
        
        public void GetVirginPendingTransaction(string destinationMsisdn, string destinationIdNumber) {
            base.Channel.GetVirginPendingTransaction(destinationMsisdn, destinationIdNumber);
        }
    }
}
