//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CreditTransferEngine.NobillCalls {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NobillCallsSoap", Namespace="http://tempuri.org/")]
    public partial class NobillCalls : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateBestMobileSubscriberWithPortInOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFromMainAccountToCounterDifferentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFromCounterToMainDifferentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFNFOnnetNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFNFOnnetNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFNFNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoucherDataVTOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssociateVouchersVTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveVouchersVTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeActivateVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssociateSimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveSimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateVouchersVTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateSimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeActivateSimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeAssociateSimsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWahhDealersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateWahh2USubscriberWithDynamicAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyWahh2UNumberChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyWahh2UMobileSIMReplacementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealerToCustomerTransferCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSIMValueByIMSIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSIMValueByICCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerDataByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCustomerDataByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIDTypeByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDataByAccountNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPortInNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyWahh2UMobileActivationWithPortInOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyWahh2UMobilePortInResubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseLiftNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustCounterValueUsingNobillUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMPPSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendHTTPSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeEventWithCreditAbilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeReservedEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscriptionValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimDataByICCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEkiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimDataByIMSIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscriptionValueByIMSIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscriptionValueByICCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscriptionValueByIMSIExOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferCounterFundWithAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAndReserveNumberForActivationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnReserveNumberForActivationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNumberToWrongStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRBTStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRetailerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByIMSIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceSIMwithCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceSIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFundOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFromMainAccountToCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFromCounterToMainAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferFromCounterToMainAccountDifferentMSISDNOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferCounterFundOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerPortOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePhoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSIMValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIDTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIDTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOnlineRechargeAdjustmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReuseSIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnblockChargedActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCustomerServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCustomerServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtendSubscriptionExpiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtendCounterExpiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtendCustomerServiceExpiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditTransferValueByServiceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditTransferValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback RechargeAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustAccountBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustAccountByReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustCounterBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustCounterValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribtionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsDatabyQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoucherrefillOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastCalledNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifySubscribtionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRejectionReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCustomerServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerServiceDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfCustomerServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyCustomerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferCrediteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePhoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePhoneNumberPortInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvilableNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveSpecialNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnReserveNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscribtionDataByImsiOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustDataCounterMBsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustSMS_MINUTESCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerExeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIDTypeExeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSpecificCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimDataByIMSIEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerForVirginActivationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAlternativeContactNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoucherDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVoucherPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvalidateVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback BlockVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnblockVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerRollbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVirginCreditTransferDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerServiceExpiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSubscriptionPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateBestMobileSubscriberOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NobillCalls() {
            this.Url = global::CreditTransferEngine.Properties.Settings.Default.CreditTransferEngine_NobillCalls_NobillCalls;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventHandler ActivateBestMobileSubscriberWithDynamicAllocationCompleted;
        
        /// <remarks/>
        public event ActivateBestMobileSubscriberWithPortInCompletedEventHandler ActivateBestMobileSubscriberWithPortInCompleted;
        
        /// <remarks/>
        public event TransferFromMainAccountToCounterDifferentAccountCompletedEventHandler TransferFromMainAccountToCounterDifferentAccountCompleted;
        
        /// <remarks/>
        public event TransferFromCounterToMainDifferentAccountCompletedEventHandler TransferFromCounterToMainDifferentAccountCompleted;
        
        /// <remarks/>
        public event AddFNFOnnetNumberCompletedEventHandler AddFNFOnnetNumberCompleted;
        
        /// <remarks/>
        public event RemoveFNFOnnetNumberCompletedEventHandler RemoveFNFOnnetNumberCompleted;
        
        /// <remarks/>
        public event GetFNFNumbersCompletedEventHandler GetFNFNumbersCompleted;
        
        /// <remarks/>
        public event VoucherDataVTCompletedEventHandler VoucherDataVTCompleted;
        
        /// <remarks/>
        public event AssociateVouchersVTCompletedEventHandler AssociateVouchersVTCompleted;
        
        /// <remarks/>
        public event ReceiveVouchersVTCompletedEventHandler ReceiveVouchersVTCompleted;
        
        /// <remarks/>
        public event DeActivateVouchersCompletedEventHandler DeActivateVouchersCompleted;
        
        /// <remarks/>
        public event AssociateSimsCompletedEventHandler AssociateSimsCompleted;
        
        /// <remarks/>
        public event ReceiveSimsCompletedEventHandler ReceiveSimsCompleted;
        
        /// <remarks/>
        public event ActivateVouchersVTCompletedEventHandler ActivateVouchersVTCompleted;
        
        /// <remarks/>
        public event ActivateSimsCompletedEventHandler ActivateSimsCompleted;
        
        /// <remarks/>
        public event DeActivateSimsCompletedEventHandler DeActivateSimsCompleted;
        
        /// <remarks/>
        public event DeAssociateSimsCompletedEventHandler DeAssociateSimsCompleted;
        
        /// <remarks/>
        public event GetWahhDealersCompletedEventHandler GetWahhDealersCompleted;
        
        /// <remarks/>
        public event ActivateWahh2USubscriberWithDynamicAllocationCompletedEventHandler ActivateWahh2USubscriberWithDynamicAllocationCompleted;
        
        /// <remarks/>
        public event NotifyWahh2UNumberChangeCompletedEventHandler NotifyWahh2UNumberChangeCompleted;
        
        /// <remarks/>
        public event NotifyWahh2UMobileSIMReplacementCompletedEventHandler NotifyWahh2UMobileSIMReplacementCompleted;
        
        /// <remarks/>
        public event DealerToCustomerTransferCreditCompletedEventHandler DealerToCustomerTransferCreditCompleted;
        
        /// <remarks/>
        public event GetSIMValueByIMSICompletedEventHandler GetSIMValueByIMSICompleted;
        
        /// <remarks/>
        public event GetSIMValueByICCIDCompletedEventHandler GetSIMValueByICCIDCompleted;
        
        /// <remarks/>
        public event GetCustomerDataByAccountNumberCompletedEventHandler GetCustomerDataByAccountNumberCompleted;
        
        /// <remarks/>
        public event ModifyCustomerDataByAccountNumberCompletedEventHandler ModifyCustomerDataByAccountNumberCompleted;
        
        /// <remarks/>
        public event UpdateIDTypeByAccountNumberCompletedEventHandler UpdateIDTypeByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetAccountDataByAccountNoCompletedEventHandler GetAccountDataByAccountNoCompleted;
        
        /// <remarks/>
        public event CheckPortInNumberCompletedEventHandler CheckPortInNumberCompleted;
        
        /// <remarks/>
        public event NotifyWahh2UMobileActivationWithPortInCompletedEventHandler NotifyWahh2UMobileActivationWithPortInCompleted;
        
        /// <remarks/>
        public event NotifyWahh2UMobilePortInResubmissionCompletedEventHandler NotifyWahh2UMobilePortInResubmissionCompleted;
        
        /// <remarks/>
        public event ReleaseLiftNumbersCompletedEventHandler ReleaseLiftNumbersCompleted;
        
        /// <remarks/>
        public event AdjustCounterValueUsingNobillUnitsCompletedEventHandler AdjustCounterValueUsingNobillUnitsCompleted;
        
        /// <remarks/>
        public event SendSMPPSMSCompletedEventHandler SendSMPPSMSCompleted;
        
        /// <remarks/>
        public event SendHTTPSMSCompletedEventHandler SendHTTPSMSCompleted;
        
        /// <remarks/>
        public event ChargeEventCompletedEventHandler ChargeEventCompleted;
        
        /// <remarks/>
        public event ChargeEventWithCreditAbilityCompletedEventHandler ChargeEventWithCreditAbilityCompleted;
        
        /// <remarks/>
        public event CreditEventCompletedEventHandler CreditEventCompleted;
        
        /// <remarks/>
        public event ChargeReservedEventCompletedEventHandler ChargeReservedEventCompleted;
        
        /// <remarks/>
        public event ReserveEventCompletedEventHandler ReserveEventCompleted;
        
        /// <remarks/>
        public event CancelReservationCompletedEventHandler CancelReservationCompleted;
        
        /// <remarks/>
        public event GetSubscriptionValueCompletedEventHandler GetSubscriptionValueCompleted;
        
        /// <remarks/>
        public event GetSimDataByICCIDCompletedEventHandler GetSimDataByICCIDCompleted;
        
        /// <remarks/>
        public event GetEkiCompletedEventHandler GetEkiCompleted;
        
        /// <remarks/>
        public event GetSimDataByIMSICompletedEventHandler GetSimDataByIMSICompleted;
        
        /// <remarks/>
        public event GetSubscriptionValueByIMSICompletedEventHandler GetSubscriptionValueByIMSICompleted;
        
        /// <remarks/>
        public event GetSubscriptionValueByICCIDCompletedEventHandler GetSubscriptionValueByICCIDCompleted;
        
        /// <remarks/>
        public event GetSubscriptionValueByIMSIExCompletedEventHandler GetSubscriptionValueByIMSIExCompleted;
        
        /// <remarks/>
        public event TransferCounterFundWithAmountCompletedEventHandler TransferCounterFundWithAmountCompleted;
        
        /// <remarks/>
        public event GetAndReserveNumberForActivationCompletedEventHandler GetAndReserveNumberForActivationCompleted;
        
        /// <remarks/>
        public event UnReserveNumberForActivationCompletedEventHandler UnReserveNumberForActivationCompleted;
        
        /// <remarks/>
        public event UpdateNumberToWrongStatusCompletedEventHandler UpdateNumberToWrongStatusCompleted;
        
        /// <remarks/>
        public event SetRBTStatusCompletedEventHandler SetRBTStatusCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerByNumberCompletedEventHandler GetCustomerByNumberCompleted;
        
        /// <remarks/>
        public event GetCustomerCompletedEventHandler GetCustomerCompleted;
        
        /// <remarks/>
        public event GetRetailerCompletedEventHandler GetRetailerCompleted;
        
        /// <remarks/>
        public event GetCustomerByIMSICompletedEventHandler GetCustomerByIMSICompleted;
        
        /// <remarks/>
        public event UpdateCustomerByNumberCompletedEventHandler UpdateCustomerByNumberCompleted;
        
        /// <remarks/>
        public event ReplaceSIMwithCountersCompletedEventHandler ReplaceSIMwithCountersCompleted;
        
        /// <remarks/>
        public event ReplaceSIMCompletedEventHandler ReplaceSIMCompleted;
        
        /// <remarks/>
        public event TransferFundCompletedEventHandler TransferFundCompleted;
        
        /// <remarks/>
        public event TransferFromMainAccountToCounterCompletedEventHandler TransferFromMainAccountToCounterCompleted;
        
        /// <remarks/>
        public event TransferFromCounterToMainAccountCompletedEventHandler TransferFromCounterToMainAccountCompleted;
        
        /// <remarks/>
        public event TransferFromCounterToMainAccountDifferentMSISDNCompletedEventHandler TransferFromCounterToMainAccountDifferentMSISDNCompleted;
        
        /// <remarks/>
        public event TransferMoneyCompletedEventHandler TransferMoneyCompleted;
        
        /// <remarks/>
        public event TransferCounterFundCompletedEventHandler TransferCounterFundCompleted;
        
        /// <remarks/>
        public event DeleteCustomerCompletedEventHandler DeleteCustomerCompleted;
        
        /// <remarks/>
        public event DeleteCustomerPortOutCompletedEventHandler DeleteCustomerPortOutCompleted;
        
        /// <remarks/>
        public event DeleteAccountCompletedEventHandler DeleteAccountCompleted;
        
        /// <remarks/>
        public event DeletePhoneNumberCompletedEventHandler DeletePhoneNumberCompleted;
        
        /// <remarks/>
        public event GetSIMValueCompletedEventHandler GetSIMValueCompleted;
        
        /// <remarks/>
        public event UpdateIDTypeCompletedEventHandler UpdateIDTypeCompleted;
        
        /// <remarks/>
        public event GetIDTypeCompletedEventHandler GetIDTypeCompleted;
        
        /// <remarks/>
        public event CheckOnlineRechargeAdjustmentCompletedEventHandler CheckOnlineRechargeAdjustmentCompleted;
        
        /// <remarks/>
        public event AddCustomerServiceCompletedEventHandler AddCustomerServiceCompleted;
        
        /// <remarks/>
        public event ReuseSIMCompletedEventHandler ReuseSIMCompleted;
        
        /// <remarks/>
        public event UnblockChargedActivitiesCompletedEventHandler UnblockChargedActivitiesCompleted;
        
        /// <remarks/>
        public event RemoveCustomerServiceCompletedEventHandler RemoveCustomerServiceCompleted;
        
        /// <remarks/>
        public event CheckCustomerServiceCompletedEventHandler CheckCustomerServiceCompleted;
        
        /// <remarks/>
        public event ExtendSubscriptionExpiryCompletedEventHandler ExtendSubscriptionExpiryCompleted;
        
        /// <remarks/>
        public event ExtendCounterExpiryCompletedEventHandler ExtendCounterExpiryCompleted;
        
        /// <remarks/>
        public event ExtendCustomerServiceExpiryCompletedEventHandler ExtendCustomerServiceExpiryCompleted;
        
        /// <remarks/>
        public event GetAccountValueCompletedEventHandler GetAccountValueCompleted;
        
        /// <remarks/>
        public event GetCreditTransferValueByServiceNameCompletedEventHandler GetCreditTransferValueByServiceNameCompleted;
        
        /// <remarks/>
        public event GetCreditTransferValueCompletedEventHandler GetCreditTransferValueCompleted;
        
        /// <remarks/>
        public event ChargeMMSCompletedEventHandler ChargeMMSCompleted;
        
        /// <remarks/>
        public event RechargeAmountCompletedEventHandler RechargeAmountCompleted;
        
        /// <remarks/>
        public event AdjustAccountBalanceCompletedEventHandler AdjustAccountBalanceCompleted;
        
        /// <remarks/>
        public event AdjustAccountByReasonCompletedEventHandler AdjustAccountByReasonCompleted;
        
        /// <remarks/>
        public event AdjustCounterBalanceCompletedEventHandler AdjustCounterBalanceCompleted;
        
        /// <remarks/>
        public event AdjustCounterValueCompletedEventHandler AdjustCounterValueCompleted;
        
        /// <remarks/>
        public event GetAccountCountersCompletedEventHandler GetAccountCountersCompleted;
        
        /// <remarks/>
        public event GetPropertyValueCompletedEventHandler GetPropertyValueCompleted;
        
        /// <remarks/>
        public event GetAccountDataCompletedEventHandler GetAccountDataCompleted;
        
        /// <remarks/>
        public event GetCustomerDataCompletedEventHandler GetCustomerDataCompleted;
        
        /// <remarks/>
        public event GetSubscribtionDataCompletedEventHandler GetSubscribtionDataCompleted;
        
        /// <remarks/>
        public event GetTransactionsDataCompletedEventHandler GetTransactionsDataCompleted;
        
        /// <remarks/>
        public event GetTransactionsDatabyQuantityCompletedEventHandler GetTransactionsDatabyQuantityCompleted;
        
        /// <remarks/>
        public event VoucherrefillCompletedEventHandler VoucherrefillCompleted;
        
        /// <remarks/>
        public event LastCalledNumberCompletedEventHandler LastCalledNumberCompleted;
        
        /// <remarks/>
        public event GetSimDataCompletedEventHandler GetSimDataCompleted;
        
        /// <remarks/>
        public event SetPropertyCompletedEventHandler SetPropertyCompleted;
        
        /// <remarks/>
        public event modifySubscribtionCompletedEventHandler modifySubscribtionCompleted;
        
        /// <remarks/>
        public event UpdateRejectionReasonCompletedEventHandler UpdateRejectionReasonCompleted;
        
        /// <remarks/>
        public event ModifyCustomerServiceCompletedEventHandler ModifyCustomerServiceCompleted;
        
        /// <remarks/>
        public event GetCustomerServiceDataCompletedEventHandler GetCustomerServiceDataCompleted;
        
        /// <remarks/>
        public event GetPropertiesValuesCompletedEventHandler GetPropertiesValuesCompleted;
        
        /// <remarks/>
        public event ListOfCustomerServicesCompletedEventHandler ListOfCustomerServicesCompleted;
        
        /// <remarks/>
        public event modifyCustomerDataCompletedEventHandler modifyCustomerDataCompleted;
        
        /// <remarks/>
        public event TransferCrediteCompletedEventHandler TransferCrediteCompleted;
        
        /// <remarks/>
        public event ReplacePhoneNumberCompletedEventHandler ReplacePhoneNumberCompleted;
        
        /// <remarks/>
        public event ReplacePhoneNumberPortInCompletedEventHandler ReplacePhoneNumberPortInCompleted;
        
        /// <remarks/>
        public event GetAvilableNumbersCompletedEventHandler GetAvilableNumbersCompleted;
        
        /// <remarks/>
        public event ReserveSpecialNumberCompletedEventHandler ReserveSpecialNumberCompleted;
        
        /// <remarks/>
        public event UnReserveNumberCompletedEventHandler UnReserveNumberCompleted;
        
        /// <remarks/>
        public event GetSubscribtionDataByImsiCompletedEventHandler GetSubscribtionDataByImsiCompleted;
        
        /// <remarks/>
        public event AdjustDataCounterMBsCompletedEventHandler AdjustDataCounterMBsCompleted;
        
        /// <remarks/>
        public event AdjustSMS_MINUTESCounterCompletedEventHandler AdjustSMS_MINUTESCounterCompleted;
        
        /// <remarks/>
        public event AddCounterCompletedEventHandler AddCounterCompleted;
        
        /// <remarks/>
        public event UpdateCustomerExeCompletedEventHandler UpdateCustomerExeCompleted;
        
        /// <remarks/>
        public event UpdateIDTypeExeCompletedEventHandler UpdateIDTypeExeCompleted;
        
        /// <remarks/>
        public event CreateSpecificCustomerCompletedEventHandler CreateSpecificCustomerCompleted;
        
        /// <remarks/>
        public event GetSimDataByIMSIEXCompletedEventHandler GetSimDataByIMSIEXCompleted;
        
        /// <remarks/>
        public event CreateEVoucherCompletedEventHandler CreateEVoucherCompleted;
        
        /// <remarks/>
        public event CreateSubscriptionCompletedEventHandler CreateSubscriptionCompleted;
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event UpdateCustomerForVirginActivationCompletedEventHandler UpdateCustomerForVirginActivationCompleted;
        
        /// <remarks/>
        public event UpdateAlternativeContactNumberCompletedEventHandler UpdateAlternativeContactNumberCompleted;
        
        /// <remarks/>
        public event GetVoucherDetailsCompletedEventHandler GetVoucherDetailsCompleted;
        
        /// <remarks/>
        public event GetVoucherPinCompletedEventHandler GetVoucherPinCompleted;
        
        /// <remarks/>
        public event InvalidateVoucherCompletedEventHandler InvalidateVoucherCompleted;
        
        /// <remarks/>
        public event BlockVoucherCompletedEventHandler BlockVoucherCompleted;
        
        /// <remarks/>
        public event UnblockVoucherCompletedEventHandler UnblockVoucherCompleted;
        
        /// <remarks/>
        public event ActivateVoucherCompletedEventHandler ActivateVoucherCompleted;
        
        /// <remarks/>
        public event DeleteCustomerRollbackCompletedEventHandler DeleteCustomerRollbackCompleted;
        
        /// <remarks/>
        public event GetVirginCreditTransferDataCompletedEventHandler GetVirginCreditTransferDataCompleted;
        
        /// <remarks/>
        public event GetCustomerServiceExpiryCompletedEventHandler GetCustomerServiceExpiryCompleted;
        
        /// <remarks/>
        public event SetSubscriptionPropertyCompletedEventHandler SetSubscriptionPropertyCompleted;
        
        /// <remarks/>
        public event ActivateBestMobileSubscriberCompletedEventHandler ActivateBestMobileSubscriberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateBestMobileSubscriberWithDynamicAllocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateBestMobileSubscriberWithDynamicAllocation(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, out string assignedMSISDN) {
            object[] results = this.Invoke("ActivateBestMobileSubscriberWithDynamicAllocation", new object[] {
                        customerInfo,
                        subscriptionInfo});
            assignedMSISDN = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberWithDynamicAllocationAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo) {
            this.ActivateBestMobileSubscriberWithDynamicAllocationAsync(customerInfo, subscriptionInfo, null);
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberWithDynamicAllocationAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, object userState) {
            if ((this.ActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted == null)) {
                this.ActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted);
            }
            this.InvokeAsync("ActivateBestMobileSubscriberWithDynamicAllocation", new object[] {
                        customerInfo,
                        subscriptionInfo}, this.ActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted, userState);
        }
        
        private void OnActivateBestMobileSubscriberWithDynamicAllocationOperationCompleted(object arg) {
            if ((this.ActivateBestMobileSubscriberWithDynamicAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateBestMobileSubscriberWithDynamicAllocationCompleted(this, new ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateBestMobileSubscriberWithPortIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateBestMobileSubscriberWithPortIn(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator) {
            object[] results = this.Invoke("ActivateBestMobileSubscriberWithPortIn", new object[] {
                        customerInfo,
                        subscriptionInfo,
                        portInMSISDN,
                        eOperator});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberWithPortInAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator) {
            this.ActivateBestMobileSubscriberWithPortInAsync(customerInfo, subscriptionInfo, portInMSISDN, eOperator, null);
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberWithPortInAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator, object userState) {
            if ((this.ActivateBestMobileSubscriberWithPortInOperationCompleted == null)) {
                this.ActivateBestMobileSubscriberWithPortInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateBestMobileSubscriberWithPortInOperationCompleted);
            }
            this.InvokeAsync("ActivateBestMobileSubscriberWithPortIn", new object[] {
                        customerInfo,
                        subscriptionInfo,
                        portInMSISDN,
                        eOperator}, this.ActivateBestMobileSubscriberWithPortInOperationCompleted, userState);
        }
        
        private void OnActivateBestMobileSubscriberWithPortInOperationCompleted(object arg) {
            if ((this.ActivateBestMobileSubscriberWithPortInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateBestMobileSubscriberWithPortInCompleted(this, new ActivateBestMobileSubscriberWithPortInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFromMainAccountToCounterDifferentAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFromMainAccountToCounterDifferentAccount(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFromMainAccountToCounterDifferentAccount", new object[] {
                        sourceMsisdn,
                        destMsisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFromMainAccountToCounterDifferentAccountAsync(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            this.TransferFromMainAccountToCounterDifferentAccountAsync(sourceMsisdn, destMsisdn, counterTypeName, amount, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFromMainAccountToCounterDifferentAccountAsync(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment, object userState) {
            if ((this.TransferFromMainAccountToCounterDifferentAccountOperationCompleted == null)) {
                this.TransferFromMainAccountToCounterDifferentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFromMainAccountToCounterDifferentAccountOperationCompleted);
            }
            this.InvokeAsync("TransferFromMainAccountToCounterDifferentAccount", new object[] {
                        sourceMsisdn,
                        destMsisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment}, this.TransferFromMainAccountToCounterDifferentAccountOperationCompleted, userState);
        }
        
        private void OnTransferFromMainAccountToCounterDifferentAccountOperationCompleted(object arg) {
            if ((this.TransferFromMainAccountToCounterDifferentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFromMainAccountToCounterDifferentAccountCompleted(this, new TransferFromMainAccountToCounterDifferentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFromCounterToMainDifferentAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFromCounterToMainDifferentAccount(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFromCounterToMainDifferentAccount", new object[] {
                        sourceMsisdn,
                        destMsisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainDifferentAccountAsync(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            this.TransferFromCounterToMainDifferentAccountAsync(sourceMsisdn, destMsisdn, counterTypeName, amount, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainDifferentAccountAsync(string sourceMsisdn, string destMsisdn, string counterTypeName, decimal amount, string reason, string userName, string comment, object userState) {
            if ((this.TransferFromCounterToMainDifferentAccountOperationCompleted == null)) {
                this.TransferFromCounterToMainDifferentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFromCounterToMainDifferentAccountOperationCompleted);
            }
            this.InvokeAsync("TransferFromCounterToMainDifferentAccount", new object[] {
                        sourceMsisdn,
                        destMsisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment}, this.TransferFromCounterToMainDifferentAccountOperationCompleted, userState);
        }
        
        private void OnTransferFromCounterToMainDifferentAccountOperationCompleted(object arg) {
            if ((this.TransferFromCounterToMainDifferentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFromCounterToMainDifferentAccountCompleted(this, new TransferFromCounterToMainDifferentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFNFOnnetNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFNFOnnetNumber(string phoneNumber, string serviceName, string friendNumber) {
            object[] results = this.Invoke("AddFNFOnnetNumber", new object[] {
                        phoneNumber,
                        serviceName,
                        friendNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFNFOnnetNumberAsync(string phoneNumber, string serviceName, string friendNumber) {
            this.AddFNFOnnetNumberAsync(phoneNumber, serviceName, friendNumber, null);
        }
        
        /// <remarks/>
        public void AddFNFOnnetNumberAsync(string phoneNumber, string serviceName, string friendNumber, object userState) {
            if ((this.AddFNFOnnetNumberOperationCompleted == null)) {
                this.AddFNFOnnetNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFNFOnnetNumberOperationCompleted);
            }
            this.InvokeAsync("AddFNFOnnetNumber", new object[] {
                        phoneNumber,
                        serviceName,
                        friendNumber}, this.AddFNFOnnetNumberOperationCompleted, userState);
        }
        
        private void OnAddFNFOnnetNumberOperationCompleted(object arg) {
            if ((this.AddFNFOnnetNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFNFOnnetNumberCompleted(this, new AddFNFOnnetNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFNFOnnetNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveFNFOnnetNumber(string phoneNumber, string serviceName, string friendNumber) {
            object[] results = this.Invoke("RemoveFNFOnnetNumber", new object[] {
                        phoneNumber,
                        serviceName,
                        friendNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFNFOnnetNumberAsync(string phoneNumber, string serviceName, string friendNumber) {
            this.RemoveFNFOnnetNumberAsync(phoneNumber, serviceName, friendNumber, null);
        }
        
        /// <remarks/>
        public void RemoveFNFOnnetNumberAsync(string phoneNumber, string serviceName, string friendNumber, object userState) {
            if ((this.RemoveFNFOnnetNumberOperationCompleted == null)) {
                this.RemoveFNFOnnetNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFNFOnnetNumberOperationCompleted);
            }
            this.InvokeAsync("RemoveFNFOnnetNumber", new object[] {
                        phoneNumber,
                        serviceName,
                        friendNumber}, this.RemoveFNFOnnetNumberOperationCompleted, userState);
        }
        
        private void OnRemoveFNFOnnetNumberOperationCompleted(object arg) {
            if ((this.RemoveFNFOnnetNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFNFOnnetNumberCompleted(this, new RemoveFNFOnnetNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFNFNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFNFNumbers(string phoneNumber, string serviceName, string numberType, out string[] friends) {
            object[] results = this.Invoke("GetFNFNumbers", new object[] {
                        phoneNumber,
                        serviceName,
                        numberType});
            friends = ((string[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFNFNumbersAsync(string phoneNumber, string serviceName, string numberType) {
            this.GetFNFNumbersAsync(phoneNumber, serviceName, numberType, null);
        }
        
        /// <remarks/>
        public void GetFNFNumbersAsync(string phoneNumber, string serviceName, string numberType, object userState) {
            if ((this.GetFNFNumbersOperationCompleted == null)) {
                this.GetFNFNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFNFNumbersOperationCompleted);
            }
            this.InvokeAsync("GetFNFNumbers", new object[] {
                        phoneNumber,
                        serviceName,
                        numberType}, this.GetFNFNumbersOperationCompleted, userState);
        }
        
        private void OnGetFNFNumbersOperationCompleted(object arg) {
            if ((this.GetFNFNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFNFNumbersCompleted(this, new GetFNFNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VoucherDataVT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int VoucherDataVT(string serialNo, string voucherType, VoucherItem item, out string itemValue) {
            object[] results = this.Invoke("VoucherDataVT", new object[] {
                        serialNo,
                        voucherType,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VoucherDataVTAsync(string serialNo, string voucherType, VoucherItem item) {
            this.VoucherDataVTAsync(serialNo, voucherType, item, null);
        }
        
        /// <remarks/>
        public void VoucherDataVTAsync(string serialNo, string voucherType, VoucherItem item, object userState) {
            if ((this.VoucherDataVTOperationCompleted == null)) {
                this.VoucherDataVTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoucherDataVTOperationCompleted);
            }
            this.InvokeAsync("VoucherDataVT", new object[] {
                        serialNo,
                        voucherType,
                        item}, this.VoucherDataVTOperationCompleted, userState);
        }
        
        private void OnVoucherDataVTOperationCompleted(object arg) {
            if ((this.VoucherDataVTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoucherDataVTCompleted(this, new VoucherDataVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssociateVouchersVT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AssociateVouchersVT(string retailer, string startSerialNo, string endSerialNo, string voucherType) {
            object[] results = this.Invoke("AssociateVouchersVT", new object[] {
                        retailer,
                        startSerialNo,
                        endSerialNo,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssociateVouchersVTAsync(string retailer, string startSerialNo, string endSerialNo, string voucherType) {
            this.AssociateVouchersVTAsync(retailer, startSerialNo, endSerialNo, voucherType, null);
        }
        
        /// <remarks/>
        public void AssociateVouchersVTAsync(string retailer, string startSerialNo, string endSerialNo, string voucherType, object userState) {
            if ((this.AssociateVouchersVTOperationCompleted == null)) {
                this.AssociateVouchersVTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssociateVouchersVTOperationCompleted);
            }
            this.InvokeAsync("AssociateVouchersVT", new object[] {
                        retailer,
                        startSerialNo,
                        endSerialNo,
                        voucherType}, this.AssociateVouchersVTOperationCompleted, userState);
        }
        
        private void OnAssociateVouchersVTOperationCompleted(object arg) {
            if ((this.AssociateVouchersVTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssociateVouchersVTCompleted(this, new AssociateVouchersVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveVouchersVT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReceiveVouchersVT(string startSerialNo, string endSerialNo, string voucherType) {
            object[] results = this.Invoke("ReceiveVouchersVT", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveVouchersVTAsync(string startSerialNo, string endSerialNo, string voucherType) {
            this.ReceiveVouchersVTAsync(startSerialNo, endSerialNo, voucherType, null);
        }
        
        /// <remarks/>
        public void ReceiveVouchersVTAsync(string startSerialNo, string endSerialNo, string voucherType, object userState) {
            if ((this.ReceiveVouchersVTOperationCompleted == null)) {
                this.ReceiveVouchersVTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveVouchersVTOperationCompleted);
            }
            this.InvokeAsync("ReceiveVouchersVT", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType}, this.ReceiveVouchersVTOperationCompleted, userState);
        }
        
        private void OnReceiveVouchersVTOperationCompleted(object arg) {
            if ((this.ReceiveVouchersVTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveVouchersVTCompleted(this, new ReceiveVouchersVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeActivateVouchers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeActivateVouchers(string startSerialNo, string endSerialNo, string voucherType) {
            object[] results = this.Invoke("DeActivateVouchers", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeActivateVouchersAsync(string startSerialNo, string endSerialNo, string voucherType) {
            this.DeActivateVouchersAsync(startSerialNo, endSerialNo, voucherType, null);
        }
        
        /// <remarks/>
        public void DeActivateVouchersAsync(string startSerialNo, string endSerialNo, string voucherType, object userState) {
            if ((this.DeActivateVouchersOperationCompleted == null)) {
                this.DeActivateVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeActivateVouchersOperationCompleted);
            }
            this.InvokeAsync("DeActivateVouchers", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType}, this.DeActivateVouchersOperationCompleted, userState);
        }
        
        private void OnDeActivateVouchersOperationCompleted(object arg) {
            if ((this.DeActivateVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeActivateVouchersCompleted(this, new DeActivateVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssociateSims", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AssociateSims(string retailer, string startICCID, string endICCID) {
            object[] results = this.Invoke("AssociateSims", new object[] {
                        retailer,
                        startICCID,
                        endICCID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AssociateSimsAsync(string retailer, string startICCID, string endICCID) {
            this.AssociateSimsAsync(retailer, startICCID, endICCID, null);
        }
        
        /// <remarks/>
        public void AssociateSimsAsync(string retailer, string startICCID, string endICCID, object userState) {
            if ((this.AssociateSimsOperationCompleted == null)) {
                this.AssociateSimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssociateSimsOperationCompleted);
            }
            this.InvokeAsync("AssociateSims", new object[] {
                        retailer,
                        startICCID,
                        endICCID}, this.AssociateSimsOperationCompleted, userState);
        }
        
        private void OnAssociateSimsOperationCompleted(object arg) {
            if ((this.AssociateSimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssociateSimsCompleted(this, new AssociateSimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveSims", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReceiveSims(string startICCID, string endICCID) {
            object[] results = this.Invoke("ReceiveSims", new object[] {
                        startICCID,
                        endICCID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveSimsAsync(string startICCID, string endICCID) {
            this.ReceiveSimsAsync(startICCID, endICCID, null);
        }
        
        /// <remarks/>
        public void ReceiveSimsAsync(string startICCID, string endICCID, object userState) {
            if ((this.ReceiveSimsOperationCompleted == null)) {
                this.ReceiveSimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveSimsOperationCompleted);
            }
            this.InvokeAsync("ReceiveSims", new object[] {
                        startICCID,
                        endICCID}, this.ReceiveSimsOperationCompleted, userState);
        }
        
        private void OnReceiveSimsOperationCompleted(object arg) {
            if ((this.ReceiveSimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveSimsCompleted(this, new ReceiveSimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateVouchersVT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateVouchersVT(string startSerialNo, string endSerialNo, string voucherType) {
            object[] results = this.Invoke("ActivateVouchersVT", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateVouchersVTAsync(string startSerialNo, string endSerialNo, string voucherType) {
            this.ActivateVouchersVTAsync(startSerialNo, endSerialNo, voucherType, null);
        }
        
        /// <remarks/>
        public void ActivateVouchersVTAsync(string startSerialNo, string endSerialNo, string voucherType, object userState) {
            if ((this.ActivateVouchersVTOperationCompleted == null)) {
                this.ActivateVouchersVTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateVouchersVTOperationCompleted);
            }
            this.InvokeAsync("ActivateVouchersVT", new object[] {
                        startSerialNo,
                        endSerialNo,
                        voucherType}, this.ActivateVouchersVTOperationCompleted, userState);
        }
        
        private void OnActivateVouchersVTOperationCompleted(object arg) {
            if ((this.ActivateVouchersVTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateVouchersVTCompleted(this, new ActivateVouchersVTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateSims", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateSims(string startICCID, string endICCID) {
            object[] results = this.Invoke("ActivateSims", new object[] {
                        startICCID,
                        endICCID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateSimsAsync(string startICCID, string endICCID) {
            this.ActivateSimsAsync(startICCID, endICCID, null);
        }
        
        /// <remarks/>
        public void ActivateSimsAsync(string startICCID, string endICCID, object userState) {
            if ((this.ActivateSimsOperationCompleted == null)) {
                this.ActivateSimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateSimsOperationCompleted);
            }
            this.InvokeAsync("ActivateSims", new object[] {
                        startICCID,
                        endICCID}, this.ActivateSimsOperationCompleted, userState);
        }
        
        private void OnActivateSimsOperationCompleted(object arg) {
            if ((this.ActivateSimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateSimsCompleted(this, new ActivateSimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeActivateSims", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeActivateSims(string startICCID, string endICCID) {
            object[] results = this.Invoke("DeActivateSims", new object[] {
                        startICCID,
                        endICCID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeActivateSimsAsync(string startICCID, string endICCID) {
            this.DeActivateSimsAsync(startICCID, endICCID, null);
        }
        
        /// <remarks/>
        public void DeActivateSimsAsync(string startICCID, string endICCID, object userState) {
            if ((this.DeActivateSimsOperationCompleted == null)) {
                this.DeActivateSimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeActivateSimsOperationCompleted);
            }
            this.InvokeAsync("DeActivateSims", new object[] {
                        startICCID,
                        endICCID}, this.DeActivateSimsOperationCompleted, userState);
        }
        
        private void OnDeActivateSimsOperationCompleted(object arg) {
            if ((this.DeActivateSimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeActivateSimsCompleted(this, new DeActivateSimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeAssociateSims", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeAssociateSims(string startICCID, string endICCID) {
            object[] results = this.Invoke("DeAssociateSims", new object[] {
                        startICCID,
                        endICCID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeAssociateSimsAsync(string startICCID, string endICCID) {
            this.DeAssociateSimsAsync(startICCID, endICCID, null);
        }
        
        /// <remarks/>
        public void DeAssociateSimsAsync(string startICCID, string endICCID, object userState) {
            if ((this.DeAssociateSimsOperationCompleted == null)) {
                this.DeAssociateSimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeAssociateSimsOperationCompleted);
            }
            this.InvokeAsync("DeAssociateSims", new object[] {
                        startICCID,
                        endICCID}, this.DeAssociateSimsOperationCompleted, userState);
        }
        
        private void OnDeAssociateSimsOperationCompleted(object arg) {
            if ((this.DeAssociateSimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeAssociateSimsCompleted(this, new DeAssociateSimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWahhDealers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WahhDealer[] GetWahhDealers(out int responseCode, out string responseMessage) {
            object[] results = this.Invoke("GetWahhDealers", new object[0]);
            responseCode = ((int)(results[1]));
            responseMessage = ((string)(results[2]));
            return ((WahhDealer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWahhDealersAsync() {
            this.GetWahhDealersAsync(null);
        }
        
        /// <remarks/>
        public void GetWahhDealersAsync(object userState) {
            if ((this.GetWahhDealersOperationCompleted == null)) {
                this.GetWahhDealersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWahhDealersOperationCompleted);
            }
            this.InvokeAsync("GetWahhDealers", new object[0], this.GetWahhDealersOperationCompleted, userState);
        }
        
        private void OnGetWahhDealersOperationCompleted(object arg) {
            if ((this.GetWahhDealersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWahhDealersCompleted(this, new GetWahhDealersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateWahh2USubscriberWithDynamicAllocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateWahh2USubscriberWithDynamicAllocation(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo, out string msisdn, out string accountNumber) {
            object[] results = this.Invoke("ActivateWahh2USubscriberWithDynamicAllocation", new object[] {
                        customerInfo,
                        subscriptionInfo});
            msisdn = ((string)(results[1]));
            accountNumber = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateWahh2USubscriberWithDynamicAllocationAsync(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo) {
            this.ActivateWahh2USubscriberWithDynamicAllocationAsync(customerInfo, subscriptionInfo, null);
        }
        
        /// <remarks/>
        public void ActivateWahh2USubscriberWithDynamicAllocationAsync(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo, object userState) {
            if ((this.ActivateWahh2USubscriberWithDynamicAllocationOperationCompleted == null)) {
                this.ActivateWahh2USubscriberWithDynamicAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateWahh2USubscriberWithDynamicAllocationOperationCompleted);
            }
            this.InvokeAsync("ActivateWahh2USubscriberWithDynamicAllocation", new object[] {
                        customerInfo,
                        subscriptionInfo}, this.ActivateWahh2USubscriberWithDynamicAllocationOperationCompleted, userState);
        }
        
        private void OnActivateWahh2USubscriberWithDynamicAllocationOperationCompleted(object arg) {
            if ((this.ActivateWahh2USubscriberWithDynamicAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateWahh2USubscriberWithDynamicAllocationCompleted(this, new ActivateWahh2USubscriberWithDynamicAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyWahh2UNumberChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyWahh2UNumberChange(Wahh2UChangeNumberInfo changeNumberInfo) {
            object[] results = this.Invoke("NotifyWahh2UNumberChange", new object[] {
                        changeNumberInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyWahh2UNumberChangeAsync(Wahh2UChangeNumberInfo changeNumberInfo) {
            this.NotifyWahh2UNumberChangeAsync(changeNumberInfo, null);
        }
        
        /// <remarks/>
        public void NotifyWahh2UNumberChangeAsync(Wahh2UChangeNumberInfo changeNumberInfo, object userState) {
            if ((this.NotifyWahh2UNumberChangeOperationCompleted == null)) {
                this.NotifyWahh2UNumberChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyWahh2UNumberChangeOperationCompleted);
            }
            this.InvokeAsync("NotifyWahh2UNumberChange", new object[] {
                        changeNumberInfo}, this.NotifyWahh2UNumberChangeOperationCompleted, userState);
        }
        
        private void OnNotifyWahh2UNumberChangeOperationCompleted(object arg) {
            if ((this.NotifyWahh2UNumberChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyWahh2UNumberChangeCompleted(this, new NotifyWahh2UNumberChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyWahh2UMobileSIMReplacement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyWahh2UMobileSIMReplacement(string newMSISDN, string oldMSISDN, string puk) {
            object[] results = this.Invoke("NotifyWahh2UMobileSIMReplacement", new object[] {
                        newMSISDN,
                        oldMSISDN,
                        puk});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobileSIMReplacementAsync(string newMSISDN, string oldMSISDN, string puk) {
            this.NotifyWahh2UMobileSIMReplacementAsync(newMSISDN, oldMSISDN, puk, null);
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobileSIMReplacementAsync(string newMSISDN, string oldMSISDN, string puk, object userState) {
            if ((this.NotifyWahh2UMobileSIMReplacementOperationCompleted == null)) {
                this.NotifyWahh2UMobileSIMReplacementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyWahh2UMobileSIMReplacementOperationCompleted);
            }
            this.InvokeAsync("NotifyWahh2UMobileSIMReplacement", new object[] {
                        newMSISDN,
                        oldMSISDN,
                        puk}, this.NotifyWahh2UMobileSIMReplacementOperationCompleted, userState);
        }
        
        private void OnNotifyWahh2UMobileSIMReplacementOperationCompleted(object arg) {
            if ((this.NotifyWahh2UMobileSIMReplacementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyWahh2UMobileSIMReplacementCompleted(this, new NotifyWahh2UMobileSIMReplacementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealerToCustomerTransferCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DealerToCustomerTransferCredit(string srcMsisdn, string destMsisdn, double amount, out int responseCode, out string responseMessage) {
            object[] results = this.Invoke("DealerToCustomerTransferCredit", new object[] {
                        srcMsisdn,
                        destMsisdn,
                        amount});
            responseCode = ((int)(results[1]));
            responseMessage = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DealerToCustomerTransferCreditAsync(string srcMsisdn, string destMsisdn, double amount) {
            this.DealerToCustomerTransferCreditAsync(srcMsisdn, destMsisdn, amount, null);
        }
        
        /// <remarks/>
        public void DealerToCustomerTransferCreditAsync(string srcMsisdn, string destMsisdn, double amount, object userState) {
            if ((this.DealerToCustomerTransferCreditOperationCompleted == null)) {
                this.DealerToCustomerTransferCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealerToCustomerTransferCreditOperationCompleted);
            }
            this.InvokeAsync("DealerToCustomerTransferCredit", new object[] {
                        srcMsisdn,
                        destMsisdn,
                        amount}, this.DealerToCustomerTransferCreditOperationCompleted, userState);
        }
        
        private void OnDealerToCustomerTransferCreditOperationCompleted(object arg) {
            if ((this.DealerToCustomerTransferCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealerToCustomerTransferCreditCompleted(this, new DealerToCustomerTransferCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSIMValueByIMSI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSIMValueByIMSI(string imsi, SIMItem item, out string itemValue) {
            object[] results = this.Invoke("GetSIMValueByIMSI", new object[] {
                        imsi,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSIMValueByIMSIAsync(string imsi, SIMItem item) {
            this.GetSIMValueByIMSIAsync(imsi, item, null);
        }
        
        /// <remarks/>
        public void GetSIMValueByIMSIAsync(string imsi, SIMItem item, object userState) {
            if ((this.GetSIMValueByIMSIOperationCompleted == null)) {
                this.GetSIMValueByIMSIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSIMValueByIMSIOperationCompleted);
            }
            this.InvokeAsync("GetSIMValueByIMSI", new object[] {
                        imsi,
                        item}, this.GetSIMValueByIMSIOperationCompleted, userState);
        }
        
        private void OnGetSIMValueByIMSIOperationCompleted(object arg) {
            if ((this.GetSIMValueByIMSICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSIMValueByIMSICompleted(this, new GetSIMValueByIMSICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSIMValueByICCID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSIMValueByICCID(string iccid, SIMItem item, out string itemValue) {
            object[] results = this.Invoke("GetSIMValueByICCID", new object[] {
                        iccid,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSIMValueByICCIDAsync(string iccid, SIMItem item) {
            this.GetSIMValueByICCIDAsync(iccid, item, null);
        }
        
        /// <remarks/>
        public void GetSIMValueByICCIDAsync(string iccid, SIMItem item, object userState) {
            if ((this.GetSIMValueByICCIDOperationCompleted == null)) {
                this.GetSIMValueByICCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSIMValueByICCIDOperationCompleted);
            }
            this.InvokeAsync("GetSIMValueByICCID", new object[] {
                        iccid,
                        item}, this.GetSIMValueByICCIDOperationCompleted, userState);
        }
        
        private void OnGetSIMValueByICCIDOperationCompleted(object arg) {
            if ((this.GetSIMValueByICCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSIMValueByICCIDCompleted(this, new GetSIMValueByICCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerDataByAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerDataByAccountNumber(string accountNum, out CustomerData details) {
            object[] results = this.Invoke("GetCustomerDataByAccountNumber", new object[] {
                        accountNum});
            details = ((CustomerData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerDataByAccountNumberAsync(string accountNum) {
            this.GetCustomerDataByAccountNumberAsync(accountNum, null);
        }
        
        /// <remarks/>
        public void GetCustomerDataByAccountNumberAsync(string accountNum, object userState) {
            if ((this.GetCustomerDataByAccountNumberOperationCompleted == null)) {
                this.GetCustomerDataByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDataByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetCustomerDataByAccountNumber", new object[] {
                        accountNum}, this.GetCustomerDataByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetCustomerDataByAccountNumberOperationCompleted(object arg) {
            if ((this.GetCustomerDataByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerDataByAccountNumberCompleted(this, new GetCustomerDataByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyCustomerDataByAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyCustomerDataByAccountNumber(string accountNum, ModifyCustomerData modifiedMethod, string value) {
            object[] results = this.Invoke("ModifyCustomerDataByAccountNumber", new object[] {
                        accountNum,
                        modifiedMethod,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCustomerDataByAccountNumberAsync(string accountNum, ModifyCustomerData modifiedMethod, string value) {
            this.ModifyCustomerDataByAccountNumberAsync(accountNum, modifiedMethod, value, null);
        }
        
        /// <remarks/>
        public void ModifyCustomerDataByAccountNumberAsync(string accountNum, ModifyCustomerData modifiedMethod, string value, object userState) {
            if ((this.ModifyCustomerDataByAccountNumberOperationCompleted == null)) {
                this.ModifyCustomerDataByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCustomerDataByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("ModifyCustomerDataByAccountNumber", new object[] {
                        accountNum,
                        modifiedMethod,
                        value}, this.ModifyCustomerDataByAccountNumberOperationCompleted, userState);
        }
        
        private void OnModifyCustomerDataByAccountNumberOperationCompleted(object arg) {
            if ((this.ModifyCustomerDataByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCustomerDataByAccountNumberCompleted(this, new ModifyCustomerDataByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIDTypeByAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateIDTypeByAccountNumber(string accountNo, string value) {
            object[] results = this.Invoke("UpdateIDTypeByAccountNumber", new object[] {
                        accountNo,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIDTypeByAccountNumberAsync(string accountNo, string value) {
            this.UpdateIDTypeByAccountNumberAsync(accountNo, value, null);
        }
        
        /// <remarks/>
        public void UpdateIDTypeByAccountNumberAsync(string accountNo, string value, object userState) {
            if ((this.UpdateIDTypeByAccountNumberOperationCompleted == null)) {
                this.UpdateIDTypeByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIDTypeByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("UpdateIDTypeByAccountNumber", new object[] {
                        accountNo,
                        value}, this.UpdateIDTypeByAccountNumberOperationCompleted, userState);
        }
        
        private void OnUpdateIDTypeByAccountNumberOperationCompleted(object arg) {
            if ((this.UpdateIDTypeByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIDTypeByAccountNumberCompleted(this, new UpdateIDTypeByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountDataByAccountNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountDataByAccountNo(string accountNo, out AccountData details) {
            object[] results = this.Invoke("GetAccountDataByAccountNo", new object[] {
                        accountNo});
            details = ((AccountData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDataByAccountNoAsync(string accountNo) {
            this.GetAccountDataByAccountNoAsync(accountNo, null);
        }
        
        /// <remarks/>
        public void GetAccountDataByAccountNoAsync(string accountNo, object userState) {
            if ((this.GetAccountDataByAccountNoOperationCompleted == null)) {
                this.GetAccountDataByAccountNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDataByAccountNoOperationCompleted);
            }
            this.InvokeAsync("GetAccountDataByAccountNo", new object[] {
                        accountNo}, this.GetAccountDataByAccountNoOperationCompleted, userState);
        }
        
        private void OnGetAccountDataByAccountNoOperationCompleted(object arg) {
            if ((this.GetAccountDataByAccountNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDataByAccountNoCompleted(this, new GetAccountDataByAccountNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPortInNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DRMSActivity CheckPortInNumber(string portInRequest, out int responseCode, out string responseMessage) {
            object[] results = this.Invoke("CheckPortInNumber", new object[] {
                        portInRequest});
            responseCode = ((int)(results[1]));
            responseMessage = ((string)(results[2]));
            return ((DRMSActivity)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPortInNumberAsync(string portInRequest) {
            this.CheckPortInNumberAsync(portInRequest, null);
        }
        
        /// <remarks/>
        public void CheckPortInNumberAsync(string portInRequest, object userState) {
            if ((this.CheckPortInNumberOperationCompleted == null)) {
                this.CheckPortInNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPortInNumberOperationCompleted);
            }
            this.InvokeAsync("CheckPortInNumber", new object[] {
                        portInRequest}, this.CheckPortInNumberOperationCompleted, userState);
        }
        
        private void OnCheckPortInNumberOperationCompleted(object arg) {
            if ((this.CheckPortInNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPortInNumberCompleted(this, new CheckPortInNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyWahh2UMobileActivationWithPortIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyWahh2UMobileActivationWithPortIn(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator, out string accountNumber) {
            object[] results = this.Invoke("NotifyWahh2UMobileActivationWithPortIn", new object[] {
                        customerInfo,
                        subscriptionInfo,
                        portInMSISDN,
                        eOperator});
            accountNumber = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobileActivationWithPortInAsync(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator) {
            this.NotifyWahh2UMobileActivationWithPortInAsync(customerInfo, subscriptionInfo, portInMSISDN, eOperator, null);
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobileActivationWithPortInAsync(CustomerInfo customerInfo, Wahh2USubscriptionInfo subscriptionInfo, string portInMSISDN, Operators eOperator, object userState) {
            if ((this.NotifyWahh2UMobileActivationWithPortInOperationCompleted == null)) {
                this.NotifyWahh2UMobileActivationWithPortInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyWahh2UMobileActivationWithPortInOperationCompleted);
            }
            this.InvokeAsync("NotifyWahh2UMobileActivationWithPortIn", new object[] {
                        customerInfo,
                        subscriptionInfo,
                        portInMSISDN,
                        eOperator}, this.NotifyWahh2UMobileActivationWithPortInOperationCompleted, userState);
        }
        
        private void OnNotifyWahh2UMobileActivationWithPortInOperationCompleted(object arg) {
            if ((this.NotifyWahh2UMobileActivationWithPortInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyWahh2UMobileActivationWithPortInCompleted(this, new NotifyWahh2UMobileActivationWithPortInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyWahh2UMobilePortInResubmission", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyWahh2UMobilePortInResubmission(PortInResubmission portInRequest) {
            object[] results = this.Invoke("NotifyWahh2UMobilePortInResubmission", new object[] {
                        portInRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobilePortInResubmissionAsync(PortInResubmission portInRequest) {
            this.NotifyWahh2UMobilePortInResubmissionAsync(portInRequest, null);
        }
        
        /// <remarks/>
        public void NotifyWahh2UMobilePortInResubmissionAsync(PortInResubmission portInRequest, object userState) {
            if ((this.NotifyWahh2UMobilePortInResubmissionOperationCompleted == null)) {
                this.NotifyWahh2UMobilePortInResubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyWahh2UMobilePortInResubmissionOperationCompleted);
            }
            this.InvokeAsync("NotifyWahh2UMobilePortInResubmission", new object[] {
                        portInRequest}, this.NotifyWahh2UMobilePortInResubmissionOperationCompleted, userState);
        }
        
        private void OnNotifyWahh2UMobilePortInResubmissionOperationCompleted(object arg) {
            if ((this.NotifyWahh2UMobilePortInResubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyWahh2UMobilePortInResubmissionCompleted(this, new NotifyWahh2UMobilePortInResubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReleaseLiftNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReleaseLiftNumbers(string startPhoneNo, string endPhoneNo) {
            object[] results = this.Invoke("ReleaseLiftNumbers", new object[] {
                        startPhoneNo,
                        endPhoneNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseLiftNumbersAsync(string startPhoneNo, string endPhoneNo) {
            this.ReleaseLiftNumbersAsync(startPhoneNo, endPhoneNo, null);
        }
        
        /// <remarks/>
        public void ReleaseLiftNumbersAsync(string startPhoneNo, string endPhoneNo, object userState) {
            if ((this.ReleaseLiftNumbersOperationCompleted == null)) {
                this.ReleaseLiftNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseLiftNumbersOperationCompleted);
            }
            this.InvokeAsync("ReleaseLiftNumbers", new object[] {
                        startPhoneNo,
                        endPhoneNo}, this.ReleaseLiftNumbersOperationCompleted, userState);
        }
        
        private void OnReleaseLiftNumbersOperationCompleted(object arg) {
            if ((this.ReleaseLiftNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseLiftNumbersCompleted(this, new ReleaseLiftNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustCounterValueUsingNobillUnits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustCounterValueUsingNobillUnits(string phoneNumber, string value, int counterId, string adjustmentReason) {
            object[] results = this.Invoke("AdjustCounterValueUsingNobillUnits", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustCounterValueUsingNobillUnitsAsync(string phoneNumber, string value, int counterId, string adjustmentReason) {
            this.AdjustCounterValueUsingNobillUnitsAsync(phoneNumber, value, counterId, adjustmentReason, null);
        }
        
        /// <remarks/>
        public void AdjustCounterValueUsingNobillUnitsAsync(string phoneNumber, string value, int counterId, string adjustmentReason, object userState) {
            if ((this.AdjustCounterValueUsingNobillUnitsOperationCompleted == null)) {
                this.AdjustCounterValueUsingNobillUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustCounterValueUsingNobillUnitsOperationCompleted);
            }
            this.InvokeAsync("AdjustCounterValueUsingNobillUnits", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason}, this.AdjustCounterValueUsingNobillUnitsOperationCompleted, userState);
        }
        
        private void OnAdjustCounterValueUsingNobillUnitsOperationCompleted(object arg) {
            if ((this.AdjustCounterValueUsingNobillUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustCounterValueUsingNobillUnitsCompleted(this, new AdjustCounterValueUsingNobillUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMPPSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMPPSMS(string from, string to, string content) {
            object[] results = this.Invoke("SendSMPPSMS", new object[] {
                        from,
                        to,
                        content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMPPSMSAsync(string from, string to, string content) {
            this.SendSMPPSMSAsync(from, to, content, null);
        }
        
        /// <remarks/>
        public void SendSMPPSMSAsync(string from, string to, string content, object userState) {
            if ((this.SendSMPPSMSOperationCompleted == null)) {
                this.SendSMPPSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMPPSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMPPSMS", new object[] {
                        from,
                        to,
                        content}, this.SendSMPPSMSOperationCompleted, userState);
        }
        
        private void OnSendSMPPSMSOperationCompleted(object arg) {
            if ((this.SendSMPPSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMPPSMSCompleted(this, new SendSMPPSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendHTTPSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendHTTPSMS(string from, string to, string content, bool isArabic) {
            object[] results = this.Invoke("SendHTTPSMS", new object[] {
                        from,
                        to,
                        content,
                        isArabic});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendHTTPSMSAsync(string from, string to, string content, bool isArabic) {
            this.SendHTTPSMSAsync(from, to, content, isArabic, null);
        }
        
        /// <remarks/>
        public void SendHTTPSMSAsync(string from, string to, string content, bool isArabic, object userState) {
            if ((this.SendHTTPSMSOperationCompleted == null)) {
                this.SendHTTPSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendHTTPSMSOperationCompleted);
            }
            this.InvokeAsync("SendHTTPSMS", new object[] {
                        from,
                        to,
                        content,
                        isArabic}, this.SendHTTPSMSOperationCompleted, userState);
        }
        
        private void OnSendHTTPSMSOperationCompleted(object arg) {
            if ((this.SendHTTPSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendHTTPSMSCompleted(this, new SendHTTPSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChargeEvent(string msisdn, int eventId) {
            object[] results = this.Invoke("ChargeEvent", new object[] {
                        msisdn,
                        eventId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeEventAsync(string msisdn, int eventId) {
            this.ChargeEventAsync(msisdn, eventId, null);
        }
        
        /// <remarks/>
        public void ChargeEventAsync(string msisdn, int eventId, object userState) {
            if ((this.ChargeEventOperationCompleted == null)) {
                this.ChargeEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeEventOperationCompleted);
            }
            this.InvokeAsync("ChargeEvent", new object[] {
                        msisdn,
                        eventId}, this.ChargeEventOperationCompleted, userState);
        }
        
        private void OnChargeEventOperationCompleted(object arg) {
            if ((this.ChargeEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeEventCompleted(this, new ChargeEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeEventWithCreditAbility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChargeEventWithCreditAbility(string msisdn, int eventId, out string chargeReference) {
            object[] results = this.Invoke("ChargeEventWithCreditAbility", new object[] {
                        msisdn,
                        eventId});
            chargeReference = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeEventWithCreditAbilityAsync(string msisdn, int eventId) {
            this.ChargeEventWithCreditAbilityAsync(msisdn, eventId, null);
        }
        
        /// <remarks/>
        public void ChargeEventWithCreditAbilityAsync(string msisdn, int eventId, object userState) {
            if ((this.ChargeEventWithCreditAbilityOperationCompleted == null)) {
                this.ChargeEventWithCreditAbilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeEventWithCreditAbilityOperationCompleted);
            }
            this.InvokeAsync("ChargeEventWithCreditAbility", new object[] {
                        msisdn,
                        eventId}, this.ChargeEventWithCreditAbilityOperationCompleted, userState);
        }
        
        private void OnChargeEventWithCreditAbilityOperationCompleted(object arg) {
            if ((this.ChargeEventWithCreditAbilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeEventWithCreditAbilityCompleted(this, new ChargeEventWithCreditAbilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreditEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreditEvent(string msisdn, string chargeReferenceNo, int eventId) {
            object[] results = this.Invoke("CreditEvent", new object[] {
                        msisdn,
                        chargeReferenceNo,
                        eventId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreditEventAsync(string msisdn, string chargeReferenceNo, int eventId) {
            this.CreditEventAsync(msisdn, chargeReferenceNo, eventId, null);
        }
        
        /// <remarks/>
        public void CreditEventAsync(string msisdn, string chargeReferenceNo, int eventId, object userState) {
            if ((this.CreditEventOperationCompleted == null)) {
                this.CreditEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditEventOperationCompleted);
            }
            this.InvokeAsync("CreditEvent", new object[] {
                        msisdn,
                        chargeReferenceNo,
                        eventId}, this.CreditEventOperationCompleted, userState);
        }
        
        private void OnCreditEventOperationCompleted(object arg) {
            if ((this.CreditEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditEventCompleted(this, new CreditEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeReservedEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChargeReservedEvent(string msisdn, int reservationCode) {
            object[] results = this.Invoke("ChargeReservedEvent", new object[] {
                        msisdn,
                        reservationCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeReservedEventAsync(string msisdn, int reservationCode) {
            this.ChargeReservedEventAsync(msisdn, reservationCode, null);
        }
        
        /// <remarks/>
        public void ChargeReservedEventAsync(string msisdn, int reservationCode, object userState) {
            if ((this.ChargeReservedEventOperationCompleted == null)) {
                this.ChargeReservedEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeReservedEventOperationCompleted);
            }
            this.InvokeAsync("ChargeReservedEvent", new object[] {
                        msisdn,
                        reservationCode}, this.ChargeReservedEventOperationCompleted, userState);
        }
        
        private void OnChargeReservedEventOperationCompleted(object arg) {
            if ((this.ChargeReservedEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeReservedEventCompleted(this, new ChargeReservedEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveEvent(string msisdn, int eventId, out int reservationCode) {
            object[] results = this.Invoke("ReserveEvent", new object[] {
                        msisdn,
                        eventId});
            reservationCode = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveEventAsync(string msisdn, int eventId) {
            this.ReserveEventAsync(msisdn, eventId, null);
        }
        
        /// <remarks/>
        public void ReserveEventAsync(string msisdn, int eventId, object userState) {
            if ((this.ReserveEventOperationCompleted == null)) {
                this.ReserveEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveEventOperationCompleted);
            }
            this.InvokeAsync("ReserveEvent", new object[] {
                        msisdn,
                        eventId}, this.ReserveEventOperationCompleted, userState);
        }
        
        private void OnReserveEventOperationCompleted(object arg) {
            if ((this.ReserveEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveEventCompleted(this, new ReserveEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelReservation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelReservation(string msisdn, int reservationCode) {
            object[] results = this.Invoke("CancelReservation", new object[] {
                        msisdn,
                        reservationCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReservationAsync(string msisdn, int reservationCode) {
            this.CancelReservationAsync(msisdn, reservationCode, null);
        }
        
        /// <remarks/>
        public void CancelReservationAsync(string msisdn, int reservationCode, object userState) {
            if ((this.CancelReservationOperationCompleted == null)) {
                this.CancelReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReservationOperationCompleted);
            }
            this.InvokeAsync("CancelReservation", new object[] {
                        msisdn,
                        reservationCode}, this.CancelReservationOperationCompleted, userState);
        }
        
        private void OnCancelReservationOperationCompleted(object arg) {
            if ((this.CancelReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReservationCompleted(this, new CancelReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscriptionValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscriptionValue(string msisdn, SubscriptionItem item, out string itemValue) {
            object[] results = this.Invoke("GetSubscriptionValue", new object[] {
                        msisdn,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscriptionValueAsync(string msisdn, SubscriptionItem item) {
            this.GetSubscriptionValueAsync(msisdn, item, null);
        }
        
        /// <remarks/>
        public void GetSubscriptionValueAsync(string msisdn, SubscriptionItem item, object userState) {
            if ((this.GetSubscriptionValueOperationCompleted == null)) {
                this.GetSubscriptionValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionValueOperationCompleted);
            }
            this.InvokeAsync("GetSubscriptionValue", new object[] {
                        msisdn,
                        item}, this.GetSubscriptionValueOperationCompleted, userState);
        }
        
        private void OnGetSubscriptionValueOperationCompleted(object arg) {
            if ((this.GetSubscriptionValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscriptionValueCompleted(this, new GetSubscriptionValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSimDataByICCID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSimDataByICCID(string iccid, SIMItem item, out string itemValue) {
            object[] results = this.Invoke("GetSimDataByICCID", new object[] {
                        iccid,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSimDataByICCIDAsync(string iccid, SIMItem item) {
            this.GetSimDataByICCIDAsync(iccid, item, null);
        }
        
        /// <remarks/>
        public void GetSimDataByICCIDAsync(string iccid, SIMItem item, object userState) {
            if ((this.GetSimDataByICCIDOperationCompleted == null)) {
                this.GetSimDataByICCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimDataByICCIDOperationCompleted);
            }
            this.InvokeAsync("GetSimDataByICCID", new object[] {
                        iccid,
                        item}, this.GetSimDataByICCIDOperationCompleted, userState);
        }
        
        private void OnGetSimDataByICCIDOperationCompleted(object arg) {
            if ((this.GetSimDataByICCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimDataByICCIDCompleted(this, new GetSimDataByICCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEki", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetEki(string imsi, out string eKi) {
            object[] results = this.Invoke("GetEki", new object[] {
                        imsi});
            eKi = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEkiAsync(string imsi) {
            this.GetEkiAsync(imsi, null);
        }
        
        /// <remarks/>
        public void GetEkiAsync(string imsi, object userState) {
            if ((this.GetEkiOperationCompleted == null)) {
                this.GetEkiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEkiOperationCompleted);
            }
            this.InvokeAsync("GetEki", new object[] {
                        imsi}, this.GetEkiOperationCompleted, userState);
        }
        
        private void OnGetEkiOperationCompleted(object arg) {
            if ((this.GetEkiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEkiCompleted(this, new GetEkiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSimDataByIMSI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSimDataByIMSI(string imsi, SIMItem item, out string itemValue) {
            object[] results = this.Invoke("GetSimDataByIMSI", new object[] {
                        imsi,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSimDataByIMSIAsync(string imsi, SIMItem item) {
            this.GetSimDataByIMSIAsync(imsi, item, null);
        }
        
        /// <remarks/>
        public void GetSimDataByIMSIAsync(string imsi, SIMItem item, object userState) {
            if ((this.GetSimDataByIMSIOperationCompleted == null)) {
                this.GetSimDataByIMSIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimDataByIMSIOperationCompleted);
            }
            this.InvokeAsync("GetSimDataByIMSI", new object[] {
                        imsi,
                        item}, this.GetSimDataByIMSIOperationCompleted, userState);
        }
        
        private void OnGetSimDataByIMSIOperationCompleted(object arg) {
            if ((this.GetSimDataByIMSICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimDataByIMSICompleted(this, new GetSimDataByIMSICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscriptionValueByIMSI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscriptionValueByIMSI(string imsi, SubscriptionItem item, out string itemValue) {
            object[] results = this.Invoke("GetSubscriptionValueByIMSI", new object[] {
                        imsi,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByIMSIAsync(string imsi, SubscriptionItem item) {
            this.GetSubscriptionValueByIMSIAsync(imsi, item, null);
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByIMSIAsync(string imsi, SubscriptionItem item, object userState) {
            if ((this.GetSubscriptionValueByIMSIOperationCompleted == null)) {
                this.GetSubscriptionValueByIMSIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionValueByIMSIOperationCompleted);
            }
            this.InvokeAsync("GetSubscriptionValueByIMSI", new object[] {
                        imsi,
                        item}, this.GetSubscriptionValueByIMSIOperationCompleted, userState);
        }
        
        private void OnGetSubscriptionValueByIMSIOperationCompleted(object arg) {
            if ((this.GetSubscriptionValueByIMSICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscriptionValueByIMSICompleted(this, new GetSubscriptionValueByIMSICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscriptionValueByICCID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscriptionValueByICCID(string iccid, SubscriptionItem item, out string itemValue) {
            object[] results = this.Invoke("GetSubscriptionValueByICCID", new object[] {
                        iccid,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByICCIDAsync(string iccid, SubscriptionItem item) {
            this.GetSubscriptionValueByICCIDAsync(iccid, item, null);
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByICCIDAsync(string iccid, SubscriptionItem item, object userState) {
            if ((this.GetSubscriptionValueByICCIDOperationCompleted == null)) {
                this.GetSubscriptionValueByICCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionValueByICCIDOperationCompleted);
            }
            this.InvokeAsync("GetSubscriptionValueByICCID", new object[] {
                        iccid,
                        item}, this.GetSubscriptionValueByICCIDOperationCompleted, userState);
        }
        
        private void OnGetSubscriptionValueByICCIDOperationCompleted(object arg) {
            if ((this.GetSubscriptionValueByICCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscriptionValueByICCIDCompleted(this, new GetSubscriptionValueByICCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscriptionValueByIMSIEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscriptionValueByIMSIEx(ref string imsi, SubscriptionItem item, out string itemValue) {
            object[] results = this.Invoke("GetSubscriptionValueByIMSIEx", new object[] {
                        imsi,
                        item});
            imsi = ((string)(results[1]));
            itemValue = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByIMSIExAsync(string imsi, SubscriptionItem item) {
            this.GetSubscriptionValueByIMSIExAsync(imsi, item, null);
        }
        
        /// <remarks/>
        public void GetSubscriptionValueByIMSIExAsync(string imsi, SubscriptionItem item, object userState) {
            if ((this.GetSubscriptionValueByIMSIExOperationCompleted == null)) {
                this.GetSubscriptionValueByIMSIExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionValueByIMSIExOperationCompleted);
            }
            this.InvokeAsync("GetSubscriptionValueByIMSIEx", new object[] {
                        imsi,
                        item}, this.GetSubscriptionValueByIMSIExOperationCompleted, userState);
        }
        
        private void OnGetSubscriptionValueByIMSIExOperationCompleted(object arg) {
            if ((this.GetSubscriptionValueByIMSIExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscriptionValueByIMSIExCompleted(this, new GetSubscriptionValueByIMSIExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferCounterFundWithAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferCounterFundWithAmount(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, double amount, string comment) {
            object[] results = this.Invoke("TransferCounterFundWithAmount", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        counterName,
                        reason,
                        userName,
                        amount,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferCounterFundWithAmountAsync(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, double amount, string comment) {
            this.TransferCounterFundWithAmountAsync(fromMSISDN, toMSISDN, counterName, reason, userName, amount, comment, null);
        }
        
        /// <remarks/>
        public void TransferCounterFundWithAmountAsync(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, double amount, string comment, object userState) {
            if ((this.TransferCounterFundWithAmountOperationCompleted == null)) {
                this.TransferCounterFundWithAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferCounterFundWithAmountOperationCompleted);
            }
            this.InvokeAsync("TransferCounterFundWithAmount", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        counterName,
                        reason,
                        userName,
                        amount,
                        comment}, this.TransferCounterFundWithAmountOperationCompleted, userState);
        }
        
        private void OnTransferCounterFundWithAmountOperationCompleted(object arg) {
            if ((this.TransferCounterFundWithAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCounterFundWithAmountCompleted(this, new TransferCounterFundWithAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAndReserveNumberForActivation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAndReserveNumberForActivation(int vanityLevelID, out string reservedNum) {
            object[] results = this.Invoke("GetAndReserveNumberForActivation", new object[] {
                        vanityLevelID});
            reservedNum = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAndReserveNumberForActivationAsync(int vanityLevelID) {
            this.GetAndReserveNumberForActivationAsync(vanityLevelID, null);
        }
        
        /// <remarks/>
        public void GetAndReserveNumberForActivationAsync(int vanityLevelID, object userState) {
            if ((this.GetAndReserveNumberForActivationOperationCompleted == null)) {
                this.GetAndReserveNumberForActivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAndReserveNumberForActivationOperationCompleted);
            }
            this.InvokeAsync("GetAndReserveNumberForActivation", new object[] {
                        vanityLevelID}, this.GetAndReserveNumberForActivationOperationCompleted, userState);
        }
        
        private void OnGetAndReserveNumberForActivationOperationCompleted(object arg) {
            if ((this.GetAndReserveNumberForActivationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAndReserveNumberForActivationCompleted(this, new GetAndReserveNumberForActivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnReserveNumberForActivation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnReserveNumberForActivation(string reservedNumber) {
            object[] results = this.Invoke("UnReserveNumberForActivation", new object[] {
                        reservedNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnReserveNumberForActivationAsync(string reservedNumber) {
            this.UnReserveNumberForActivationAsync(reservedNumber, null);
        }
        
        /// <remarks/>
        public void UnReserveNumberForActivationAsync(string reservedNumber, object userState) {
            if ((this.UnReserveNumberForActivationOperationCompleted == null)) {
                this.UnReserveNumberForActivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnReserveNumberForActivationOperationCompleted);
            }
            this.InvokeAsync("UnReserveNumberForActivation", new object[] {
                        reservedNumber}, this.UnReserveNumberForActivationOperationCompleted, userState);
        }
        
        private void OnUnReserveNumberForActivationOperationCompleted(object arg) {
            if ((this.UnReserveNumberForActivationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnReserveNumberForActivationCompleted(this, new UnReserveNumberForActivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNumberToWrongStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateNumberToWrongStatus(string number) {
            object[] results = this.Invoke("UpdateNumberToWrongStatus", new object[] {
                        number});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNumberToWrongStatusAsync(string number) {
            this.UpdateNumberToWrongStatusAsync(number, null);
        }
        
        /// <remarks/>
        public void UpdateNumberToWrongStatusAsync(string number, object userState) {
            if ((this.UpdateNumberToWrongStatusOperationCompleted == null)) {
                this.UpdateNumberToWrongStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNumberToWrongStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateNumberToWrongStatus", new object[] {
                        number}, this.UpdateNumberToWrongStatusOperationCompleted, userState);
        }
        
        private void OnUpdateNumberToWrongStatusOperationCompleted(object arg) {
            if ((this.UpdateNumberToWrongStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNumberToWrongStatusCompleted(this, new UpdateNumberToWrongStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRBTStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetRBTStatus(string msisdn, int status) {
            object[] results = this.Invoke("SetRBTStatus", new object[] {
                        msisdn,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetRBTStatusAsync(string msisdn, int status) {
            this.SetRBTStatusAsync(msisdn, status, null);
        }
        
        /// <remarks/>
        public void SetRBTStatusAsync(string msisdn, int status, object userState) {
            if ((this.SetRBTStatusOperationCompleted == null)) {
                this.SetRBTStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRBTStatusOperationCompleted);
            }
            this.InvokeAsync("SetRBTStatus", new object[] {
                        msisdn,
                        status}, this.SetRBTStatusOperationCompleted, userState);
        }
        
        private void OnSetRBTStatusOperationCompleted(object arg) {
            if ((this.SetRBTStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRBTStatusCompleted(this, new SetRBTStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomer(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        msisdn,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender,
                        IDTypeValue,
                        alternativeContactNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber) {
            this.UpdateCustomerAsync(msisdn, firstName, lastName, dob, civilID, nationality, gender, IDTypeValue, alternativeContactNumber, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        msisdn,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender,
                        IDTypeValue,
                        alternativeContactNumber}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerByNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerByNumber(int customerNumber, out CustomerDetails details) {
            object[] results = this.Invoke("GetCustomerByNumber", new object[] {
                        customerNumber});
            details = ((CustomerDetails)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByNumberAsync(int customerNumber) {
            this.GetCustomerByNumberAsync(customerNumber, null);
        }
        
        /// <remarks/>
        public void GetCustomerByNumberAsync(int customerNumber, object userState) {
            if ((this.GetCustomerByNumberOperationCompleted == null)) {
                this.GetCustomerByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNumberOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByNumber", new object[] {
                        customerNumber}, this.GetCustomerByNumberOperationCompleted, userState);
        }
        
        private void OnGetCustomerByNumberOperationCompleted(object arg) {
            if ((this.GetCustomerByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNumberCompleted(this, new GetCustomerByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomer(string msisdn, out CustomerDetails details) {
            object[] results = this.Invoke("GetCustomer", new object[] {
                        msisdn});
            details = ((CustomerDetails)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string msisdn) {
            this.GetCustomerAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetCustomerAsync(string msisdn, object userState) {
            if ((this.GetCustomerOperationCompleted == null)) {
                this.GetCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerOperationCompleted);
            }
            this.InvokeAsync("GetCustomer", new object[] {
                        msisdn}, this.GetCustomerOperationCompleted, userState);
        }
        
        private void OnGetCustomerOperationCompleted(object arg) {
            if ((this.GetCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCompleted(this, new GetCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRetailer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRetailer(string imsi, out string retailer) {
            object[] results = this.Invoke("GetRetailer", new object[] {
                        imsi});
            retailer = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRetailerAsync(string imsi) {
            this.GetRetailerAsync(imsi, null);
        }
        
        /// <remarks/>
        public void GetRetailerAsync(string imsi, object userState) {
            if ((this.GetRetailerOperationCompleted == null)) {
                this.GetRetailerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetailerOperationCompleted);
            }
            this.InvokeAsync("GetRetailer", new object[] {
                        imsi}, this.GetRetailerOperationCompleted, userState);
        }
        
        private void OnGetRetailerOperationCompleted(object arg) {
            if ((this.GetRetailerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRetailerCompleted(this, new GetRetailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerByIMSI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerByIMSI(string imsi, out CustomerDetails details) {
            object[] results = this.Invoke("GetCustomerByIMSI", new object[] {
                        imsi});
            details = ((CustomerDetails)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByIMSIAsync(string imsi) {
            this.GetCustomerByIMSIAsync(imsi, null);
        }
        
        /// <remarks/>
        public void GetCustomerByIMSIAsync(string imsi, object userState) {
            if ((this.GetCustomerByIMSIOperationCompleted == null)) {
                this.GetCustomerByIMSIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByIMSIOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByIMSI", new object[] {
                        imsi}, this.GetCustomerByIMSIOperationCompleted, userState);
        }
        
        private void OnGetCustomerByIMSIOperationCompleted(object arg) {
            if ((this.GetCustomerByIMSICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByIMSICompleted(this, new GetCustomerByIMSICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerByNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomerByNumber(int customerNumber, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender) {
            object[] results = this.Invoke("UpdateCustomerByNumber", new object[] {
                        customerNumber,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerByNumberAsync(int customerNumber, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender) {
            this.UpdateCustomerByNumberAsync(customerNumber, firstName, lastName, dob, civilID, nationality, gender, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerByNumberAsync(int customerNumber, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, object userState) {
            if ((this.UpdateCustomerByNumberOperationCompleted == null)) {
                this.UpdateCustomerByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerByNumberOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerByNumber", new object[] {
                        customerNumber,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender}, this.UpdateCustomerByNumberOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerByNumberOperationCompleted(object arg) {
            if ((this.UpdateCustomerByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerByNumberCompleted(this, new UpdateCustomerByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceSIMwithCounters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReplaceSIMwithCounters(string oldIMSI, string newICCID, string oldMSISDN, string newMSISDN) {
            object[] results = this.Invoke("ReplaceSIMwithCounters", new object[] {
                        oldIMSI,
                        newICCID,
                        oldMSISDN,
                        newMSISDN});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceSIMwithCountersAsync(string oldIMSI, string newICCID, string oldMSISDN, string newMSISDN) {
            this.ReplaceSIMwithCountersAsync(oldIMSI, newICCID, oldMSISDN, newMSISDN, null);
        }
        
        /// <remarks/>
        public void ReplaceSIMwithCountersAsync(string oldIMSI, string newICCID, string oldMSISDN, string newMSISDN, object userState) {
            if ((this.ReplaceSIMwithCountersOperationCompleted == null)) {
                this.ReplaceSIMwithCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceSIMwithCountersOperationCompleted);
            }
            this.InvokeAsync("ReplaceSIMwithCounters", new object[] {
                        oldIMSI,
                        newICCID,
                        oldMSISDN,
                        newMSISDN}, this.ReplaceSIMwithCountersOperationCompleted, userState);
        }
        
        private void OnReplaceSIMwithCountersOperationCompleted(object arg) {
            if ((this.ReplaceSIMwithCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceSIMwithCountersCompleted(this, new ReplaceSIMwithCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplaceSIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReplaceSIM(string oldIMSI, string newICCID, string userName) {
            object[] results = this.Invoke("ReplaceSIM", new object[] {
                        oldIMSI,
                        newICCID,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceSIMAsync(string oldIMSI, string newICCID, string userName) {
            this.ReplaceSIMAsync(oldIMSI, newICCID, userName, null);
        }
        
        /// <remarks/>
        public void ReplaceSIMAsync(string oldIMSI, string newICCID, string userName, object userState) {
            if ((this.ReplaceSIMOperationCompleted == null)) {
                this.ReplaceSIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceSIMOperationCompleted);
            }
            this.InvokeAsync("ReplaceSIM", new object[] {
                        oldIMSI,
                        newICCID,
                        userName}, this.ReplaceSIMOperationCompleted, userState);
        }
        
        private void OnReplaceSIMOperationCompleted(object arg) {
            if ((this.ReplaceSIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceSIMCompleted(this, new ReplaceSIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFund(string fromMSISDN, string toMSISDN, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFund", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFundAsync(string fromMSISDN, string toMSISDN, string reason, string userName, string comment) {
            this.TransferFundAsync(fromMSISDN, toMSISDN, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFundAsync(string fromMSISDN, string toMSISDN, string reason, string userName, string comment, object userState) {
            if ((this.TransferFundOperationCompleted == null)) {
                this.TransferFundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFundOperationCompleted);
            }
            this.InvokeAsync("TransferFund", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        reason,
                        userName,
                        comment}, this.TransferFundOperationCompleted, userState);
        }
        
        private void OnTransferFundOperationCompleted(object arg) {
            if ((this.TransferFundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFundCompleted(this, new TransferFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFromMainAccountToCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFromMainAccountToCounter(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFromMainAccountToCounter", new object[] {
                        msisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFromMainAccountToCounterAsync(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            this.TransferFromMainAccountToCounterAsync(msisdn, counterTypeName, amount, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFromMainAccountToCounterAsync(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment, object userState) {
            if ((this.TransferFromMainAccountToCounterOperationCompleted == null)) {
                this.TransferFromMainAccountToCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFromMainAccountToCounterOperationCompleted);
            }
            this.InvokeAsync("TransferFromMainAccountToCounter", new object[] {
                        msisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment}, this.TransferFromMainAccountToCounterOperationCompleted, userState);
        }
        
        private void OnTransferFromMainAccountToCounterOperationCompleted(object arg) {
            if ((this.TransferFromMainAccountToCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFromMainAccountToCounterCompleted(this, new TransferFromMainAccountToCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFromCounterToMainAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFromCounterToMainAccount(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFromCounterToMainAccount", new object[] {
                        msisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainAccountAsync(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            this.TransferFromCounterToMainAccountAsync(msisdn, counterTypeName, amount, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainAccountAsync(string msisdn, string counterTypeName, decimal amount, string reason, string userName, string comment, object userState) {
            if ((this.TransferFromCounterToMainAccountOperationCompleted == null)) {
                this.TransferFromCounterToMainAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFromCounterToMainAccountOperationCompleted);
            }
            this.InvokeAsync("TransferFromCounterToMainAccount", new object[] {
                        msisdn,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment}, this.TransferFromCounterToMainAccountOperationCompleted, userState);
        }
        
        private void OnTransferFromCounterToMainAccountOperationCompleted(object arg) {
            if ((this.TransferFromCounterToMainAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFromCounterToMainAccountCompleted(this, new TransferFromCounterToMainAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferFromCounterToMainAccountDifferentMSISDN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferFromCounterToMainAccountDifferentMSISDN(string sourceMSISDN, string destMSISDN, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferFromCounterToMainAccountDifferentMSISDN", new object[] {
                        sourceMSISDN,
                        destMSISDN,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainAccountDifferentMSISDNAsync(string sourceMSISDN, string destMSISDN, string counterTypeName, decimal amount, string reason, string userName, string comment) {
            this.TransferFromCounterToMainAccountDifferentMSISDNAsync(sourceMSISDN, destMSISDN, counterTypeName, amount, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferFromCounterToMainAccountDifferentMSISDNAsync(string sourceMSISDN, string destMSISDN, string counterTypeName, decimal amount, string reason, string userName, string comment, object userState) {
            if ((this.TransferFromCounterToMainAccountDifferentMSISDNOperationCompleted == null)) {
                this.TransferFromCounterToMainAccountDifferentMSISDNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferFromCounterToMainAccountDifferentMSISDNOperationCompleted);
            }
            this.InvokeAsync("TransferFromCounterToMainAccountDifferentMSISDN", new object[] {
                        sourceMSISDN,
                        destMSISDN,
                        counterTypeName,
                        amount,
                        reason,
                        userName,
                        comment}, this.TransferFromCounterToMainAccountDifferentMSISDNOperationCompleted, userState);
        }
        
        private void OnTransferFromCounterToMainAccountDifferentMSISDNOperationCompleted(object arg) {
            if ((this.TransferFromCounterToMainAccountDifferentMSISDNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferFromCounterToMainAccountDifferentMSISDNCompleted(this, new TransferFromCounterToMainAccountDifferentMSISDNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferMoney(string fromMSISDN, string toMSISDN, decimal money, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferMoney", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        money,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferMoneyAsync(string fromMSISDN, string toMSISDN, decimal money, string reason, string userName, string comment) {
            this.TransferMoneyAsync(fromMSISDN, toMSISDN, money, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferMoneyAsync(string fromMSISDN, string toMSISDN, decimal money, string reason, string userName, string comment, object userState) {
            if ((this.TransferMoneyOperationCompleted == null)) {
                this.TransferMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferMoneyOperationCompleted);
            }
            this.InvokeAsync("TransferMoney", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        money,
                        reason,
                        userName,
                        comment}, this.TransferMoneyOperationCompleted, userState);
        }
        
        private void OnTransferMoneyOperationCompleted(object arg) {
            if ((this.TransferMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferMoneyCompleted(this, new TransferMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferCounterFund", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferCounterFund(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, string comment) {
            object[] results = this.Invoke("TransferCounterFund", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        counterName,
                        reason,
                        userName,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferCounterFundAsync(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, string comment) {
            this.TransferCounterFundAsync(fromMSISDN, toMSISDN, counterName, reason, userName, comment, null);
        }
        
        /// <remarks/>
        public void TransferCounterFundAsync(string fromMSISDN, string toMSISDN, string counterName, string reason, string userName, string comment, object userState) {
            if ((this.TransferCounterFundOperationCompleted == null)) {
                this.TransferCounterFundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferCounterFundOperationCompleted);
            }
            this.InvokeAsync("TransferCounterFund", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        counterName,
                        reason,
                        userName,
                        comment}, this.TransferCounterFundOperationCompleted, userState);
        }
        
        private void OnTransferCounterFundOperationCompleted(object arg) {
            if ((this.TransferCounterFundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCounterFundCompleted(this, new TransferCounterFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomer(string msisdn, string userName) {
            object[] results = this.Invoke("DeleteCustomer", new object[] {
                        msisdn,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(string msisdn, string userName) {
            this.DeleteCustomerAsync(msisdn, userName, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(string msisdn, string userName, object userState) {
            if ((this.DeleteCustomerOperationCompleted == null)) {
                this.DeleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomer", new object[] {
                        msisdn,
                        userName}, this.DeleteCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerOperationCompleted(object arg) {
            if ((this.DeleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerCompleted(this, new DeleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomerPortOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomerPortOut(string msisdn, string userName) {
            object[] results = this.Invoke("DeleteCustomerPortOut", new object[] {
                        msisdn,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerPortOutAsync(string msisdn, string userName) {
            this.DeleteCustomerPortOutAsync(msisdn, userName, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerPortOutAsync(string msisdn, string userName, object userState) {
            if ((this.DeleteCustomerPortOutOperationCompleted == null)) {
                this.DeleteCustomerPortOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerPortOutOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomerPortOut", new object[] {
                        msisdn,
                        userName}, this.DeleteCustomerPortOutOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerPortOutOperationCompleted(object arg) {
            if ((this.DeleteCustomerPortOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerPortOutCompleted(this, new DeleteCustomerPortOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAccount(string accountNumber, string userName) {
            object[] results = this.Invoke("DeleteAccount", new object[] {
                        accountNumber,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string accountNumber, string userName) {
            this.DeleteAccountAsync(accountNumber, userName, null);
        }
        
        /// <remarks/>
        public void DeleteAccountAsync(string accountNumber, string userName, object userState) {
            if ((this.DeleteAccountOperationCompleted == null)) {
                this.DeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteAccount", new object[] {
                        accountNumber,
                        userName}, this.DeleteAccountOperationCompleted, userState);
        }
        
        private void OnDeleteAccountOperationCompleted(object arg) {
            if ((this.DeleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePhoneNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeletePhoneNumber(string msisdn, string userName, bool isForcedelete) {
            object[] results = this.Invoke("DeletePhoneNumber", new object[] {
                        msisdn,
                        userName,
                        isForcedelete});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePhoneNumberAsync(string msisdn, string userName, bool isForcedelete) {
            this.DeletePhoneNumberAsync(msisdn, userName, isForcedelete, null);
        }
        
        /// <remarks/>
        public void DeletePhoneNumberAsync(string msisdn, string userName, bool isForcedelete, object userState) {
            if ((this.DeletePhoneNumberOperationCompleted == null)) {
                this.DeletePhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePhoneNumberOperationCompleted);
            }
            this.InvokeAsync("DeletePhoneNumber", new object[] {
                        msisdn,
                        userName,
                        isForcedelete}, this.DeletePhoneNumberOperationCompleted, userState);
        }
        
        private void OnDeletePhoneNumberOperationCompleted(object arg) {
            if ((this.DeletePhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePhoneNumberCompleted(this, new DeletePhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSIMValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSIMValue(string msisdn, SIMItem item, out string itemValue) {
            object[] results = this.Invoke("GetSIMValue", new object[] {
                        msisdn,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSIMValueAsync(string msisdn, SIMItem item) {
            this.GetSIMValueAsync(msisdn, item, null);
        }
        
        /// <remarks/>
        public void GetSIMValueAsync(string msisdn, SIMItem item, object userState) {
            if ((this.GetSIMValueOperationCompleted == null)) {
                this.GetSIMValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSIMValueOperationCompleted);
            }
            this.InvokeAsync("GetSIMValue", new object[] {
                        msisdn,
                        item}, this.GetSIMValueOperationCompleted, userState);
        }
        
        private void OnGetSIMValueOperationCompleted(object arg) {
            if ((this.GetSIMValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSIMValueCompleted(this, new GetSIMValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIDType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateIDType(string customerNumber, IDType idType) {
            object[] results = this.Invoke("UpdateIDType", new object[] {
                        customerNumber,
                        idType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIDTypeAsync(string customerNumber, IDType idType) {
            this.UpdateIDTypeAsync(customerNumber, idType, null);
        }
        
        /// <remarks/>
        public void UpdateIDTypeAsync(string customerNumber, IDType idType, object userState) {
            if ((this.UpdateIDTypeOperationCompleted == null)) {
                this.UpdateIDTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIDTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateIDType", new object[] {
                        customerNumber,
                        idType}, this.UpdateIDTypeOperationCompleted, userState);
        }
        
        private void OnUpdateIDTypeOperationCompleted(object arg) {
            if ((this.UpdateIDTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIDTypeCompleted(this, new UpdateIDTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIDType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetIDType(string customerNumber, out IDType idTypeValue) {
            object[] results = this.Invoke("GetIDType", new object[] {
                        customerNumber});
            idTypeValue = ((IDType)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetIDTypeAsync(string customerNumber) {
            this.GetIDTypeAsync(customerNumber, null);
        }
        
        /// <remarks/>
        public void GetIDTypeAsync(string customerNumber, object userState) {
            if ((this.GetIDTypeOperationCompleted == null)) {
                this.GetIDTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDTypeOperationCompleted);
            }
            this.InvokeAsync("GetIDType", new object[] {
                        customerNumber}, this.GetIDTypeOperationCompleted, userState);
        }
        
        private void OnGetIDTypeOperationCompleted(object arg) {
            if ((this.GetIDTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIDTypeCompleted(this, new GetIDTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOnlineRechargeAdjustment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckOnlineRechargeAdjustment(string phoneNumber, string transactionNumber) {
            object[] results = this.Invoke("CheckOnlineRechargeAdjustment", new object[] {
                        phoneNumber,
                        transactionNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOnlineRechargeAdjustmentAsync(string phoneNumber, string transactionNumber) {
            this.CheckOnlineRechargeAdjustmentAsync(phoneNumber, transactionNumber, null);
        }
        
        /// <remarks/>
        public void CheckOnlineRechargeAdjustmentAsync(string phoneNumber, string transactionNumber, object userState) {
            if ((this.CheckOnlineRechargeAdjustmentOperationCompleted == null)) {
                this.CheckOnlineRechargeAdjustmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOnlineRechargeAdjustmentOperationCompleted);
            }
            this.InvokeAsync("CheckOnlineRechargeAdjustment", new object[] {
                        phoneNumber,
                        transactionNumber}, this.CheckOnlineRechargeAdjustmentOperationCompleted, userState);
        }
        
        private void OnCheckOnlineRechargeAdjustmentOperationCompleted(object arg) {
            if ((this.CheckOnlineRechargeAdjustmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOnlineRechargeAdjustmentCompleted(this, new CheckOnlineRechargeAdjustmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCustomerService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCustomerService(string phoneNumber, string csName) {
            object[] results = this.Invoke("AddCustomerService", new object[] {
                        phoneNumber,
                        csName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomerServiceAsync(string phoneNumber, string csName) {
            this.AddCustomerServiceAsync(phoneNumber, csName, null);
        }
        
        /// <remarks/>
        public void AddCustomerServiceAsync(string phoneNumber, string csName, object userState) {
            if ((this.AddCustomerServiceOperationCompleted == null)) {
                this.AddCustomerServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerServiceOperationCompleted);
            }
            this.InvokeAsync("AddCustomerService", new object[] {
                        phoneNumber,
                        csName}, this.AddCustomerServiceOperationCompleted, userState);
        }
        
        private void OnAddCustomerServiceOperationCompleted(object arg) {
            if ((this.AddCustomerServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerServiceCompleted(this, new AddCustomerServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReuseSIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReuseSIM(string imsi) {
            object[] results = this.Invoke("ReuseSIM", new object[] {
                        imsi});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReuseSIMAsync(string imsi) {
            this.ReuseSIMAsync(imsi, null);
        }
        
        /// <remarks/>
        public void ReuseSIMAsync(string imsi, object userState) {
            if ((this.ReuseSIMOperationCompleted == null)) {
                this.ReuseSIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReuseSIMOperationCompleted);
            }
            this.InvokeAsync("ReuseSIM", new object[] {
                        imsi}, this.ReuseSIMOperationCompleted, userState);
        }
        
        private void OnReuseSIMOperationCompleted(object arg) {
            if ((this.ReuseSIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReuseSIMCompleted(this, new ReuseSIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnblockChargedActivities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnblockChargedActivities(string phoneNumber) {
            object[] results = this.Invoke("UnblockChargedActivities", new object[] {
                        phoneNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnblockChargedActivitiesAsync(string phoneNumber) {
            this.UnblockChargedActivitiesAsync(phoneNumber, null);
        }
        
        /// <remarks/>
        public void UnblockChargedActivitiesAsync(string phoneNumber, object userState) {
            if ((this.UnblockChargedActivitiesOperationCompleted == null)) {
                this.UnblockChargedActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnblockChargedActivitiesOperationCompleted);
            }
            this.InvokeAsync("UnblockChargedActivities", new object[] {
                        phoneNumber}, this.UnblockChargedActivitiesOperationCompleted, userState);
        }
        
        private void OnUnblockChargedActivitiesOperationCompleted(object arg) {
            if ((this.UnblockChargedActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnblockChargedActivitiesCompleted(this, new UnblockChargedActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveCustomerService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveCustomerService(string phoneNumber, string csName) {
            object[] results = this.Invoke("RemoveCustomerService", new object[] {
                        phoneNumber,
                        csName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCustomerServiceAsync(string phoneNumber, string csName) {
            this.RemoveCustomerServiceAsync(phoneNumber, csName, null);
        }
        
        /// <remarks/>
        public void RemoveCustomerServiceAsync(string phoneNumber, string csName, object userState) {
            if ((this.RemoveCustomerServiceOperationCompleted == null)) {
                this.RemoveCustomerServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCustomerServiceOperationCompleted);
            }
            this.InvokeAsync("RemoveCustomerService", new object[] {
                        phoneNumber,
                        csName}, this.RemoveCustomerServiceOperationCompleted, userState);
        }
        
        private void OnRemoveCustomerServiceOperationCompleted(object arg) {
            if ((this.RemoveCustomerServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCustomerServiceCompleted(this, new RemoveCustomerServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCustomerService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckCustomerService(string phoneNumber, string csName) {
            object[] results = this.Invoke("CheckCustomerService", new object[] {
                        phoneNumber,
                        csName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCustomerServiceAsync(string phoneNumber, string csName) {
            this.CheckCustomerServiceAsync(phoneNumber, csName, null);
        }
        
        /// <remarks/>
        public void CheckCustomerServiceAsync(string phoneNumber, string csName, object userState) {
            if ((this.CheckCustomerServiceOperationCompleted == null)) {
                this.CheckCustomerServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCustomerServiceOperationCompleted);
            }
            this.InvokeAsync("CheckCustomerService", new object[] {
                        phoneNumber,
                        csName}, this.CheckCustomerServiceOperationCompleted, userState);
        }
        
        private void OnCheckCustomerServiceOperationCompleted(object arg) {
            if ((this.CheckCustomerServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCustomerServiceCompleted(this, new CheckCustomerServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendSubscriptionExpiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExtendSubscriptionExpiry(string phoneNumber, int days) {
            object[] results = this.Invoke("ExtendSubscriptionExpiry", new object[] {
                        phoneNumber,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExtendSubscriptionExpiryAsync(string phoneNumber, int days) {
            this.ExtendSubscriptionExpiryAsync(phoneNumber, days, null);
        }
        
        /// <remarks/>
        public void ExtendSubscriptionExpiryAsync(string phoneNumber, int days, object userState) {
            if ((this.ExtendSubscriptionExpiryOperationCompleted == null)) {
                this.ExtendSubscriptionExpiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtendSubscriptionExpiryOperationCompleted);
            }
            this.InvokeAsync("ExtendSubscriptionExpiry", new object[] {
                        phoneNumber,
                        days}, this.ExtendSubscriptionExpiryOperationCompleted, userState);
        }
        
        private void OnExtendSubscriptionExpiryOperationCompleted(object arg) {
            if ((this.ExtendSubscriptionExpiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtendSubscriptionExpiryCompleted(this, new ExtendSubscriptionExpiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendCounterExpiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExtendCounterExpiry(string phoneNumber, string counterTypeName, int days) {
            object[] results = this.Invoke("ExtendCounterExpiry", new object[] {
                        phoneNumber,
                        counterTypeName,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExtendCounterExpiryAsync(string phoneNumber, string counterTypeName, int days) {
            this.ExtendCounterExpiryAsync(phoneNumber, counterTypeName, days, null);
        }
        
        /// <remarks/>
        public void ExtendCounterExpiryAsync(string phoneNumber, string counterTypeName, int days, object userState) {
            if ((this.ExtendCounterExpiryOperationCompleted == null)) {
                this.ExtendCounterExpiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtendCounterExpiryOperationCompleted);
            }
            this.InvokeAsync("ExtendCounterExpiry", new object[] {
                        phoneNumber,
                        counterTypeName,
                        days}, this.ExtendCounterExpiryOperationCompleted, userState);
        }
        
        private void OnExtendCounterExpiryOperationCompleted(object arg) {
            if ((this.ExtendCounterExpiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtendCounterExpiryCompleted(this, new ExtendCounterExpiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendCustomerServiceExpiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExtendCustomerServiceExpiry(string phoneNumber, string customerServiceName, int days) {
            object[] results = this.Invoke("ExtendCustomerServiceExpiry", new object[] {
                        phoneNumber,
                        customerServiceName,
                        days});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExtendCustomerServiceExpiryAsync(string phoneNumber, string customerServiceName, int days) {
            this.ExtendCustomerServiceExpiryAsync(phoneNumber, customerServiceName, days, null);
        }
        
        /// <remarks/>
        public void ExtendCustomerServiceExpiryAsync(string phoneNumber, string customerServiceName, int days, object userState) {
            if ((this.ExtendCustomerServiceExpiryOperationCompleted == null)) {
                this.ExtendCustomerServiceExpiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtendCustomerServiceExpiryOperationCompleted);
            }
            this.InvokeAsync("ExtendCustomerServiceExpiry", new object[] {
                        phoneNumber,
                        customerServiceName,
                        days}, this.ExtendCustomerServiceExpiryOperationCompleted, userState);
        }
        
        private void OnExtendCustomerServiceExpiryOperationCompleted(object arg) {
            if ((this.ExtendCustomerServiceExpiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtendCustomerServiceExpiryCompleted(this, new ExtendCustomerServiceExpiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountValue(string msisdn, AccountItem item, out string itemValue) {
            object[] results = this.Invoke("GetAccountValue", new object[] {
                        msisdn,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountValueAsync(string msisdn, AccountItem item) {
            this.GetAccountValueAsync(msisdn, item, null);
        }
        
        /// <remarks/>
        public void GetAccountValueAsync(string msisdn, AccountItem item, object userState) {
            if ((this.GetAccountValueOperationCompleted == null)) {
                this.GetAccountValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountValueOperationCompleted);
            }
            this.InvokeAsync("GetAccountValue", new object[] {
                        msisdn,
                        item}, this.GetAccountValueOperationCompleted, userState);
        }
        
        private void OnGetAccountValueOperationCompleted(object arg) {
            if ((this.GetAccountValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountValueCompleted(this, new GetAccountValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCreditTransferValueByServiceName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCreditTransferValueByServiceName(string msisdn, CreditTransferItem item, string serviceName, out string itemValue) {
            object[] results = this.Invoke("GetCreditTransferValueByServiceName", new object[] {
                        msisdn,
                        item,
                        serviceName});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditTransferValueByServiceNameAsync(string msisdn, CreditTransferItem item, string serviceName) {
            this.GetCreditTransferValueByServiceNameAsync(msisdn, item, serviceName, null);
        }
        
        /// <remarks/>
        public void GetCreditTransferValueByServiceNameAsync(string msisdn, CreditTransferItem item, string serviceName, object userState) {
            if ((this.GetCreditTransferValueByServiceNameOperationCompleted == null)) {
                this.GetCreditTransferValueByServiceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditTransferValueByServiceNameOperationCompleted);
            }
            this.InvokeAsync("GetCreditTransferValueByServiceName", new object[] {
                        msisdn,
                        item,
                        serviceName}, this.GetCreditTransferValueByServiceNameOperationCompleted, userState);
        }
        
        private void OnGetCreditTransferValueByServiceNameOperationCompleted(object arg) {
            if ((this.GetCreditTransferValueByServiceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditTransferValueByServiceNameCompleted(this, new GetCreditTransferValueByServiceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCreditTransferValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCreditTransferValue(string msisdn, CreditTransferItem item, out string itemValue) {
            object[] results = this.Invoke("GetCreditTransferValue", new object[] {
                        msisdn,
                        item});
            itemValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditTransferValueAsync(string msisdn, CreditTransferItem item) {
            this.GetCreditTransferValueAsync(msisdn, item, null);
        }
        
        /// <remarks/>
        public void GetCreditTransferValueAsync(string msisdn, CreditTransferItem item, object userState) {
            if ((this.GetCreditTransferValueOperationCompleted == null)) {
                this.GetCreditTransferValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditTransferValueOperationCompleted);
            }
            this.InvokeAsync("GetCreditTransferValue", new object[] {
                        msisdn,
                        item}, this.GetCreditTransferValueOperationCompleted, userState);
        }
        
        private void OnGetCreditTransferValueOperationCompleted(object arg) {
            if ((this.GetCreditTransferValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditTransferValueCompleted(this, new GetCreditTransferValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChargeMMS(string phoneNumber, decimal amount, string comments) {
            object[] results = this.Invoke("ChargeMMS", new object[] {
                        phoneNumber,
                        amount,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeMMSAsync(string phoneNumber, decimal amount, string comments) {
            this.ChargeMMSAsync(phoneNumber, amount, comments, null);
        }
        
        /// <remarks/>
        public void ChargeMMSAsync(string phoneNumber, decimal amount, string comments, object userState) {
            if ((this.ChargeMMSOperationCompleted == null)) {
                this.ChargeMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeMMSOperationCompleted);
            }
            this.InvokeAsync("ChargeMMS", new object[] {
                        phoneNumber,
                        amount,
                        comments}, this.ChargeMMSOperationCompleted, userState);
        }
        
        private void OnChargeMMSOperationCompleted(object arg) {
            if ((this.ChargeMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeMMSCompleted(this, new ChargeMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RechargeAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RechargeAmount(string phoneNumber, decimal amount, string adjustmentReason, string adjustmentType, string comments) {
            object[] results = this.Invoke("RechargeAmount", new object[] {
                        phoneNumber,
                        amount,
                        adjustmentReason,
                        adjustmentType,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RechargeAmountAsync(string phoneNumber, decimal amount, string adjustmentReason, string adjustmentType, string comments) {
            this.RechargeAmountAsync(phoneNumber, amount, adjustmentReason, adjustmentType, comments, null);
        }
        
        /// <remarks/>
        public void RechargeAmountAsync(string phoneNumber, decimal amount, string adjustmentReason, string adjustmentType, string comments, object userState) {
            if ((this.RechargeAmountOperationCompleted == null)) {
                this.RechargeAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRechargeAmountOperationCompleted);
            }
            this.InvokeAsync("RechargeAmount", new object[] {
                        phoneNumber,
                        amount,
                        adjustmentReason,
                        adjustmentType,
                        comments}, this.RechargeAmountOperationCompleted, userState);
        }
        
        private void OnRechargeAmountOperationCompleted(object arg) {
            if ((this.RechargeAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RechargeAmountCompleted(this, new RechargeAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustAccountBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustAccountBalance(string phoneNumber, decimal amount, string transactionNumber) {
            object[] results = this.Invoke("AdjustAccountBalance", new object[] {
                        phoneNumber,
                        amount,
                        transactionNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustAccountBalanceAsync(string phoneNumber, decimal amount, string transactionNumber) {
            this.AdjustAccountBalanceAsync(phoneNumber, amount, transactionNumber, null);
        }
        
        /// <remarks/>
        public void AdjustAccountBalanceAsync(string phoneNumber, decimal amount, string transactionNumber, object userState) {
            if ((this.AdjustAccountBalanceOperationCompleted == null)) {
                this.AdjustAccountBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustAccountBalanceOperationCompleted);
            }
            this.InvokeAsync("AdjustAccountBalance", new object[] {
                        phoneNumber,
                        amount,
                        transactionNumber}, this.AdjustAccountBalanceOperationCompleted, userState);
        }
        
        private void OnAdjustAccountBalanceOperationCompleted(object arg) {
            if ((this.AdjustAccountBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustAccountBalanceCompleted(this, new AdjustAccountBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustAccountByReason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustAccountByReason(string phoneNumber, decimal amount, string transactionNumber, string adjustmentReason, string adjustmentType, string comment) {
            object[] results = this.Invoke("AdjustAccountByReason", new object[] {
                        phoneNumber,
                        amount,
                        transactionNumber,
                        adjustmentReason,
                        adjustmentType,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustAccountByReasonAsync(string phoneNumber, decimal amount, string transactionNumber, string adjustmentReason, string adjustmentType, string comment) {
            this.AdjustAccountByReasonAsync(phoneNumber, amount, transactionNumber, adjustmentReason, adjustmentType, comment, null);
        }
        
        /// <remarks/>
        public void AdjustAccountByReasonAsync(string phoneNumber, decimal amount, string transactionNumber, string adjustmentReason, string adjustmentType, string comment, object userState) {
            if ((this.AdjustAccountByReasonOperationCompleted == null)) {
                this.AdjustAccountByReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustAccountByReasonOperationCompleted);
            }
            this.InvokeAsync("AdjustAccountByReason", new object[] {
                        phoneNumber,
                        amount,
                        transactionNumber,
                        adjustmentReason,
                        adjustmentType,
                        comment}, this.AdjustAccountByReasonOperationCompleted, userState);
        }
        
        private void OnAdjustAccountByReasonOperationCompleted(object arg) {
            if ((this.AdjustAccountByReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustAccountByReasonCompleted(this, new AdjustAccountByReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustCounterBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustCounterBalance(string phoneNumber, decimal amount, int counterId, string adjustmentReason, string comments) {
            object[] results = this.Invoke("AdjustCounterBalance", new object[] {
                        phoneNumber,
                        amount,
                        counterId,
                        adjustmentReason,
                        comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustCounterBalanceAsync(string phoneNumber, decimal amount, int counterId, string adjustmentReason, string comments) {
            this.AdjustCounterBalanceAsync(phoneNumber, amount, counterId, adjustmentReason, comments, null);
        }
        
        /// <remarks/>
        public void AdjustCounterBalanceAsync(string phoneNumber, decimal amount, int counterId, string adjustmentReason, string comments, object userState) {
            if ((this.AdjustCounterBalanceOperationCompleted == null)) {
                this.AdjustCounterBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustCounterBalanceOperationCompleted);
            }
            this.InvokeAsync("AdjustCounterBalance", new object[] {
                        phoneNumber,
                        amount,
                        counterId,
                        adjustmentReason,
                        comments}, this.AdjustCounterBalanceOperationCompleted, userState);
        }
        
        private void OnAdjustCounterBalanceOperationCompleted(object arg) {
            if ((this.AdjustCounterBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustCounterBalanceCompleted(this, new AdjustCounterBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustCounterValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustCounterValue(string phoneNumber, int value, int counterId, string adjustmentReason) {
            object[] results = this.Invoke("AdjustCounterValue", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustCounterValueAsync(string phoneNumber, int value, int counterId, string adjustmentReason) {
            this.AdjustCounterValueAsync(phoneNumber, value, counterId, adjustmentReason, null);
        }
        
        /// <remarks/>
        public void AdjustCounterValueAsync(string phoneNumber, int value, int counterId, string adjustmentReason, object userState) {
            if ((this.AdjustCounterValueOperationCompleted == null)) {
                this.AdjustCounterValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustCounterValueOperationCompleted);
            }
            this.InvokeAsync("AdjustCounterValue", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason}, this.AdjustCounterValueOperationCompleted, userState);
        }
        
        private void OnAdjustCounterValueOperationCompleted(object arg) {
            if ((this.AdjustCounterValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustCounterValueCompleted(this, new AdjustCounterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCounters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountCounters(string msisdn, out Counter[] counters) {
            object[] results = this.Invoke("GetAccountCounters", new object[] {
                        msisdn});
            counters = ((Counter[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountCountersAsync(string msisdn) {
            this.GetAccountCountersAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetAccountCountersAsync(string msisdn, object userState) {
            if ((this.GetAccountCountersOperationCompleted == null)) {
                this.GetAccountCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCountersOperationCompleted);
            }
            this.InvokeAsync("GetAccountCounters", new object[] {
                        msisdn}, this.GetAccountCountersOperationCompleted, userState);
        }
        
        private void OnGetAccountCountersOperationCompleted(object arg) {
            if ((this.GetAccountCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCountersCompleted(this, new GetAccountCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPropertyValue(string msisdn, string propertyName, out string propertyValue) {
            object[] results = this.Invoke("GetPropertyValue", new object[] {
                        msisdn,
                        propertyName});
            propertyValue = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyValueAsync(string msisdn, string propertyName) {
            this.GetPropertyValueAsync(msisdn, propertyName, null);
        }
        
        /// <remarks/>
        public void GetPropertyValueAsync(string msisdn, string propertyName, object userState) {
            if ((this.GetPropertyValueOperationCompleted == null)) {
                this.GetPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyValueOperationCompleted);
            }
            this.InvokeAsync("GetPropertyValue", new object[] {
                        msisdn,
                        propertyName}, this.GetPropertyValueOperationCompleted, userState);
        }
        
        private void OnGetPropertyValueOperationCompleted(object arg) {
            if ((this.GetPropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyValueCompleted(this, new GetPropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountData(string msisdn, out AccountData details) {
            object[] results = this.Invoke("GetAccountData", new object[] {
                        msisdn});
            details = ((AccountData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDataAsync(string msisdn) {
            this.GetAccountDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetAccountDataAsync(string msisdn, object userState) {
            if ((this.GetAccountDataOperationCompleted == null)) {
                this.GetAccountDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDataOperationCompleted);
            }
            this.InvokeAsync("GetAccountData", new object[] {
                        msisdn}, this.GetAccountDataOperationCompleted, userState);
        }
        
        private void OnGetAccountDataOperationCompleted(object arg) {
            if ((this.GetAccountDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDataCompleted(this, new GetAccountDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerData(string msisdn, out CustomerData details) {
            object[] results = this.Invoke("GetCustomerData", new object[] {
                        msisdn});
            details = ((CustomerData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerDataAsync(string msisdn) {
            this.GetCustomerDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetCustomerDataAsync(string msisdn, object userState) {
            if ((this.GetCustomerDataOperationCompleted == null)) {
                this.GetCustomerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDataOperationCompleted);
            }
            this.InvokeAsync("GetCustomerData", new object[] {
                        msisdn}, this.GetCustomerDataOperationCompleted, userState);
        }
        
        private void OnGetCustomerDataOperationCompleted(object arg) {
            if ((this.GetCustomerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerDataCompleted(this, new GetCustomerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscribtionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscribtionData(string msisdn, out SubscribtionData details) {
            object[] results = this.Invoke("GetSubscribtionData", new object[] {
                        msisdn});
            details = ((SubscribtionData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribtionDataAsync(string msisdn) {
            this.GetSubscribtionDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetSubscribtionDataAsync(string msisdn, object userState) {
            if ((this.GetSubscribtionDataOperationCompleted == null)) {
                this.GetSubscribtionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribtionDataOperationCompleted);
            }
            this.InvokeAsync("GetSubscribtionData", new object[] {
                        msisdn}, this.GetSubscribtionDataOperationCompleted, userState);
        }
        
        private void OnGetSubscribtionDataOperationCompleted(object arg) {
            if ((this.GetSubscribtionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribtionDataCompleted(this, new GetSubscribtionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionData[] GetTransactionsData(string msisdn, string start, string end, string type, out int returnValue) {
            object[] results = this.Invoke("GetTransactionsData", new object[] {
                        msisdn,
                        start,
                        end,
                        type});
            returnValue = ((int)(results[1]));
            return ((collectionData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsDataAsync(string msisdn, string start, string end, string type) {
            this.GetTransactionsDataAsync(msisdn, start, end, type, null);
        }
        
        /// <remarks/>
        public void GetTransactionsDataAsync(string msisdn, string start, string end, string type, object userState) {
            if ((this.GetTransactionsDataOperationCompleted == null)) {
                this.GetTransactionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsDataOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsData", new object[] {
                        msisdn,
                        start,
                        end,
                        type}, this.GetTransactionsDataOperationCompleted, userState);
        }
        
        private void OnGetTransactionsDataOperationCompleted(object arg) {
            if ((this.GetTransactionsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsDataCompleted(this, new GetTransactionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionsDatabyQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionData[] GetTransactionsDatabyQuantity(string msisdn, string start, string end, string type, string quantity, out int returnValue) {
            object[] results = this.Invoke("GetTransactionsDatabyQuantity", new object[] {
                        msisdn,
                        start,
                        end,
                        type,
                        quantity});
            returnValue = ((int)(results[1]));
            return ((collectionData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsDatabyQuantityAsync(string msisdn, string start, string end, string type, string quantity) {
            this.GetTransactionsDatabyQuantityAsync(msisdn, start, end, type, quantity, null);
        }
        
        /// <remarks/>
        public void GetTransactionsDatabyQuantityAsync(string msisdn, string start, string end, string type, string quantity, object userState) {
            if ((this.GetTransactionsDatabyQuantityOperationCompleted == null)) {
                this.GetTransactionsDatabyQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsDatabyQuantityOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsDatabyQuantity", new object[] {
                        msisdn,
                        start,
                        end,
                        type,
                        quantity}, this.GetTransactionsDatabyQuantityOperationCompleted, userState);
        }
        
        private void OnGetTransactionsDatabyQuantityOperationCompleted(object arg) {
            if ((this.GetTransactionsDatabyQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsDatabyQuantityCompleted(this, new GetTransactionsDatabyQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Voucherrefill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Voucherrefill(string msisdn, string voucherPin, out VoucherRefill details) {
            object[] results = this.Invoke("Voucherrefill", new object[] {
                        msisdn,
                        voucherPin});
            details = ((VoucherRefill)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void VoucherrefillAsync(string msisdn, string voucherPin) {
            this.VoucherrefillAsync(msisdn, voucherPin, null);
        }
        
        /// <remarks/>
        public void VoucherrefillAsync(string msisdn, string voucherPin, object userState) {
            if ((this.VoucherrefillOperationCompleted == null)) {
                this.VoucherrefillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoucherrefillOperationCompleted);
            }
            this.InvokeAsync("Voucherrefill", new object[] {
                        msisdn,
                        voucherPin}, this.VoucherrefillOperationCompleted, userState);
        }
        
        private void OnVoucherrefillOperationCompleted(object arg) {
            if ((this.VoucherrefillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoucherrefillCompleted(this, new VoucherrefillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LastCalledNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionData[] LastCalledNumber(string msisdn, string quantity, out int returnValue) {
            object[] results = this.Invoke("LastCalledNumber", new object[] {
                        msisdn,
                        quantity});
            returnValue = ((int)(results[1]));
            return ((collectionData[])(results[0]));
        }
        
        /// <remarks/>
        public void LastCalledNumberAsync(string msisdn, string quantity) {
            this.LastCalledNumberAsync(msisdn, quantity, null);
        }
        
        /// <remarks/>
        public void LastCalledNumberAsync(string msisdn, string quantity, object userState) {
            if ((this.LastCalledNumberOperationCompleted == null)) {
                this.LastCalledNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastCalledNumberOperationCompleted);
            }
            this.InvokeAsync("LastCalledNumber", new object[] {
                        msisdn,
                        quantity}, this.LastCalledNumberOperationCompleted, userState);
        }
        
        private void OnLastCalledNumberOperationCompleted(object arg) {
            if ((this.LastCalledNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastCalledNumberCompleted(this, new LastCalledNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSimData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSimData(string msisdn, out SIMData details) {
            object[] results = this.Invoke("GetSimData", new object[] {
                        msisdn});
            details = ((SIMData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSimDataAsync(string msisdn) {
            this.GetSimDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetSimDataAsync(string msisdn, object userState) {
            if ((this.GetSimDataOperationCompleted == null)) {
                this.GetSimDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimDataOperationCompleted);
            }
            this.InvokeAsync("GetSimData", new object[] {
                        msisdn}, this.GetSimDataOperationCompleted, userState);
        }
        
        private void OnGetSimDataOperationCompleted(object arg) {
            if ((this.GetSimDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimDataCompleted(this, new GetSimDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetProperty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetProperty(string customernum, string prpoertyName, bool propertyValue) {
            object[] results = this.Invoke("SetProperty", new object[] {
                        customernum,
                        prpoertyName,
                        propertyValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPropertyAsync(string customernum, string prpoertyName, bool propertyValue) {
            this.SetPropertyAsync(customernum, prpoertyName, propertyValue, null);
        }
        
        /// <remarks/>
        public void SetPropertyAsync(string customernum, string prpoertyName, bool propertyValue, object userState) {
            if ((this.SetPropertyOperationCompleted == null)) {
                this.SetPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertyOperationCompleted);
            }
            this.InvokeAsync("SetProperty", new object[] {
                        customernum,
                        prpoertyName,
                        propertyValue}, this.SetPropertyOperationCompleted, userState);
        }
        
        private void OnSetPropertyOperationCompleted(object arg) {
            if ((this.SetPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPropertyCompleted(this, new SetPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/modifySubscribtion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int modifySubscribtion(string msisdn, SubscribtionPropertyName propertyName, SubscibtionPropertyValue value) {
            object[] results = this.Invoke("modifySubscribtion", new object[] {
                        msisdn,
                        propertyName,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void modifySubscribtionAsync(string msisdn, SubscribtionPropertyName propertyName, SubscibtionPropertyValue value) {
            this.modifySubscribtionAsync(msisdn, propertyName, value, null);
        }
        
        /// <remarks/>
        public void modifySubscribtionAsync(string msisdn, SubscribtionPropertyName propertyName, SubscibtionPropertyValue value, object userState) {
            if ((this.modifySubscribtionOperationCompleted == null)) {
                this.modifySubscribtionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifySubscribtionOperationCompleted);
            }
            this.InvokeAsync("modifySubscribtion", new object[] {
                        msisdn,
                        propertyName,
                        value}, this.modifySubscribtionOperationCompleted, userState);
        }
        
        private void OnmodifySubscribtionOperationCompleted(object arg) {
            if ((this.modifySubscribtionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifySubscribtionCompleted(this, new modifySubscribtionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRejectionReason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRejectionReason(string msisdn, string rejectionReason) {
            object[] results = this.Invoke("UpdateRejectionReason", new object[] {
                        msisdn,
                        rejectionReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRejectionReasonAsync(string msisdn, string rejectionReason) {
            this.UpdateRejectionReasonAsync(msisdn, rejectionReason, null);
        }
        
        /// <remarks/>
        public void UpdateRejectionReasonAsync(string msisdn, string rejectionReason, object userState) {
            if ((this.UpdateRejectionReasonOperationCompleted == null)) {
                this.UpdateRejectionReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRejectionReasonOperationCompleted);
            }
            this.InvokeAsync("UpdateRejectionReason", new object[] {
                        msisdn,
                        rejectionReason}, this.UpdateRejectionReasonOperationCompleted, userState);
        }
        
        private void OnUpdateRejectionReasonOperationCompleted(object arg) {
            if ((this.UpdateRejectionReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRejectionReasonCompleted(this, new UpdateRejectionReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyCustomerService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyCustomerService(string msisdn, string serviceName, string propertyName, string Value) {
            object[] results = this.Invoke("ModifyCustomerService", new object[] {
                        msisdn,
                        serviceName,
                        propertyName,
                        Value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCustomerServiceAsync(string msisdn, string serviceName, string propertyName, string Value) {
            this.ModifyCustomerServiceAsync(msisdn, serviceName, propertyName, Value, null);
        }
        
        /// <remarks/>
        public void ModifyCustomerServiceAsync(string msisdn, string serviceName, string propertyName, string Value, object userState) {
            if ((this.ModifyCustomerServiceOperationCompleted == null)) {
                this.ModifyCustomerServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCustomerServiceOperationCompleted);
            }
            this.InvokeAsync("ModifyCustomerService", new object[] {
                        msisdn,
                        serviceName,
                        propertyName,
                        Value}, this.ModifyCustomerServiceOperationCompleted, userState);
        }
        
        private void OnModifyCustomerServiceOperationCompleted(object arg) {
            if ((this.ModifyCustomerServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCustomerServiceCompleted(this, new ModifyCustomerServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerServiceData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerServiceData(string msisdn, out CustomerServiceData details) {
            object[] results = this.Invoke("GetCustomerServiceData", new object[] {
                        msisdn});
            details = ((CustomerServiceData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerServiceDataAsync(string msisdn) {
            this.GetCustomerServiceDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetCustomerServiceDataAsync(string msisdn, object userState) {
            if ((this.GetCustomerServiceDataOperationCompleted == null)) {
                this.GetCustomerServiceDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerServiceDataOperationCompleted);
            }
            this.InvokeAsync("GetCustomerServiceData", new object[] {
                        msisdn}, this.GetCustomerServiceDataOperationCompleted, userState);
        }
        
        private void OnGetCustomerServiceDataOperationCompleted(object arg) {
            if ((this.GetCustomerServiceDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerServiceDataCompleted(this, new GetCustomerServiceDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertiesValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPropertiesValues(string msisdn, out PropertiesValues details) {
            object[] results = this.Invoke("GetPropertiesValues", new object[] {
                        msisdn});
            details = ((PropertiesValues)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesValuesAsync(string msisdn) {
            this.GetPropertiesValuesAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetPropertiesValuesAsync(string msisdn, object userState) {
            if ((this.GetPropertiesValuesOperationCompleted == null)) {
                this.GetPropertiesValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesValuesOperationCompleted);
            }
            this.InvokeAsync("GetPropertiesValues", new object[] {
                        msisdn}, this.GetPropertiesValuesOperationCompleted, userState);
        }
        
        private void OnGetPropertiesValuesOperationCompleted(object arg) {
            if ((this.GetPropertiesValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesValuesCompleted(this, new GetPropertiesValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOfCustomerServices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ListOfCustomerServices(string msisdn, string ServiceName, out int returnValue) {
            object[] results = this.Invoke("ListOfCustomerServices", new object[] {
                        msisdn,
                        ServiceName});
            returnValue = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ListOfCustomerServicesAsync(string msisdn, string ServiceName) {
            this.ListOfCustomerServicesAsync(msisdn, ServiceName, null);
        }
        
        /// <remarks/>
        public void ListOfCustomerServicesAsync(string msisdn, string ServiceName, object userState) {
            if ((this.ListOfCustomerServicesOperationCompleted == null)) {
                this.ListOfCustomerServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfCustomerServicesOperationCompleted);
            }
            this.InvokeAsync("ListOfCustomerServices", new object[] {
                        msisdn,
                        ServiceName}, this.ListOfCustomerServicesOperationCompleted, userState);
        }
        
        private void OnListOfCustomerServicesOperationCompleted(object arg) {
            if ((this.ListOfCustomerServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfCustomerServicesCompleted(this, new ListOfCustomerServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/modifyCustomerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int modifyCustomerData(string customerNO, ModifyCustomerData modifiedMethod, string value) {
            object[] results = this.Invoke("modifyCustomerData", new object[] {
                        customerNO,
                        modifiedMethod,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void modifyCustomerDataAsync(string customerNO, ModifyCustomerData modifiedMethod, string value) {
            this.modifyCustomerDataAsync(customerNO, modifiedMethod, value, null);
        }
        
        /// <remarks/>
        public void modifyCustomerDataAsync(string customerNO, ModifyCustomerData modifiedMethod, string value, object userState) {
            if ((this.modifyCustomerDataOperationCompleted == null)) {
                this.modifyCustomerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyCustomerDataOperationCompleted);
            }
            this.InvokeAsync("modifyCustomerData", new object[] {
                        customerNO,
                        modifiedMethod,
                        value}, this.modifyCustomerDataOperationCompleted, userState);
        }
        
        private void OnmodifyCustomerDataOperationCompleted(object arg) {
            if ((this.modifyCustomerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyCustomerDataCompleted(this, new modifyCustomerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferCredite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TransferCredite(string fromMSISDN, string toMSISDN, string amount, string currency, string reason) {
            object[] results = this.Invoke("TransferCredite", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        amount,
                        currency,
                        reason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TransferCrediteAsync(string fromMSISDN, string toMSISDN, string amount, string currency, string reason) {
            this.TransferCrediteAsync(fromMSISDN, toMSISDN, amount, currency, reason, null);
        }
        
        /// <remarks/>
        public void TransferCrediteAsync(string fromMSISDN, string toMSISDN, string amount, string currency, string reason, object userState) {
            if ((this.TransferCrediteOperationCompleted == null)) {
                this.TransferCrediteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferCrediteOperationCompleted);
            }
            this.InvokeAsync("TransferCredite", new object[] {
                        fromMSISDN,
                        toMSISDN,
                        amount,
                        currency,
                        reason}, this.TransferCrediteOperationCompleted, userState);
        }
        
        private void OnTransferCrediteOperationCompleted(object arg) {
            if ((this.TransferCrediteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCrediteCompleted(this, new TransferCrediteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplacePhoneNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReplacePhoneNumber(string OldMSISDN, string NewMSISDN) {
            object[] results = this.Invoke("ReplacePhoneNumber", new object[] {
                        OldMSISDN,
                        NewMSISDN});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReplacePhoneNumberAsync(string OldMSISDN, string NewMSISDN) {
            this.ReplacePhoneNumberAsync(OldMSISDN, NewMSISDN, null);
        }
        
        /// <remarks/>
        public void ReplacePhoneNumberAsync(string OldMSISDN, string NewMSISDN, object userState) {
            if ((this.ReplacePhoneNumberOperationCompleted == null)) {
                this.ReplacePhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePhoneNumberOperationCompleted);
            }
            this.InvokeAsync("ReplacePhoneNumber", new object[] {
                        OldMSISDN,
                        NewMSISDN}, this.ReplacePhoneNumberOperationCompleted, userState);
        }
        
        private void OnReplacePhoneNumberOperationCompleted(object arg) {
            if ((this.ReplacePhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePhoneNumberCompleted(this, new ReplacePhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReplacePhoneNumberPortIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReplacePhoneNumberPortIn(string OldMSISDN, string NewMSISDN) {
            object[] results = this.Invoke("ReplacePhoneNumberPortIn", new object[] {
                        OldMSISDN,
                        NewMSISDN});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReplacePhoneNumberPortInAsync(string OldMSISDN, string NewMSISDN) {
            this.ReplacePhoneNumberPortInAsync(OldMSISDN, NewMSISDN, null);
        }
        
        /// <remarks/>
        public void ReplacePhoneNumberPortInAsync(string OldMSISDN, string NewMSISDN, object userState) {
            if ((this.ReplacePhoneNumberPortInOperationCompleted == null)) {
                this.ReplacePhoneNumberPortInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePhoneNumberPortInOperationCompleted);
            }
            this.InvokeAsync("ReplacePhoneNumberPortIn", new object[] {
                        OldMSISDN,
                        NewMSISDN}, this.ReplacePhoneNumberPortInOperationCompleted, userState);
        }
        
        private void OnReplacePhoneNumberPortInOperationCompleted(object arg) {
            if ((this.ReplacePhoneNumberPortInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePhoneNumberPortInCompleted(this, new ReplacePhoneNumberPortInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvilableNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionData[] GetAvilableNumbers(string SearchPattern, string maxnumbers, string vanityLevelId, out int returnValue) {
            object[] results = this.Invoke("GetAvilableNumbers", new object[] {
                        SearchPattern,
                        maxnumbers,
                        vanityLevelId});
            returnValue = ((int)(results[1]));
            return ((collectionData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvilableNumbersAsync(string SearchPattern, string maxnumbers, string vanityLevelId) {
            this.GetAvilableNumbersAsync(SearchPattern, maxnumbers, vanityLevelId, null);
        }
        
        /// <remarks/>
        public void GetAvilableNumbersAsync(string SearchPattern, string maxnumbers, string vanityLevelId, object userState) {
            if ((this.GetAvilableNumbersOperationCompleted == null)) {
                this.GetAvilableNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvilableNumbersOperationCompleted);
            }
            this.InvokeAsync("GetAvilableNumbers", new object[] {
                        SearchPattern,
                        maxnumbers,
                        vanityLevelId}, this.GetAvilableNumbersOperationCompleted, userState);
        }
        
        private void OnGetAvilableNumbersOperationCompleted(object arg) {
            if ((this.GetAvilableNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvilableNumbersCompleted(this, new GetAvilableNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReserveSpecialNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveSpecialNumber(string customerNO, string firstPhoneNo, string lastPhoneNo) {
            object[] results = this.Invoke("ReserveSpecialNumber", new object[] {
                        customerNO,
                        firstPhoneNo,
                        lastPhoneNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveSpecialNumberAsync(string customerNO, string firstPhoneNo, string lastPhoneNo) {
            this.ReserveSpecialNumberAsync(customerNO, firstPhoneNo, lastPhoneNo, null);
        }
        
        /// <remarks/>
        public void ReserveSpecialNumberAsync(string customerNO, string firstPhoneNo, string lastPhoneNo, object userState) {
            if ((this.ReserveSpecialNumberOperationCompleted == null)) {
                this.ReserveSpecialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveSpecialNumberOperationCompleted);
            }
            this.InvokeAsync("ReserveSpecialNumber", new object[] {
                        customerNO,
                        firstPhoneNo,
                        lastPhoneNo}, this.ReserveSpecialNumberOperationCompleted, userState);
        }
        
        private void OnReserveSpecialNumberOperationCompleted(object arg) {
            if ((this.ReserveSpecialNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveSpecialNumberCompleted(this, new ReserveSpecialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnReserveNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnReserveNumber(string firstPhoneNo, string lastPhoneNo) {
            object[] results = this.Invoke("UnReserveNumber", new object[] {
                        firstPhoneNo,
                        lastPhoneNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnReserveNumberAsync(string firstPhoneNo, string lastPhoneNo) {
            this.UnReserveNumberAsync(firstPhoneNo, lastPhoneNo, null);
        }
        
        /// <remarks/>
        public void UnReserveNumberAsync(string firstPhoneNo, string lastPhoneNo, object userState) {
            if ((this.UnReserveNumberOperationCompleted == null)) {
                this.UnReserveNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnReserveNumberOperationCompleted);
            }
            this.InvokeAsync("UnReserveNumber", new object[] {
                        firstPhoneNo,
                        lastPhoneNo}, this.UnReserveNumberOperationCompleted, userState);
        }
        
        private void OnUnReserveNumberOperationCompleted(object arg) {
            if ((this.UnReserveNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnReserveNumberCompleted(this, new UnReserveNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubscribtionDataByImsi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSubscribtionDataByImsi(string IMSI, out SubscribtionData details) {
            object[] results = this.Invoke("GetSubscribtionDataByImsi", new object[] {
                        IMSI});
            details = ((SubscribtionData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscribtionDataByImsiAsync(string IMSI) {
            this.GetSubscribtionDataByImsiAsync(IMSI, null);
        }
        
        /// <remarks/>
        public void GetSubscribtionDataByImsiAsync(string IMSI, object userState) {
            if ((this.GetSubscribtionDataByImsiOperationCompleted == null)) {
                this.GetSubscribtionDataByImsiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribtionDataByImsiOperationCompleted);
            }
            this.InvokeAsync("GetSubscribtionDataByImsi", new object[] {
                        IMSI}, this.GetSubscribtionDataByImsiOperationCompleted, userState);
        }
        
        private void OnGetSubscribtionDataByImsiOperationCompleted(object arg) {
            if ((this.GetSubscribtionDataByImsiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscribtionDataByImsiCompleted(this, new GetSubscribtionDataByImsiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustDataCounterMBs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustDataCounterMBs(string phoneNumber, int value, int counterId, string adjustmentReason) {
            object[] results = this.Invoke("AdjustDataCounterMBs", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustDataCounterMBsAsync(string phoneNumber, int value, int counterId, string adjustmentReason) {
            this.AdjustDataCounterMBsAsync(phoneNumber, value, counterId, adjustmentReason, null);
        }
        
        /// <remarks/>
        public void AdjustDataCounterMBsAsync(string phoneNumber, int value, int counterId, string adjustmentReason, object userState) {
            if ((this.AdjustDataCounterMBsOperationCompleted == null)) {
                this.AdjustDataCounterMBsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustDataCounterMBsOperationCompleted);
            }
            this.InvokeAsync("AdjustDataCounterMBs", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason}, this.AdjustDataCounterMBsOperationCompleted, userState);
        }
        
        private void OnAdjustDataCounterMBsOperationCompleted(object arg) {
            if ((this.AdjustDataCounterMBsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustDataCounterMBsCompleted(this, new AdjustDataCounterMBsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdjustSMS_MINUTESCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AdjustSMS_MINUTESCounter(string phoneNumber, int value, int counterId, string adjustmentReason) {
            object[] results = this.Invoke("AdjustSMS_MINUTESCounter", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustSMS_MINUTESCounterAsync(string phoneNumber, int value, int counterId, string adjustmentReason) {
            this.AdjustSMS_MINUTESCounterAsync(phoneNumber, value, counterId, adjustmentReason, null);
        }
        
        /// <remarks/>
        public void AdjustSMS_MINUTESCounterAsync(string phoneNumber, int value, int counterId, string adjustmentReason, object userState) {
            if ((this.AdjustSMS_MINUTESCounterOperationCompleted == null)) {
                this.AdjustSMS_MINUTESCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustSMS_MINUTESCounterOperationCompleted);
            }
            this.InvokeAsync("AdjustSMS_MINUTESCounter", new object[] {
                        phoneNumber,
                        value,
                        counterId,
                        adjustmentReason}, this.AdjustSMS_MINUTESCounterOperationCompleted, userState);
        }
        
        private void OnAdjustSMS_MINUTESCounterOperationCompleted(object arg) {
            if ((this.AdjustSMS_MINUTESCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustSMS_MINUTESCounterCompleted(this, new AdjustSMS_MINUTESCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCounter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCounter(string msisdn, string serviceName, string reason, string valuediff, string counterperiodextension, string comment) {
            object[] results = this.Invoke("AddCounter", new object[] {
                        msisdn,
                        serviceName,
                        reason,
                        valuediff,
                        counterperiodextension,
                        comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCounterAsync(string msisdn, string serviceName, string reason, string valuediff, string counterperiodextension, string comment) {
            this.AddCounterAsync(msisdn, serviceName, reason, valuediff, counterperiodextension, comment, null);
        }
        
        /// <remarks/>
        public void AddCounterAsync(string msisdn, string serviceName, string reason, string valuediff, string counterperiodextension, string comment, object userState) {
            if ((this.AddCounterOperationCompleted == null)) {
                this.AddCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCounterOperationCompleted);
            }
            this.InvokeAsync("AddCounter", new object[] {
                        msisdn,
                        serviceName,
                        reason,
                        valuediff,
                        counterperiodextension,
                        comment}, this.AddCounterOperationCompleted, userState);
        }
        
        private void OnAddCounterOperationCompleted(object arg) {
            if ((this.AddCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCounterCompleted(this, new AddCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerExe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomerExe(string msisdn, string IDTypeValue, string civilID, string firstName, string lastName, string address, string nationality, System.DateTime dob, string email, string alternativeNumber, string postCode, string city, string state, out long nobillCustomerNo) {
            object[] results = this.Invoke("UpdateCustomerExe", new object[] {
                        msisdn,
                        IDTypeValue,
                        civilID,
                        firstName,
                        lastName,
                        address,
                        nationality,
                        dob,
                        email,
                        alternativeNumber,
                        postCode,
                        city,
                        state});
            nobillCustomerNo = ((long)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerExeAsync(string msisdn, string IDTypeValue, string civilID, string firstName, string lastName, string address, string nationality, System.DateTime dob, string email, string alternativeNumber, string postCode, string city, string state) {
            this.UpdateCustomerExeAsync(msisdn, IDTypeValue, civilID, firstName, lastName, address, nationality, dob, email, alternativeNumber, postCode, city, state, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerExeAsync(string msisdn, string IDTypeValue, string civilID, string firstName, string lastName, string address, string nationality, System.DateTime dob, string email, string alternativeNumber, string postCode, string city, string state, object userState) {
            if ((this.UpdateCustomerExeOperationCompleted == null)) {
                this.UpdateCustomerExeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerExeOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerExe", new object[] {
                        msisdn,
                        IDTypeValue,
                        civilID,
                        firstName,
                        lastName,
                        address,
                        nationality,
                        dob,
                        email,
                        alternativeNumber,
                        postCode,
                        city,
                        state}, this.UpdateCustomerExeOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerExeOperationCompleted(object arg) {
            if ((this.UpdateCustomerExeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerExeCompleted(this, new UpdateCustomerExeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIDTypeExe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateIDTypeExe(string customerNumber, string idType) {
            object[] results = this.Invoke("UpdateIDTypeExe", new object[] {
                        customerNumber,
                        idType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIDTypeExeAsync(string customerNumber, string idType) {
            this.UpdateIDTypeExeAsync(customerNumber, idType, null);
        }
        
        /// <remarks/>
        public void UpdateIDTypeExeAsync(string customerNumber, string idType, object userState) {
            if ((this.UpdateIDTypeExeOperationCompleted == null)) {
                this.UpdateIDTypeExeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIDTypeExeOperationCompleted);
            }
            this.InvokeAsync("UpdateIDTypeExe", new object[] {
                        customerNumber,
                        idType}, this.UpdateIDTypeExeOperationCompleted, userState);
        }
        
        private void OnUpdateIDTypeExeOperationCompleted(object arg) {
            if ((this.UpdateIDTypeExeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIDTypeExeCompleted(this, new UpdateIDTypeExeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSpecificCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateSpecificCustomer(string phoneNumber, string imsi, string templateName, out string customerNumber, out string[] accountNumber) {
            object[] results = this.Invoke("CreateSpecificCustomer", new object[] {
                        phoneNumber,
                        imsi,
                        templateName});
            customerNumber = ((string)(results[1]));
            accountNumber = ((string[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSpecificCustomerAsync(string phoneNumber, string imsi, string templateName) {
            this.CreateSpecificCustomerAsync(phoneNumber, imsi, templateName, null);
        }
        
        /// <remarks/>
        public void CreateSpecificCustomerAsync(string phoneNumber, string imsi, string templateName, object userState) {
            if ((this.CreateSpecificCustomerOperationCompleted == null)) {
                this.CreateSpecificCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSpecificCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateSpecificCustomer", new object[] {
                        phoneNumber,
                        imsi,
                        templateName}, this.CreateSpecificCustomerOperationCompleted, userState);
        }
        
        private void OnCreateSpecificCustomerOperationCompleted(object arg) {
            if ((this.CreateSpecificCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSpecificCustomerCompleted(this, new CreateSpecificCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSimDataByIMSIEX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSimDataByIMSIEX(string IMSI, out SIMData details) {
            object[] results = this.Invoke("GetSimDataByIMSIEX", new object[] {
                        IMSI});
            details = ((SIMData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSimDataByIMSIEXAsync(string IMSI) {
            this.GetSimDataByIMSIEXAsync(IMSI, null);
        }
        
        /// <remarks/>
        public void GetSimDataByIMSIEXAsync(string IMSI, object userState) {
            if ((this.GetSimDataByIMSIEXOperationCompleted == null)) {
                this.GetSimDataByIMSIEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimDataByIMSIEXOperationCompleted);
            }
            this.InvokeAsync("GetSimDataByIMSIEX", new object[] {
                        IMSI}, this.GetSimDataByIMSIEXOperationCompleted, userState);
        }
        
        private void OnGetSimDataByIMSIEXOperationCompleted(object arg) {
            if ((this.GetSimDataByIMSIEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimDataByIMSIEXCompleted(this, new GetSimDataByIMSIEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateEVoucher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateEVoucher(int denomination, string voucherType, string retailer, System.DateTime expiryDate, out string pin, out string serialNumber) {
            object[] results = this.Invoke("CreateEVoucher", new object[] {
                        denomination,
                        voucherType,
                        retailer,
                        expiryDate});
            pin = ((string)(results[1]));
            serialNumber = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEVoucherAsync(int denomination, string voucherType, string retailer, System.DateTime expiryDate) {
            this.CreateEVoucherAsync(denomination, voucherType, retailer, expiryDate, null);
        }
        
        /// <remarks/>
        public void CreateEVoucherAsync(int denomination, string voucherType, string retailer, System.DateTime expiryDate, object userState) {
            if ((this.CreateEVoucherOperationCompleted == null)) {
                this.CreateEVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEVoucherOperationCompleted);
            }
            this.InvokeAsync("CreateEVoucher", new object[] {
                        denomination,
                        voucherType,
                        retailer,
                        expiryDate}, this.CreateEVoucherOperationCompleted, userState);
        }
        
        private void OnCreateEVoucherOperationCompleted(object arg) {
            if ((this.CreateEVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEVoucherCompleted(this, new CreateEVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSubscription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateSubscription(string phoneno, string accountnum, string subscriptiontype, string imsi) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        phoneno,
                        accountnum,
                        subscriptiontype,
                        imsi});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(string phoneno, string accountnum, string subscriptiontype, string imsi) {
            this.CreateSubscriptionAsync(phoneno, accountnum, subscriptiontype, imsi, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(string phoneno, string accountnum, string subscriptiontype, string imsi, object userState) {
            if ((this.CreateSubscriptionOperationCompleted == null)) {
                this.CreateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CreateSubscription", new object[] {
                        phoneno,
                        accountnum,
                        subscriptiontype,
                        imsi}, this.CreateSubscriptionOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionOperationCompleted(object arg) {
            if ((this.CreateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionCompleted(this, new CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateAccount(string customerNumber, string accountType, out string accountNumber) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        customerNumber,
                        accountType});
            accountNumber = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string customerNumber, string accountType) {
            this.CreateAccountAsync(customerNumber, accountType, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(string customerNumber, string accountType, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        customerNumber,
                        accountType}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerForVirginActivation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomerForVirginActivation(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber) {
            object[] results = this.Invoke("UpdateCustomerForVirginActivation", new object[] {
                        msisdn,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender,
                        IDTypeValue,
                        alternativeContactNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerForVirginActivationAsync(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber) {
            this.UpdateCustomerForVirginActivationAsync(msisdn, firstName, lastName, dob, civilID, nationality, gender, IDTypeValue, alternativeContactNumber, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerForVirginActivationAsync(string msisdn, string firstName, string lastName, System.DateTime dob, string civilID, string nationality, Gender gender, IDType IDTypeValue, string alternativeContactNumber, object userState) {
            if ((this.UpdateCustomerForVirginActivationOperationCompleted == null)) {
                this.UpdateCustomerForVirginActivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerForVirginActivationOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerForVirginActivation", new object[] {
                        msisdn,
                        firstName,
                        lastName,
                        dob,
                        civilID,
                        nationality,
                        gender,
                        IDTypeValue,
                        alternativeContactNumber}, this.UpdateCustomerForVirginActivationOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerForVirginActivationOperationCompleted(object arg) {
            if ((this.UpdateCustomerForVirginActivationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerForVirginActivationCompleted(this, new UpdateCustomerForVirginActivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAlternativeContactNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAlternativeContactNumber(string msisdn, string alternativeContactNumber) {
            object[] results = this.Invoke("UpdateAlternativeContactNumber", new object[] {
                        msisdn,
                        alternativeContactNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAlternativeContactNumberAsync(string msisdn, string alternativeContactNumber) {
            this.UpdateAlternativeContactNumberAsync(msisdn, alternativeContactNumber, null);
        }
        
        /// <remarks/>
        public void UpdateAlternativeContactNumberAsync(string msisdn, string alternativeContactNumber, object userState) {
            if ((this.UpdateAlternativeContactNumberOperationCompleted == null)) {
                this.UpdateAlternativeContactNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAlternativeContactNumberOperationCompleted);
            }
            this.InvokeAsync("UpdateAlternativeContactNumber", new object[] {
                        msisdn,
                        alternativeContactNumber}, this.UpdateAlternativeContactNumberOperationCompleted, userState);
        }
        
        private void OnUpdateAlternativeContactNumberOperationCompleted(object arg) {
            if ((this.UpdateAlternativeContactNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAlternativeContactNumberCompleted(this, new UpdateAlternativeContactNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoucherDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVoucherDetails(string pin, out Voucher details) {
            object[] results = this.Invoke("GetVoucherDetails", new object[] {
                        pin});
            details = ((Voucher)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoucherDetailsAsync(string pin) {
            this.GetVoucherDetailsAsync(pin, null);
        }
        
        /// <remarks/>
        public void GetVoucherDetailsAsync(string pin, object userState) {
            if ((this.GetVoucherDetailsOperationCompleted == null)) {
                this.GetVoucherDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoucherDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVoucherDetails", new object[] {
                        pin}, this.GetVoucherDetailsOperationCompleted, userState);
        }
        
        private void OnGetVoucherDetailsOperationCompleted(object arg) {
            if ((this.GetVoucherDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoucherDetailsCompleted(this, new GetVoucherDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVoucherPin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVoucherPin(string serialNo, out string pin) {
            object[] results = this.Invoke("GetVoucherPin", new object[] {
                        serialNo});
            pin = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVoucherPinAsync(string serialNo) {
            this.GetVoucherPinAsync(serialNo, null);
        }
        
        /// <remarks/>
        public void GetVoucherPinAsync(string serialNo, object userState) {
            if ((this.GetVoucherPinOperationCompleted == null)) {
                this.GetVoucherPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVoucherPinOperationCompleted);
            }
            this.InvokeAsync("GetVoucherPin", new object[] {
                        serialNo}, this.GetVoucherPinOperationCompleted, userState);
        }
        
        private void OnGetVoucherPinOperationCompleted(object arg) {
            if ((this.GetVoucherPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVoucherPinCompleted(this, new GetVoucherPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvalidateVoucher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InvalidateVoucher(string pin) {
            object[] results = this.Invoke("InvalidateVoucher", new object[] {
                        pin});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InvalidateVoucherAsync(string pin) {
            this.InvalidateVoucherAsync(pin, null);
        }
        
        /// <remarks/>
        public void InvalidateVoucherAsync(string pin, object userState) {
            if ((this.InvalidateVoucherOperationCompleted == null)) {
                this.InvalidateVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvalidateVoucherOperationCompleted);
            }
            this.InvokeAsync("InvalidateVoucher", new object[] {
                        pin}, this.InvalidateVoucherOperationCompleted, userState);
        }
        
        private void OnInvalidateVoucherOperationCompleted(object arg) {
            if ((this.InvalidateVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvalidateVoucherCompleted(this, new InvalidateVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BlockVoucher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BlockVoucher(string pin) {
            object[] results = this.Invoke("BlockVoucher", new object[] {
                        pin});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BlockVoucherAsync(string pin) {
            this.BlockVoucherAsync(pin, null);
        }
        
        /// <remarks/>
        public void BlockVoucherAsync(string pin, object userState) {
            if ((this.BlockVoucherOperationCompleted == null)) {
                this.BlockVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBlockVoucherOperationCompleted);
            }
            this.InvokeAsync("BlockVoucher", new object[] {
                        pin}, this.BlockVoucherOperationCompleted, userState);
        }
        
        private void OnBlockVoucherOperationCompleted(object arg) {
            if ((this.BlockVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BlockVoucherCompleted(this, new BlockVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnblockVoucher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UnblockVoucher(string pin, bool activate, string serial, string voucherType) {
            object[] results = this.Invoke("UnblockVoucher", new object[] {
                        pin,
                        activate,
                        serial,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UnblockVoucherAsync(string pin, bool activate, string serial, string voucherType) {
            this.UnblockVoucherAsync(pin, activate, serial, voucherType, null);
        }
        
        /// <remarks/>
        public void UnblockVoucherAsync(string pin, bool activate, string serial, string voucherType, object userState) {
            if ((this.UnblockVoucherOperationCompleted == null)) {
                this.UnblockVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnblockVoucherOperationCompleted);
            }
            this.InvokeAsync("UnblockVoucher", new object[] {
                        pin,
                        activate,
                        serial,
                        voucherType}, this.UnblockVoucherOperationCompleted, userState);
        }
        
        private void OnUnblockVoucherOperationCompleted(object arg) {
            if ((this.UnblockVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnblockVoucherCompleted(this, new UnblockVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateVoucher", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateVoucher(string serialNo, string voucherType) {
            object[] results = this.Invoke("ActivateVoucher", new object[] {
                        serialNo,
                        voucherType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateVoucherAsync(string serialNo, string voucherType) {
            this.ActivateVoucherAsync(serialNo, voucherType, null);
        }
        
        /// <remarks/>
        public void ActivateVoucherAsync(string serialNo, string voucherType, object userState) {
            if ((this.ActivateVoucherOperationCompleted == null)) {
                this.ActivateVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateVoucherOperationCompleted);
            }
            this.InvokeAsync("ActivateVoucher", new object[] {
                        serialNo,
                        voucherType}, this.ActivateVoucherOperationCompleted, userState);
        }
        
        private void OnActivateVoucherOperationCompleted(object arg) {
            if ((this.ActivateVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateVoucherCompleted(this, new ActivateVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomerRollback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomerRollback(string msisdn, string userName) {
            object[] results = this.Invoke("DeleteCustomerRollback", new object[] {
                        msisdn,
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerRollbackAsync(string msisdn, string userName) {
            this.DeleteCustomerRollbackAsync(msisdn, userName, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerRollbackAsync(string msisdn, string userName, object userState) {
            if ((this.DeleteCustomerRollbackOperationCompleted == null)) {
                this.DeleteCustomerRollbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerRollbackOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomerRollback", new object[] {
                        msisdn,
                        userName}, this.DeleteCustomerRollbackOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerRollbackOperationCompleted(object arg) {
            if ((this.DeleteCustomerRollbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerRollbackCompleted(this, new DeleteCustomerRollbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVirginCreditTransferData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVirginCreditTransferData(string msisdn, out CustomerServiceData details) {
            object[] results = this.Invoke("GetVirginCreditTransferData", new object[] {
                        msisdn});
            details = ((CustomerServiceData)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVirginCreditTransferDataAsync(string msisdn) {
            this.GetVirginCreditTransferDataAsync(msisdn, null);
        }
        
        /// <remarks/>
        public void GetVirginCreditTransferDataAsync(string msisdn, object userState) {
            if ((this.GetVirginCreditTransferDataOperationCompleted == null)) {
                this.GetVirginCreditTransferDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVirginCreditTransferDataOperationCompleted);
            }
            this.InvokeAsync("GetVirginCreditTransferData", new object[] {
                        msisdn}, this.GetVirginCreditTransferDataOperationCompleted, userState);
        }
        
        private void OnGetVirginCreditTransferDataOperationCompleted(object arg) {
            if ((this.GetVirginCreditTransferDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVirginCreditTransferDataCompleted(this, new GetVirginCreditTransferDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerServiceExpiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerServiceExpiry(string msisdn, string serviceName, out string expiryDate) {
            object[] results = this.Invoke("GetCustomerServiceExpiry", new object[] {
                        msisdn,
                        serviceName});
            expiryDate = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerServiceExpiryAsync(string msisdn, string serviceName) {
            this.GetCustomerServiceExpiryAsync(msisdn, serviceName, null);
        }
        
        /// <remarks/>
        public void GetCustomerServiceExpiryAsync(string msisdn, string serviceName, object userState) {
            if ((this.GetCustomerServiceExpiryOperationCompleted == null)) {
                this.GetCustomerServiceExpiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerServiceExpiryOperationCompleted);
            }
            this.InvokeAsync("GetCustomerServiceExpiry", new object[] {
                        msisdn,
                        serviceName}, this.GetCustomerServiceExpiryOperationCompleted, userState);
        }
        
        private void OnGetCustomerServiceExpiryOperationCompleted(object arg) {
            if ((this.GetCustomerServiceExpiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerServiceExpiryCompleted(this, new GetCustomerServiceExpiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSubscriptionProperty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetSubscriptionProperty(string msisdn, string prpoertyName, string propertyValue) {
            object[] results = this.Invoke("SetSubscriptionProperty", new object[] {
                        msisdn,
                        prpoertyName,
                        propertyValue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetSubscriptionPropertyAsync(string msisdn, string prpoertyName, string propertyValue) {
            this.SetSubscriptionPropertyAsync(msisdn, prpoertyName, propertyValue, null);
        }
        
        /// <remarks/>
        public void SetSubscriptionPropertyAsync(string msisdn, string prpoertyName, string propertyValue, object userState) {
            if ((this.SetSubscriptionPropertyOperationCompleted == null)) {
                this.SetSubscriptionPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSubscriptionPropertyOperationCompleted);
            }
            this.InvokeAsync("SetSubscriptionProperty", new object[] {
                        msisdn,
                        prpoertyName,
                        propertyValue}, this.SetSubscriptionPropertyOperationCompleted, userState);
        }
        
        private void OnSetSubscriptionPropertyOperationCompleted(object arg) {
            if ((this.SetSubscriptionPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSubscriptionPropertyCompleted(this, new SetSubscriptionPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateBestMobileSubscriber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ActivateBestMobileSubscriber(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo) {
            object[] results = this.Invoke("ActivateBestMobileSubscriber", new object[] {
                        customerInfo,
                        subscriptionInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo) {
            this.ActivateBestMobileSubscriberAsync(customerInfo, subscriptionInfo, null);
        }
        
        /// <remarks/>
        public void ActivateBestMobileSubscriberAsync(CustomerInfo customerInfo, BestMobileSubscriptionInfo subscriptionInfo, object userState) {
            if ((this.ActivateBestMobileSubscriberOperationCompleted == null)) {
                this.ActivateBestMobileSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateBestMobileSubscriberOperationCompleted);
            }
            this.InvokeAsync("ActivateBestMobileSubscriber", new object[] {
                        customerInfo,
                        subscriptionInfo}, this.ActivateBestMobileSubscriberOperationCompleted, userState);
        }
        
        private void OnActivateBestMobileSubscriberOperationCompleted(object arg) {
            if ((this.ActivateBestMobileSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateBestMobileSubscriberCompleted(this, new ActivateBestMobileSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private string addressField;
        
        private string alternativePhoneNumberField;
        
        private string cityField;
        
        private System.DateTime dateOfBirthField;
        
        private string emailField;
        
        private System.Nullable<GenderEnuminater> genderField;
        
        private string idNumberField;
        
        private string idTypeField;
        
        private string nameField;
        
        private string nationalityField;
        
        private string postCodeField;
        
        private string stateField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativePhoneNumber {
            get {
                return this.alternativePhoneNumberField;
            }
            set {
                this.alternativePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GenderEnuminater> Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IdType {
            get {
                return this.idTypeField;
            }
            set {
                this.idTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExtensionDataObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Voucher {
        
        private string voucher_typeField;
        
        private string serial_numberField;
        
        private string number_seriesField;
        
        private string currencyField;
        
        private string denominationField;
        
        private string activation_dateField;
        
        private string expiry_dateField;
        
        private string retailerField;
        
        private string statusField;
        
        private string usedField;
        
        private string isevoucherField;
        
        private string date_of_useField;
        
        private string using_accountField;
        
        private string using_phone_numberField;
        
        /// <remarks/>
        public string Voucher_type {
            get {
                return this.voucher_typeField;
            }
            set {
                this.voucher_typeField = value;
            }
        }
        
        /// <remarks/>
        public string Serial_number {
            get {
                return this.serial_numberField;
            }
            set {
                this.serial_numberField = value;
            }
        }
        
        /// <remarks/>
        public string Number_series {
            get {
                return this.number_seriesField;
            }
            set {
                this.number_seriesField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Denomination {
            get {
                return this.denominationField;
            }
            set {
                this.denominationField = value;
            }
        }
        
        /// <remarks/>
        public string Activation_date {
            get {
                return this.activation_dateField;
            }
            set {
                this.activation_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Expiry_date {
            get {
                return this.expiry_dateField;
            }
            set {
                this.expiry_dateField = value;
            }
        }
        
        /// <remarks/>
        public string Retailer {
            get {
                return this.retailerField;
            }
            set {
                this.retailerField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Used {
            get {
                return this.usedField;
            }
            set {
                this.usedField = value;
            }
        }
        
        /// <remarks/>
        public string Isevoucher {
            get {
                return this.isevoucherField;
            }
            set {
                this.isevoucherField = value;
            }
        }
        
        /// <remarks/>
        public string Date_of_use {
            get {
                return this.date_of_useField;
            }
            set {
                this.date_of_useField = value;
            }
        }
        
        /// <remarks/>
        public string Using_account {
            get {
                return this.using_accountField;
            }
            set {
                this.using_accountField = value;
            }
        }
        
        /// <remarks/>
        public string Using_phone_number {
            get {
                return this.using_phone_numberField;
            }
            set {
                this.using_phone_numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PropertiesValues {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string acceptEmailField;
        
        private string acceptSMSField;
        
        private string directoryListingField;
        
        private string iDTypeField;
        
        private string studentField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string AcceptEmail {
            get {
                return this.acceptEmailField;
            }
            set {
                this.acceptEmailField = value;
            }
        }
        
        /// <remarks/>
        public string AcceptSMS {
            get {
                return this.acceptSMSField;
            }
            set {
                this.acceptSMSField = value;
            }
        }
        
        /// <remarks/>
        public string DirectoryListing {
            get {
                return this.directoryListingField;
            }
            set {
                this.directoryListingField = value;
            }
        }
        
        /// <remarks/>
        public string IDType {
            get {
                return this.iDTypeField;
            }
            set {
                this.iDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Student {
            get {
                return this.studentField;
            }
            set {
                this.studentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerServiceData {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string p_respectsubscriptionblockingField;
        
        private string p_maxamountField;
        
        private string p_pinField;
        
        private string p_subscriptionblockedField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string p_respectsubscriptionblocking {
            get {
                return this.p_respectsubscriptionblockingField;
            }
            set {
                this.p_respectsubscriptionblockingField = value;
            }
        }
        
        /// <remarks/>
        public string p_maxamount {
            get {
                return this.p_maxamountField;
            }
            set {
                this.p_maxamountField = value;
            }
        }
        
        /// <remarks/>
        public string p_pin {
            get {
                return this.p_pinField;
            }
            set {
                this.p_pinField = value;
            }
        }
        
        /// <remarks/>
        public string p_subscriptionblocked {
            get {
                return this.p_subscriptionblockedField;
            }
            set {
                this.p_subscriptionblockedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SIMData {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string iccidField;
        
        private string imsiField;
        
        private string retailerField;
        
        private string initial_pin1Field;
        
        private string initial_pin2Field;
        
        private string initial_pin3Field;
        
        private string initial_pin4Field;
        
        private string puk1Field;
        
        private string puk2Field;
        
        private string typeField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string iccid {
            get {
                return this.iccidField;
            }
            set {
                this.iccidField = value;
            }
        }
        
        /// <remarks/>
        public string imsi {
            get {
                return this.imsiField;
            }
            set {
                this.imsiField = value;
            }
        }
        
        /// <remarks/>
        public string retailer {
            get {
                return this.retailerField;
            }
            set {
                this.retailerField = value;
            }
        }
        
        /// <remarks/>
        public string initial_pin1 {
            get {
                return this.initial_pin1Field;
            }
            set {
                this.initial_pin1Field = value;
            }
        }
        
        /// <remarks/>
        public string initial_pin2 {
            get {
                return this.initial_pin2Field;
            }
            set {
                this.initial_pin2Field = value;
            }
        }
        
        /// <remarks/>
        public string initial_pin3 {
            get {
                return this.initial_pin3Field;
            }
            set {
                this.initial_pin3Field = value;
            }
        }
        
        /// <remarks/>
        public string initial_pin4 {
            get {
                return this.initial_pin4Field;
            }
            set {
                this.initial_pin4Field = value;
            }
        }
        
        /// <remarks/>
        public string puk1 {
            get {
                return this.puk1Field;
            }
            set {
                this.puk1Field = value;
            }
        }
        
        /// <remarks/>
        public string puk2 {
            get {
                return this.puk2Field;
            }
            set {
                this.puk2Field = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VoucherRefill {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string refilled_amountField;
        
        private string refill_currencyField;
        
        private string balanceField;
        
        private string balance_currencyField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string refilled_amount {
            get {
                return this.refilled_amountField;
            }
            set {
                this.refilled_amountField = value;
            }
        }
        
        /// <remarks/>
        public string refill_currency {
            get {
                return this.refill_currencyField;
            }
            set {
                this.refill_currencyField = value;
            }
        }
        
        /// <remarks/>
        public string balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public string balance_currency {
            get {
                return this.balance_currencyField;
            }
            set {
                this.balance_currencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class collectionData {
        
        private string keyField;
        
        private string[] valuesField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string[] values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SubscribtionData {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string account_numberField;
        
        private string phone_numbersField;
        
        private string simsField;
        
        private string iccidsField;
        
        private string pdp_addressesField;
        
        private string subscriptiontypeField;
        
        private string activation_codeField;
        
        private status statusField;
        
        private blocked blockedField;
        
        private string refill_barred_untilField;
        
        private System.DateTime expiry_dateField;
        
        private string failed_refillsField;
        
        private string family_friendsField;
        
        private string home_locationField;
        
        private string localeField;
        
        private string spoken_localeField;
        
        private string send_post_call_balanceField;
        
        private string sub_usernameField;
        
        private string sub_username_expiryField;
        
        private string passwordField;
        
        private string password_expiryField;
        
        private string control_questionField;
        
        private string control_answerField;
        
        private string login_blockedField;
        
        private string loginblockedexpirydateField;
        
        private string failedloginsField;
        
        private string sharing_allowedField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string account_number {
            get {
                return this.account_numberField;
            }
            set {
                this.account_numberField = value;
            }
        }
        
        /// <remarks/>
        public string phone_numbers {
            get {
                return this.phone_numbersField;
            }
            set {
                this.phone_numbersField = value;
            }
        }
        
        /// <remarks/>
        public string sims {
            get {
                return this.simsField;
            }
            set {
                this.simsField = value;
            }
        }
        
        /// <remarks/>
        public string iccids {
            get {
                return this.iccidsField;
            }
            set {
                this.iccidsField = value;
            }
        }
        
        /// <remarks/>
        public string pdp_addresses {
            get {
                return this.pdp_addressesField;
            }
            set {
                this.pdp_addressesField = value;
            }
        }
        
        /// <remarks/>
        public string subscriptiontype {
            get {
                return this.subscriptiontypeField;
            }
            set {
                this.subscriptiontypeField = value;
            }
        }
        
        /// <remarks/>
        public string activation_code {
            get {
                return this.activation_codeField;
            }
            set {
                this.activation_codeField = value;
            }
        }
        
        /// <remarks/>
        public status status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public blocked blocked {
            get {
                return this.blockedField;
            }
            set {
                this.blockedField = value;
            }
        }
        
        /// <remarks/>
        public string refill_barred_until {
            get {
                return this.refill_barred_untilField;
            }
            set {
                this.refill_barred_untilField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiry_date {
            get {
                return this.expiry_dateField;
            }
            set {
                this.expiry_dateField = value;
            }
        }
        
        /// <remarks/>
        public string failed_refills {
            get {
                return this.failed_refillsField;
            }
            set {
                this.failed_refillsField = value;
            }
        }
        
        /// <remarks/>
        public string family_friends {
            get {
                return this.family_friendsField;
            }
            set {
                this.family_friendsField = value;
            }
        }
        
        /// <remarks/>
        public string home_location {
            get {
                return this.home_locationField;
            }
            set {
                this.home_locationField = value;
            }
        }
        
        /// <remarks/>
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        public string spoken_locale {
            get {
                return this.spoken_localeField;
            }
            set {
                this.spoken_localeField = value;
            }
        }
        
        /// <remarks/>
        public string send_post_call_balance {
            get {
                return this.send_post_call_balanceField;
            }
            set {
                this.send_post_call_balanceField = value;
            }
        }
        
        /// <remarks/>
        public string sub_username {
            get {
                return this.sub_usernameField;
            }
            set {
                this.sub_usernameField = value;
            }
        }
        
        /// <remarks/>
        public string sub_username_expiry {
            get {
                return this.sub_username_expiryField;
            }
            set {
                this.sub_username_expiryField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string password_expiry {
            get {
                return this.password_expiryField;
            }
            set {
                this.password_expiryField = value;
            }
        }
        
        /// <remarks/>
        public string control_question {
            get {
                return this.control_questionField;
            }
            set {
                this.control_questionField = value;
            }
        }
        
        /// <remarks/>
        public string control_answer {
            get {
                return this.control_answerField;
            }
            set {
                this.control_answerField = value;
            }
        }
        
        /// <remarks/>
        public string login_blocked {
            get {
                return this.login_blockedField;
            }
            set {
                this.login_blockedField = value;
            }
        }
        
        /// <remarks/>
        public string loginblockedexpirydate {
            get {
                return this.loginblockedexpirydateField;
            }
            set {
                this.loginblockedexpirydateField = value;
            }
        }
        
        /// <remarks/>
        public string failedlogins {
            get {
                return this.failedloginsField;
            }
            set {
                this.failedloginsField = value;
            }
        }
        
        /// <remarks/>
        public string sharing_allowed {
            get {
                return this.sharing_allowedField;
            }
            set {
                this.sharing_allowedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum status {
        
        /// <remarks/>
        created,
        
        /// <remarks/>
        associated,
        
        /// <remarks/>
        activeBeforeFirstUse,
        
        /// <remarks/>
        activeInUse,
        
        /// <remarks/>
        activeCooling,
        
        /// <remarks/>
        activeCold,
        
        /// <remarks/>
        activeForzen,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum blocked {
        
        /// <remarks/>
        notBlocked,
        
        /// <remarks/>
        allActivityBlocked,
        
        /// <remarks/>
        chargeActivityBlocked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Counter {
        
        private string idField;
        
        private string nameField;
        
        private string counterValueField;
        
        private CounterType typeField;
        
        private string expiryDateField;
        
        private string initialBalanceField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CounterValue {
            get {
                return this.counterValueField;
            }
            set {
                this.counterValueField = value;
            }
        }
        
        /// <remarks/>
        public CounterType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string initialBalance {
            get {
                return this.initialBalanceField;
            }
            set {
                this.initialBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CounterType {
        
        /// <remarks/>
        amount,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        integer,
        
        /// <remarks/>
        data,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerDetails {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string customerNoField;
        
        private string dOBField;
        
        private string nationalityField;
        
        private string civilIDField;
        
        private Gender customerGenderField;
        
        private IDType iDtypeField;
        
        private string emailField;
        
        private string homephoneField;
        
        private string cityField;
        
        private string stateField;
        
        private string postcodeField;
        
        private string alternativeContactNumberField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerNo {
            get {
                return this.customerNoField;
            }
            set {
                this.customerNoField = value;
            }
        }
        
        /// <remarks/>
        public string DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string CivilID {
            get {
                return this.civilIDField;
            }
            set {
                this.civilIDField = value;
            }
        }
        
        /// <remarks/>
        public Gender CustomerGender {
            get {
                return this.customerGenderField;
            }
            set {
                this.customerGenderField = value;
            }
        }
        
        /// <remarks/>
        public IDType IDtype {
            get {
                return this.iDtypeField;
            }
            set {
                this.iDtypeField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string homephone {
            get {
                return this.homephoneField;
            }
            set {
                this.homephoneField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string alternativeContactNumber {
            get {
                return this.alternativeContactNumberField;
            }
            set {
                this.alternativeContactNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Gender {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        FEMALE,
        
        /// <remarks/>
        MALE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum IDType {
        
        /// <remarks/>
        Passport,
        
        /// <remarks/>
        CivilID,
        
        /// <remarks/>
        DriversLicense,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Gulf_ID,
        
        /// <remarks/>
        Gulf_Passport,
        
        /// <remarks/>
        Iqama,
        
        /// <remarks/>
        National_ID,
        
        /// <remarks/>
        Visa,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PortInResubmission {
        
        private ExtensionDataObject extensionDataField;
        
        private string cityField;
        
        private System.Nullable<System.DateTime> dOBField;
        
        private string dealerCodeField;
        
        private string iDNumberField;
        
        private string iDTypeField;
        
        private string iMSIField;
        
        private string mSISDNField;
        
        private string nameField;
        
        private string nationalityField;
        
        private string oPERATORField;
        
        private string portInMSISDNField;
        
        private int postcodeField;
        
        private string sIM_CARD_TYPEField;
        
        private string stateField;
        
        private string streetAddressField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public string DealerCode {
            get {
                return this.dealerCodeField;
            }
            set {
                this.dealerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IDNumber {
            get {
                return this.iDNumberField;
            }
            set {
                this.iDNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IDType {
            get {
                return this.iDTypeField;
            }
            set {
                this.iDTypeField = value;
            }
        }
        
        /// <remarks/>
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string OPERATOR {
            get {
                return this.oPERATORField;
            }
            set {
                this.oPERATORField = value;
            }
        }
        
        /// <remarks/>
        public string PortInMSISDN {
            get {
                return this.portInMSISDNField;
            }
            set {
                this.portInMSISDNField = value;
            }
        }
        
        /// <remarks/>
        public int Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string SIM_CARD_TYPE {
            get {
                return this.sIM_CARD_TYPEField;
            }
            set {
                this.sIM_CARD_TYPEField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StreetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DRMSActivity {
        
        private string customerNameField;
        
        private string cityField;
        
        private string iMSIField;
        
        private string idNumberField;
        
        private string idTypeField;
        
        private string mSISDNField;
        
        private string operatorField;
        
        private string portInMSISDNField;
        
        private string portInMessageField;
        
        private string portInStatusField;
        
        private string stateField;
        
        private string streetAddressField;
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IdType {
            get {
                return this.idTypeField;
            }
            set {
                this.idTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        public string PortInMSISDN {
            get {
                return this.portInMSISDNField;
            }
            set {
                this.portInMSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string PortInMessage {
            get {
                return this.portInMessageField;
            }
            set {
                this.portInMessageField = value;
            }
        }
        
        /// <remarks/>
        public string PortInStatus {
            get {
                return this.portInStatusField;
            }
            set {
                this.portInStatusField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string StreetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AccountData {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string balanceCurrencyField;
        
        private string balanceField;
        
        private string accountTypeField;
        
        private string lowerLimitField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BalanceCurrency {
            get {
                return this.balanceCurrencyField;
            }
            set {
                this.balanceCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LowerLimit {
            get {
                return this.lowerLimitField;
            }
            set {
                this.lowerLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerData {
        
        private string response_codeField;
        
        private string response_descriptionField;
        
        private string customerNumField;
        
        private string customerIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string alternativeFirstNameField;
        
        private string alternativeLastNameField;
        
        private string homePhoneField;
        
        private string cellPhoneField;
        
        private System.DateTime birthDateField;
        
        private string companyField;
        
        private Gender genderField;
        
        private string titleField;
        
        private string faxField;
        
        private string emailField;
        
        private string streetField;
        
        private string streetNoField;
        
        private string poBpxField;
        
        private string zipCodeField;
        
        private string cityField;
        
        private string stateField;
        
        private string countryField;
        
        private string nationalityField;
        
        private string vatNoField;
        
        private string accountsField;
        
        /// <remarks/>
        public string response_code {
            get {
                return this.response_codeField;
            }
            set {
                this.response_codeField = value;
            }
        }
        
        /// <remarks/>
        public string response_description {
            get {
                return this.response_descriptionField;
            }
            set {
                this.response_descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerNum {
            get {
                return this.customerNumField;
            }
            set {
                this.customerNumField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string alternativeFirstName {
            get {
                return this.alternativeFirstNameField;
            }
            set {
                this.alternativeFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string alternativeLastName {
            get {
                return this.alternativeLastNameField;
            }
            set {
                this.alternativeLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public Gender Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string StreetNo {
            get {
                return this.streetNoField;
            }
            set {
                this.streetNoField = value;
            }
        }
        
        /// <remarks/>
        public string PoBpx {
            get {
                return this.poBpxField;
            }
            set {
                this.poBpxField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string VatNo {
            get {
                return this.vatNoField;
            }
            set {
                this.vatNoField = value;
            }
        }
        
        /// <remarks/>
        public string Accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Wahh2UChangeNumberInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private string bookingCodeField;
        
        private string iMSIField;
        
        private string idNumberField;
        
        private string idTypeField;
        
        private string mSISDNField;
        
        private string nationalityField;
        
        private string newMSISDNField;
        
        private SimAccountType simAccountTypeField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public string BookingCode {
            get {
                return this.bookingCodeField;
            }
            set {
                this.bookingCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IdType {
            get {
                return this.idTypeField;
            }
            set {
                this.idTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public string NewMSISDN {
            get {
                return this.newMSISDNField;
            }
            set {
                this.newMSISDNField = value;
            }
        }
        
        /// <remarks/>
        public SimAccountType SimAccountType {
            get {
                return this.simAccountTypeField;
            }
            set {
                this.simAccountTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SimAccountType {
        
        /// <remarks/>
        Distributor,
        
        /// <remarks/>
        Dealer,
        
        /// <remarks/>
        Pos,
        
        /// <remarks/>
        Customer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Wahh2USubscriptionInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private string dealerCodeField;
        
        private string iMSIField;
        
        private string mSISDNField;
        
        private string pUKField;
        
        private string memberCodeField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public string DealerCode {
            get {
                return this.dealerCodeField;
            }
            set {
                this.dealerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string PUK {
            get {
                return this.pUKField;
            }
            set {
                this.pUKField = value;
            }
        }
        
        /// <remarks/>
        public string memberCode {
            get {
                return this.memberCodeField;
            }
            set {
                this.memberCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WahhDealer {
        
        private string dealerCodeField;
        
        private string dealerNameField;
        
        /// <remarks/>
        public string DealerCode {
            get {
                return this.dealerCodeField;
            }
            set {
                this.dealerCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DealerName {
            get {
                return this.dealerNameField;
            }
            set {
                this.dealerNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BestMobileSubscriptionInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private string iMSIField;
        
        private string mSISDNField;
        
        private string memberCodeField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public string IMSI {
            get {
                return this.iMSIField;
            }
            set {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        public string MSISDN {
            get {
                return this.mSISDNField;
            }
            set {
                this.mSISDNField = value;
            }
        }
        
        /// <remarks/>
        public string memberCode {
            get {
                return this.memberCodeField;
            }
            set {
                this.memberCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum GenderEnuminater {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        FEMALE,
        
        /// <remarks/>
        MALE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Operators {
        
        /// <remarks/>
        TUNETALK,
        
        /// <remarks/>
        ALTEL,
        
        /// <remarks/>
        REDTONE,
        
        /// <remarks/>
        XOX,
        
        /// <remarks/>
        MERCHANTTRADE,
        
        /// <remarks/>
        DIGI,
        
        /// <remarks/>
        TRON,
        
        /// <remarks/>
        CLIXSTER,
        
        /// <remarks/>
        UMOBILE,
        
        /// <remarks/>
        EASIA,
        
        /// <remarks/>
        FRIENDI,
        
        /// <remarks/>
        MAXIS,
        
        /// <remarks/>
        TELIN,
        
        /// <remarks/>
        CELCOM,
        
        /// <remarks/>
        MUKMINFON,
        
        /// <remarks/>
        BESTMOBILE,
        
        /// <remarks/>
        MYPREPAID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum VoucherItem {
        
        /// <remarks/>
        vouchertype,
        
        /// <remarks/>
        serialno,
        
        /// <remarks/>
        numberseries,
        
        /// <remarks/>
        currency,
        
        /// <remarks/>
        denomination,
        
        /// <remarks/>
        retailer,
        
        /// <remarks/>
        status,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SIMItem {
        
        /// <remarks/>
        iccid,
        
        /// <remarks/>
        imsi,
        
        /// <remarks/>
        initial_pin1,
        
        /// <remarks/>
        initial_pin2,
        
        /// <remarks/>
        puk1,
        
        /// <remarks/>
        puk2,
        
        /// <remarks/>
        retailer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ModifyCustomerData {
        
        /// <remarks/>
        cellphone,
        
        /// <remarks/>
        email,
        
        /// <remarks/>
        firstname,
        
        /// <remarks/>
        lastname,
        
        /// <remarks/>
        birthdate,
        
        /// <remarks/>
        homephone,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SubscriptionItem {
        
        /// <remarks/>
        subscriptiontype,
        
        /// <remarks/>
        expiry_date,
        
        /// <remarks/>
        locale,
        
        /// <remarks/>
        sims,
        
        /// <remarks/>
        account_number,
        
        /// <remarks/>
        iccids,
        
        /// <remarks/>
        spoken_locale,
        
        /// <remarks/>
        phone_numbers,
        
        /// <remarks/>
        status,
        
        /// <remarks/>
        blocked,
        
        /// <remarks/>
        retailer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum AccountItem {
        
        /// <remarks/>
        account_type,
        
        /// <remarks/>
        balance,
        
        /// <remarks/>
        available_balance,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CreditTransferItem {
        
        /// <remarks/>
        p_pin,
        
        /// <remarks/>
        p_maxamount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SubscribtionPropertyName {
        
        /// <remarks/>
        phoneno,
        
        /// <remarks/>
        locale,
        
        /// <remarks/>
        sendpostcallbalance,
        
        /// <remarks/>
        spokenlocale,
        
        /// <remarks/>
        password,
        
        /// <remarks/>
        expiry_date,
        
        /// <remarks/>
        status,
        
        /// <remarks/>
        subscriptiontype,
        
        /// <remarks/>
        blocked,
        
        /// <remarks/>
        unbarrefill,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SubscibtionPropertyValue {
        
        /// <remarks/>
        en_GB,
        
        /// <remarks/>
        ar,
        
        /// <remarks/>
        en_NZ,
        
        /// <remarks/>
        ar_SA,
        
        /// <remarks/>
        ur,
        
        /// <remarks/>
        hi,
        
        /// <remarks/>
        bn,
        
        /// <remarks/>
        ml,
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
        
        /// <remarks/>
        yes,
        
        /// <remarks/>
        no,
        
        /// <remarks/>
        activeInUse,
        
        /// <remarks/>
        Frozen,
        
        /// <remarks/>
        Cold,
        
        /// <remarks/>
        ms,
        
        /// <remarks/>
        tl,
        
        /// <remarks/>
        zh,
        
        /// <remarks/>
        id,
        
        /// <remarks/>
        vi,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        blockall,
        
        /// <remarks/>
        blockchargeactivity,
        
        /// <remarks/>
        unblock,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventHandler(object sender, ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateBestMobileSubscriberWithDynamicAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string assignedMSISDN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateBestMobileSubscriberWithPortInCompletedEventHandler(object sender, ActivateBestMobileSubscriberWithPortInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateBestMobileSubscriberWithPortInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateBestMobileSubscriberWithPortInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFromMainAccountToCounterDifferentAccountCompletedEventHandler(object sender, TransferFromMainAccountToCounterDifferentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFromMainAccountToCounterDifferentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFromMainAccountToCounterDifferentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFromCounterToMainDifferentAccountCompletedEventHandler(object sender, TransferFromCounterToMainDifferentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFromCounterToMainDifferentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFromCounterToMainDifferentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddFNFOnnetNumberCompletedEventHandler(object sender, AddFNFOnnetNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFNFOnnetNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFNFOnnetNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveFNFOnnetNumberCompletedEventHandler(object sender, RemoveFNFOnnetNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFNFOnnetNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFNFOnnetNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFNFNumbersCompletedEventHandler(object sender, GetFNFNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFNFNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFNFNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] friends {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VoucherDataVTCompletedEventHandler(object sender, VoucherDataVTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoucherDataVTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoucherDataVTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AssociateVouchersVTCompletedEventHandler(object sender, AssociateVouchersVTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssociateVouchersVTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssociateVouchersVTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReceiveVouchersVTCompletedEventHandler(object sender, ReceiveVouchersVTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveVouchersVTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveVouchersVTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeActivateVouchersCompletedEventHandler(object sender, DeActivateVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeActivateVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeActivateVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AssociateSimsCompletedEventHandler(object sender, AssociateSimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssociateSimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssociateSimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReceiveSimsCompletedEventHandler(object sender, ReceiveSimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveSimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveSimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateVouchersVTCompletedEventHandler(object sender, ActivateVouchersVTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateVouchersVTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateVouchersVTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateSimsCompletedEventHandler(object sender, ActivateSimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateSimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateSimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeActivateSimsCompletedEventHandler(object sender, DeActivateSimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeActivateSimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeActivateSimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeAssociateSimsCompletedEventHandler(object sender, DeAssociateSimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeAssociateSimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeAssociateSimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWahhDealersCompletedEventHandler(object sender, GetWahhDealersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWahhDealersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWahhDealersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WahhDealer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WahhDealer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int responseCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string responseMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateWahh2USubscriberWithDynamicAllocationCompletedEventHandler(object sender, ActivateWahh2USubscriberWithDynamicAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateWahh2USubscriberWithDynamicAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateWahh2USubscriberWithDynamicAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string msisdn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NotifyWahh2UNumberChangeCompletedEventHandler(object sender, NotifyWahh2UNumberChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyWahh2UNumberChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyWahh2UNumberChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NotifyWahh2UMobileSIMReplacementCompletedEventHandler(object sender, NotifyWahh2UMobileSIMReplacementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyWahh2UMobileSIMReplacementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyWahh2UMobileSIMReplacementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DealerToCustomerTransferCreditCompletedEventHandler(object sender, DealerToCustomerTransferCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealerToCustomerTransferCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealerToCustomerTransferCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int responseCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string responseMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSIMValueByIMSICompletedEventHandler(object sender, GetSIMValueByIMSICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSIMValueByIMSICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSIMValueByIMSICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSIMValueByICCIDCompletedEventHandler(object sender, GetSIMValueByICCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSIMValueByICCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSIMValueByICCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerDataByAccountNumberCompletedEventHandler(object sender, GetCustomerDataByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerDataByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerDataByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyCustomerDataByAccountNumberCompletedEventHandler(object sender, ModifyCustomerDataByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCustomerDataByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCustomerDataByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateIDTypeByAccountNumberCompletedEventHandler(object sender, UpdateIDTypeByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIDTypeByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIDTypeByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountDataByAccountNoCompletedEventHandler(object sender, GetAccountDataByAccountNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDataByAccountNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDataByAccountNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AccountData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckPortInNumberCompletedEventHandler(object sender, CheckPortInNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPortInNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPortInNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DRMSActivity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DRMSActivity)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int responseCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string responseMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NotifyWahh2UMobileActivationWithPortInCompletedEventHandler(object sender, NotifyWahh2UMobileActivationWithPortInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyWahh2UMobileActivationWithPortInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyWahh2UMobileActivationWithPortInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NotifyWahh2UMobilePortInResubmissionCompletedEventHandler(object sender, NotifyWahh2UMobilePortInResubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyWahh2UMobilePortInResubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyWahh2UMobilePortInResubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReleaseLiftNumbersCompletedEventHandler(object sender, ReleaseLiftNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseLiftNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseLiftNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustCounterValueUsingNobillUnitsCompletedEventHandler(object sender, AdjustCounterValueUsingNobillUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustCounterValueUsingNobillUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustCounterValueUsingNobillUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendSMPPSMSCompletedEventHandler(object sender, SendSMPPSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMPPSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMPPSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendHTTPSMSCompletedEventHandler(object sender, SendHTTPSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendHTTPSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendHTTPSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChargeEventCompletedEventHandler(object sender, ChargeEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChargeEventWithCreditAbilityCompletedEventHandler(object sender, ChargeEventWithCreditAbilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeEventWithCreditAbilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeEventWithCreditAbilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string chargeReference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreditEventCompletedEventHandler(object sender, CreditEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChargeReservedEventCompletedEventHandler(object sender, ChargeReservedEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeReservedEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeReservedEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReserveEventCompletedEventHandler(object sender, ReserveEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int reservationCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelReservationCompletedEventHandler(object sender, CancelReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscriptionValueCompletedEventHandler(object sender, GetSubscriptionValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscriptionValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscriptionValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSimDataByICCIDCompletedEventHandler(object sender, GetSimDataByICCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimDataByICCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimDataByICCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEkiCompletedEventHandler(object sender, GetEkiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEkiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEkiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string eKi {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSimDataByIMSICompletedEventHandler(object sender, GetSimDataByIMSICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimDataByIMSICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimDataByIMSICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscriptionValueByIMSICompletedEventHandler(object sender, GetSubscriptionValueByIMSICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscriptionValueByIMSICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscriptionValueByIMSICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscriptionValueByICCIDCompletedEventHandler(object sender, GetSubscriptionValueByICCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscriptionValueByICCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscriptionValueByICCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscriptionValueByIMSIExCompletedEventHandler(object sender, GetSubscriptionValueByIMSIExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscriptionValueByIMSIExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscriptionValueByIMSIExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string imsi {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferCounterFundWithAmountCompletedEventHandler(object sender, TransferCounterFundWithAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCounterFundWithAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCounterFundWithAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAndReserveNumberForActivationCompletedEventHandler(object sender, GetAndReserveNumberForActivationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAndReserveNumberForActivationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAndReserveNumberForActivationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reservedNum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnReserveNumberForActivationCompletedEventHandler(object sender, UnReserveNumberForActivationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnReserveNumberForActivationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnReserveNumberForActivationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateNumberToWrongStatusCompletedEventHandler(object sender, UpdateNumberToWrongStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNumberToWrongStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNumberToWrongStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetRBTStatusCompletedEventHandler(object sender, SetRBTStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRBTStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRBTStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerByNumberCompletedEventHandler(object sender, GetCustomerByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerDetails details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerCompletedEventHandler(object sender, GetCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerDetails details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRetailerCompletedEventHandler(object sender, GetRetailerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRetailerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRetailerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string retailer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerByIMSICompletedEventHandler(object sender, GetCustomerByIMSICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByIMSICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByIMSICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerDetails details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerDetails)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerByNumberCompletedEventHandler(object sender, UpdateCustomerByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReplaceSIMwithCountersCompletedEventHandler(object sender, ReplaceSIMwithCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceSIMwithCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceSIMwithCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReplaceSIMCompletedEventHandler(object sender, ReplaceSIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceSIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceSIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFundCompletedEventHandler(object sender, TransferFundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFromMainAccountToCounterCompletedEventHandler(object sender, TransferFromMainAccountToCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFromMainAccountToCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFromMainAccountToCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFromCounterToMainAccountCompletedEventHandler(object sender, TransferFromCounterToMainAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFromCounterToMainAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFromCounterToMainAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferFromCounterToMainAccountDifferentMSISDNCompletedEventHandler(object sender, TransferFromCounterToMainAccountDifferentMSISDNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferFromCounterToMainAccountDifferentMSISDNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferFromCounterToMainAccountDifferentMSISDNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferMoneyCompletedEventHandler(object sender, TransferMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferCounterFundCompletedEventHandler(object sender, TransferCounterFundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCounterFundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCounterFundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCustomerCompletedEventHandler(object sender, DeleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCustomerPortOutCompletedEventHandler(object sender, DeleteCustomerPortOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerPortOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerPortOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteAccountCompletedEventHandler(object sender, DeleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeletePhoneNumberCompletedEventHandler(object sender, DeletePhoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSIMValueCompletedEventHandler(object sender, GetSIMValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSIMValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSIMValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateIDTypeCompletedEventHandler(object sender, UpdateIDTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIDTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIDTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetIDTypeCompletedEventHandler(object sender, GetIDTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIDTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIDTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public IDType idTypeValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IDType)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckOnlineRechargeAdjustmentCompletedEventHandler(object sender, CheckOnlineRechargeAdjustmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOnlineRechargeAdjustmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOnlineRechargeAdjustmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddCustomerServiceCompletedEventHandler(object sender, AddCustomerServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomerServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomerServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReuseSIMCompletedEventHandler(object sender, ReuseSIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReuseSIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReuseSIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnblockChargedActivitiesCompletedEventHandler(object sender, UnblockChargedActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnblockChargedActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnblockChargedActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveCustomerServiceCompletedEventHandler(object sender, RemoveCustomerServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCustomerServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCustomerServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckCustomerServiceCompletedEventHandler(object sender, CheckCustomerServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCustomerServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCustomerServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExtendSubscriptionExpiryCompletedEventHandler(object sender, ExtendSubscriptionExpiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtendSubscriptionExpiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtendSubscriptionExpiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExtendCounterExpiryCompletedEventHandler(object sender, ExtendCounterExpiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtendCounterExpiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtendCounterExpiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExtendCustomerServiceExpiryCompletedEventHandler(object sender, ExtendCustomerServiceExpiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtendCustomerServiceExpiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtendCustomerServiceExpiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountValueCompletedEventHandler(object sender, GetAccountValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCreditTransferValueByServiceNameCompletedEventHandler(object sender, GetCreditTransferValueByServiceNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditTransferValueByServiceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditTransferValueByServiceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCreditTransferValueCompletedEventHandler(object sender, GetCreditTransferValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditTransferValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditTransferValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string itemValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChargeMMSCompletedEventHandler(object sender, ChargeMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RechargeAmountCompletedEventHandler(object sender, RechargeAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RechargeAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RechargeAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustAccountBalanceCompletedEventHandler(object sender, AdjustAccountBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustAccountBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustAccountBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustAccountByReasonCompletedEventHandler(object sender, AdjustAccountByReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustAccountByReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustAccountByReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustCounterBalanceCompletedEventHandler(object sender, AdjustCounterBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustCounterBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustCounterBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustCounterValueCompletedEventHandler(object sender, AdjustCounterValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustCounterValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustCounterValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountCountersCompletedEventHandler(object sender, GetAccountCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Counter[] counters {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Counter[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPropertyValueCompletedEventHandler(object sender, GetPropertyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string propertyValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountDataCompletedEventHandler(object sender, GetAccountDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public AccountData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerDataCompletedEventHandler(object sender, GetCustomerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscribtionDataCompletedEventHandler(object sender, GetSubscribtionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribtionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribtionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SubscribtionData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscribtionData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTransactionsDataCompletedEventHandler(object sender, GetTransactionsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public collectionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTransactionsDatabyQuantityCompletedEventHandler(object sender, GetTransactionsDatabyQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsDatabyQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsDatabyQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public collectionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VoucherrefillCompletedEventHandler(object sender, VoucherrefillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoucherrefillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoucherrefillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public VoucherRefill details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VoucherRefill)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LastCalledNumberCompletedEventHandler(object sender, LastCalledNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastCalledNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastCalledNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public collectionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSimDataCompletedEventHandler(object sender, GetSimDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SIMData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SIMData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetPropertyCompletedEventHandler(object sender, SetPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void modifySubscribtionCompletedEventHandler(object sender, modifySubscribtionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifySubscribtionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifySubscribtionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateRejectionReasonCompletedEventHandler(object sender, UpdateRejectionReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRejectionReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRejectionReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyCustomerServiceCompletedEventHandler(object sender, ModifyCustomerServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCustomerServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCustomerServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerServiceDataCompletedEventHandler(object sender, GetCustomerServiceDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerServiceDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerServiceDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerServiceData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerServiceData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPropertiesValuesCompletedEventHandler(object sender, GetPropertiesValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PropertiesValues details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropertiesValues)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListOfCustomerServicesCompletedEventHandler(object sender, ListOfCustomerServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfCustomerServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfCustomerServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void modifyCustomerDataCompletedEventHandler(object sender, modifyCustomerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyCustomerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyCustomerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TransferCrediteCompletedEventHandler(object sender, TransferCrediteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCrediteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCrediteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReplacePhoneNumberCompletedEventHandler(object sender, ReplacePhoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplacePhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplacePhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReplacePhoneNumberPortInCompletedEventHandler(object sender, ReplacePhoneNumberPortInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplacePhoneNumberPortInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplacePhoneNumberPortInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAvilableNumbersCompletedEventHandler(object sender, GetAvilableNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvilableNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvilableNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public collectionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionData[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReserveSpecialNumberCompletedEventHandler(object sender, ReserveSpecialNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveSpecialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveSpecialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnReserveNumberCompletedEventHandler(object sender, UnReserveNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnReserveNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnReserveNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSubscribtionDataByImsiCompletedEventHandler(object sender, GetSubscribtionDataByImsiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscribtionDataByImsiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscribtionDataByImsiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SubscribtionData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscribtionData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustDataCounterMBsCompletedEventHandler(object sender, AdjustDataCounterMBsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustDataCounterMBsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustDataCounterMBsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AdjustSMS_MINUTESCounterCompletedEventHandler(object sender, AdjustSMS_MINUTESCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustSMS_MINUTESCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustSMS_MINUTESCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddCounterCompletedEventHandler(object sender, AddCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerExeCompletedEventHandler(object sender, UpdateCustomerExeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerExeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerExeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long nobillCustomerNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateIDTypeExeCompletedEventHandler(object sender, UpdateIDTypeExeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIDTypeExeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIDTypeExeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateSpecificCustomerCompletedEventHandler(object sender, CreateSpecificCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSpecificCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSpecificCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string customerNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSimDataByIMSIEXCompletedEventHandler(object sender, GetSimDataByIMSIEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimDataByIMSIEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimDataByIMSIEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SIMData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SIMData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateEVoucherCompletedEventHandler(object sender, CreateEVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateSubscriptionCompletedEventHandler(object sender, CreateSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCustomerForVirginActivationCompletedEventHandler(object sender, UpdateCustomerForVirginActivationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerForVirginActivationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerForVirginActivationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateAlternativeContactNumberCompletedEventHandler(object sender, UpdateAlternativeContactNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAlternativeContactNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAlternativeContactNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetVoucherDetailsCompletedEventHandler(object sender, GetVoucherDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoucherDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoucherDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Voucher details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Voucher)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetVoucherPinCompletedEventHandler(object sender, GetVoucherPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVoucherPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVoucherPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InvalidateVoucherCompletedEventHandler(object sender, InvalidateVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvalidateVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvalidateVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BlockVoucherCompletedEventHandler(object sender, BlockVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BlockVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UnblockVoucherCompletedEventHandler(object sender, UnblockVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnblockVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnblockVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateVoucherCompletedEventHandler(object sender, ActivateVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCustomerRollbackCompletedEventHandler(object sender, DeleteCustomerRollbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerRollbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerRollbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetVirginCreditTransferDataCompletedEventHandler(object sender, GetVirginCreditTransferDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVirginCreditTransferDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVirginCreditTransferDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CustomerServiceData details {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerServiceData)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerServiceExpiryCompletedEventHandler(object sender, GetCustomerServiceExpiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerServiceExpiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerServiceExpiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string expiryDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetSubscriptionPropertyCompletedEventHandler(object sender, SetSubscriptionPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSubscriptionPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSubscriptionPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateBestMobileSubscriberCompletedEventHandler(object sender, ActivateBestMobileSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateBestMobileSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateBestMobileSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591