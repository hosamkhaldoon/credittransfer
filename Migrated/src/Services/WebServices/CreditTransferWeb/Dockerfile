# This code was generated by Cursor
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

# Create logs directory
RUN mkdir -p /app/logs

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy solution file
COPY ["CreditTransfer.Modern.sln", "."]

# Copy project files
COPY ["src/Services/WebServices/CreditTransferWeb/CreditTransfer.Services.WebHandler.csproj", "src/Services/WebServices/CreditTransferWeb/"]
COPY ["src/Core/Application/CreditTransfer.Core.Application.csproj", "src/Core/Application/"]
COPY ["src/Core/Authentication/CreditTransfer.Core.Authentication.csproj", "src/Core/Authentication/"]
COPY ["src/Core/Domain/CreditTransfer.Core.Domain.csproj", "src/Core/Domain/"]
COPY ["src/Infrastructure/CreditTransfer.Infrastructure.csproj", "src/Infrastructure/"]

# Restore dependencies
RUN dotnet restore "src/Services/WebServices/CreditTransferWeb/CreditTransfer.Services.WebHandler.csproj"

# Copy source code
COPY . .

# Build the application
WORKDIR "/src/src/Services/WebServices/CreditTransferWeb"
RUN dotnet build "CreditTransfer.Services.WebHandler.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "CreditTransfer.Services.WebHandler.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

COPY --from=publish /app/publish .

# Set environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:80/health || exit 1

ENTRYPOINT ["dotnet", "CreditTransfer.Services.WebHandler.dll"] 